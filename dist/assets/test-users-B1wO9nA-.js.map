{"version":3,"file":"test-users-B1wO9nA-.js","sources":["../../src/pages/admin/test-users.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { Users, UserPlus, CheckCircle, AlertCircle, Copy, Eye } from \"lucide-react\";\nimport Sidebar from \"@/components/layout/Sidebar\";\nimport Header from \"@/components/layout/Header\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Separator } from \"@/components/ui/separator\";\n\ninterface TestUser {\n  email: string;\n  password: string;\n  tier: string;\n}\n\nexport default function TestUsersPage() {\n  const { toast } = useToast();\n  const [isCreating, setIsCreating] = useState(false);\n  const [createdUsers, setCreatedUsers] = useState<TestUser[]>([]);\n\n  const createTestUsersMutation = useMutation({\n    mutationFn: () => apiRequest(\"/api/admin/create-test-users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }),\n    onSuccess: (data) => {\n      setCreatedUsers(data.credentials || []);\n      toast({\n        title: \"Test Users Created\",\n        description: `Successfully created ${data.users?.length || 0} test users`,\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/users\"] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to create test users\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleCreateTestUsers = () => {\n    setIsCreating(true);\n    createTestUsersMutation.mutate();\n    setTimeout(() => setIsCreating(false), 2000);\n  };\n\n  const copyCredentials = (user: TestUser) => {\n    const text = `Email: ${user.email}\\nPassword: ${user.password}\\nTier: ${user.tier}`;\n    navigator.clipboard.writeText(text);\n    toast({\n      title: \"Copied\",\n      description: \"User credentials copied to clipboard\",\n    });\n  };\n\n  const testAllUsers = () => {\n    toast({\n      title: \"Test Instructions\",\n      description: \"Use these credentials to test different subscription levels. Each user has different feature access.\",\n    });\n  };\n\n  return (\n    <div className=\"flex h-screen bg-background\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col overflow-hidden ml-0 md:ml-64\">\n        <Header />\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"container mx-auto px-4 py-6 space-y-6\">\n            {/* Header */}\n            <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n              <div>\n                <h1 className=\"text-3xl font-bold tracking-tight\">Test Users Management</h1>\n                <p className=\"text-muted-foreground\">\n                  Create and manage test users for different subscription levels\n                </p>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Button \n                  onClick={handleCreateTestUsers}\n                  disabled={isCreating || createTestUsersMutation.isPending}\n                  className=\"flex items-center gap-2\"\n                >\n                  <UserPlus className=\"h-4 w-4\" />\n                  {isCreating ? \"Creating...\" : \"Create Test Users\"}\n                </Button>\n                {createdUsers.length > 0 && (\n                  <Button variant=\"outline\" onClick={testAllUsers}>\n                    <Eye className=\"h-4 w-4 mr-2\" />\n                    Test Instructions\n                  </Button>\n                )}\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Subscription Level Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm\">Free Tier</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2 text-xs\">\n                    <p>• Basic signals only</p>\n                    <p>• 3 tickers max</p>\n                    <p>• Email alerts only</p>\n                    <p>• No advanced features</p>\n                  </div>\n                  <Badge variant=\"outline\" className=\"mt-2\">Limited Access</Badge>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm\">Basic Tier</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2 text-xs\">\n                    <p>• Premium signals</p>\n                    <p>• 10 tickers max</p>\n                    <p>• SMS + Email alerts</p>\n                    <p>• Heatmap analysis</p>\n                    <p>• Trading playground</p>\n                  </div>\n                  <Badge variant=\"secondary\" className=\"mt-2\">Good Access</Badge>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm\">Premium Tier</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2 text-xs\">\n                    <p>• All Basic features</p>\n                    <p>• 25 tickers max</p>\n                    <p>• Advanced analytics</p>\n                    <p>• Cycle forecasting</p>\n                    <p>• Telegram alerts</p>\n                    <p>• API access</p>\n                  </div>\n                  <Badge className=\"mt-2\">Full Access</Badge>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader className=\"pb-2\">\n                  <CardTitle className=\"text-sm\">Pro Tier</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2 text-xs\">\n                    <p>• All Premium features</p>\n                    <p>• Unlimited tickers</p>\n                    <p>• Custom indicators</p>\n                    <p>• White-label options</p>\n                    <p>• Priority support</p>\n                  </div>\n                  <Badge variant=\"default\" className=\"mt-2 bg-gradient-to-r from-yellow-400 to-yellow-600 text-black\">\n                    Ultimate Access\n                  </Badge>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Test User Credentials */}\n            {createdUsers.length > 0 && (\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                    Test User Credentials\n                  </CardTitle>\n                  <CardDescription>\n                    Use these credentials to test different subscription access levels\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                    {createdUsers.map((user, index) => (\n                      <Card key={index} className=\"bg-muted/50\">\n                        <CardContent className=\"pt-4\">\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center justify-between\">\n                              <Badge \n                                className={\n                                  user.tier === 'free' ? 'bg-gray-500' :\n                                  user.tier === 'basic' ? 'bg-blue-500' :\n                                  user.tier === 'premium' ? 'bg-purple-500' :\n                                  'bg-gradient-to-r from-yellow-400 to-yellow-600 text-black'\n                                }\n                              >\n                                {user.tier.toUpperCase()}\n                              </Badge>\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => copyCredentials(user)}\n                                className=\"h-6 w-6 p-0\"\n                              >\n                                <Copy className=\"h-3 w-3\" />\n                              </Button>\n                            </div>\n                            \n                            <div className=\"text-sm space-y-1\">\n                              <p className=\"font-medium\">Email:</p>\n                              <p className=\"font-mono text-xs bg-background px-2 py-1 rounded\">\n                                {user.email}\n                              </p>\n                            </div>\n                            \n                            <div className=\"text-sm space-y-1\">\n                              <p className=\"font-medium\">Password:</p>\n                              <p className=\"font-mono text-xs bg-background px-2 py-1 rounded\">\n                                {user.password}\n                              </p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {/* Instructions */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <AlertCircle className=\"h-5 w-5 text-blue-500\" />\n                  Testing Instructions\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <Alert>\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>\n                    <strong>How to test subscription restrictions:</strong>\n                    <br />\n                    1. Logout from your current admin account\n                    <br />\n                    2. Login with each test user to see different feature access\n                    <br />\n                    3. Navigate to Dashboard, Multi-ticker, Trading Playground, etc.\n                    <br />\n                    4. Premium features will show upgrade prompts for lower tiers\n                  </AlertDescription>\n                </Alert>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Features to Test:</h4>\n                    <ul className=\"space-y-1 text-muted-foreground\">\n                      <li>• Multi-ticker dashboard</li>\n                      <li>• 200-week heatmap analysis</li>\n                      <li>• Cycle forecasting</li>\n                      <li>• Advanced analytics tab</li>\n                      <li>• SMS/Telegram alerts setup</li>\n                      <li>• Trading playground (simulation)</li>\n                    </ul>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Expected Behavior:</h4>\n                    <ul className=\"space-y-1 text-muted-foreground\">\n                      <li>• Free users see upgrade prompts</li>\n                      <li>• Basic users access some premium features</li>\n                      <li>• Premium users access most features</li>\n                      <li>• Pro users access everything</li>\n                      <li>• Ticker limits enforced properly</li>\n                      <li>• Alert method restrictions applied</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["TestUsersPage","toast","useToast","isCreating","setIsCreating","useState","createdUsers","setCreatedUsers","createTestUsersMutation","useMutation","apiRequest","data","_a","queryClient","error","handleCreateTestUsers","copyCredentials","user","text","testAllUsers","jsxs","jsx","Sidebar","Header","Button","UserPlus","Eye","Separator","Card","CardHeader","CardTitle","CardContent","Badge","CheckCircle","CardDescription","index","Copy","AlertCircle","Alert","AlertDescription"],"mappings":"wyBAmBA,SAAwBA,GAAgB,CAChC,KAAA,CAAE,MAAAC,CAAM,EAAIC,EAAS,EACrB,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAK,EAC5C,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAqB,CAAA,CAAE,EAEzDG,EAA0BC,EAAY,CAC1C,WAAY,IAAMC,EAAW,+BAAgC,CAC3D,OAAQ,OACR,QAAS,CACP,eAAgB,kBAAA,CAClB,CACD,EACD,UAAYC,GAAS,OACHJ,EAAAI,EAAK,aAAe,EAAE,EAChCV,EAAA,CACJ,MAAO,qBACP,YAAa,0BAAwBW,EAAAD,EAAK,QAAL,YAAAC,EAAY,SAAU,CAAC,aAAA,CAC7D,EACDC,EAAY,kBAAkB,CAAE,SAAU,CAAC,kBAAkB,EAAG,CAClE,EACA,QAAUC,GAAe,CACjBb,EAAA,CACJ,MAAO,QACP,YAAaa,EAAM,SAAW,8BAC9B,QAAS,aAAA,CACV,CAAA,CACH,CACD,EAEKC,EAAwB,IAAM,CAClCX,EAAc,EAAI,EAClBI,EAAwB,OAAO,EAC/B,WAAW,IAAMJ,EAAc,EAAK,EAAG,GAAI,CAC7C,EAEMY,EAAmBC,GAAmB,CACpC,MAAAC,EAAO,UAAUD,EAAK,KAAK;AAAA,YAAeA,EAAK,QAAQ;AAAA,QAAWA,EAAK,IAAI,GACvE,UAAA,UAAU,UAAUC,CAAI,EAC5BjB,EAAA,CACJ,MAAO,SACP,YAAa,sCAAA,CACd,CACH,EAEMkB,EAAe,IAAM,CACnBlB,EAAA,CACJ,MAAO,oBACP,YAAa,sGAAA,CACd,CACH,EAGE,OAAAmB,EAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAC,EAAA,IAACC,EAAQ,EAAA,EACTF,EAAAA,KAAC,MAAI,CAAA,UAAU,qDACb,SAAA,CAAAC,EAAA,IAACE,EAAO,EAAA,QACP,MAAI,CAAA,UAAU,yBACb,SAACH,EAAA,KAAA,MAAA,CAAI,UAAU,wCAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kEACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAqB,wBAAA,EACtEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,gEAAA,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAA,EAAA,KAACI,EAAA,CACC,QAAST,EACT,SAAUZ,GAAcK,EAAwB,UAChD,UAAU,0BAEV,SAAA,CAACa,EAAAA,IAAAI,EAAA,CAAS,UAAU,SAAU,CAAA,EAC7BtB,EAAa,cAAgB,mBAAA,CAAA,CAChC,EACCG,EAAa,OAAS,GACrBc,EAAAA,KAACI,GAAO,QAAQ,UAAU,QAASL,EACjC,SAAA,CAACE,EAAAA,IAAAK,EAAA,CAAI,UAAU,cAAe,CAAA,EAAE,mBAAA,CAElC,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,QAECC,EAAU,EAAA,EAGXP,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAACQ,EACC,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAW,UAAU,OACpB,SAAAR,EAAA,IAACS,GAAU,UAAU,UAAU,qBAAS,CAC1C,CAAA,SACCC,EACC,CAAA,SAAA,CAACX,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAAe,iBAAA,CAAA,EAClBA,EAAAA,IAAC,KAAE,SAAmB,qBAAA,CAAA,EACtBA,EAAAA,IAAC,KAAE,SAAsB,wBAAA,CAAA,CAAA,EAC3B,QACCW,EAAM,CAAA,QAAQ,UAAU,UAAU,OAAO,SAAc,gBAAA,CAAA,CAAA,CAC1D,CAAA,CAAA,EACF,SAECJ,EACC,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAW,UAAU,OACpB,SAAAR,EAAA,IAACS,GAAU,UAAU,UAAU,sBAAU,CAC3C,CAAA,SACCC,EACC,CAAA,SAAA,CAACX,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAiB,mBAAA,CAAA,EACpBA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,EACnBA,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAAkB,oBAAA,CAAA,EACrBA,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,CAAA,EACzB,QACCW,EAAM,CAAA,QAAQ,YAAY,UAAU,OAAO,SAAW,aAAA,CAAA,CAAA,CACzD,CAAA,CAAA,EACF,SAECJ,EACC,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAW,UAAU,OACpB,SAAAR,EAAA,IAACS,GAAU,UAAU,UAAU,wBAAY,CAC7C,CAAA,SACCC,EACC,CAAA,SAAA,CAACX,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAAgB,kBAAA,CAAA,EACnBA,EAAAA,IAAC,KAAE,SAAoB,sBAAA,CAAA,EACvBA,EAAAA,IAAC,KAAE,SAAmB,qBAAA,CAAA,EACtBA,EAAAA,IAAC,KAAE,SAAiB,mBAAA,CAAA,EACpBA,EAAAA,IAAC,KAAE,SAAY,cAAA,CAAA,CAAA,EACjB,EACCA,EAAA,IAAAW,EAAA,CAAM,UAAU,OAAO,SAAW,aAAA,CAAA,CAAA,CACrC,CAAA,CAAA,EACF,SAECJ,EACC,CAAA,SAAA,CAACP,EAAAA,IAAAQ,EAAA,CAAW,UAAU,OACpB,SAAAR,EAAA,IAACS,GAAU,UAAU,UAAU,oBAAQ,CACzC,CAAA,SACCC,EACC,CAAA,SAAA,CAACX,EAAAA,KAAA,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAsB,wBAAA,CAAA,EACzBA,EAAAA,IAAC,KAAE,SAAmB,qBAAA,CAAA,EACtBA,EAAAA,IAAC,KAAE,SAAmB,qBAAA,CAAA,EACtBA,EAAAA,IAAC,KAAE,SAAqB,uBAAA,CAAA,EACxBA,EAAAA,IAAC,KAAE,SAAkB,oBAAA,CAAA,CAAA,EACvB,QACCW,EAAM,CAAA,QAAQ,UAAU,UAAU,iEAAiE,SAEpG,iBAAA,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGC1B,EAAa,OAAS,GACrBc,EAAA,KAACQ,EACC,CAAA,SAAA,CAAAR,OAACS,EACC,CAAA,SAAA,CAACT,EAAAA,KAAAU,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACT,EAAAA,IAAAY,EAAA,CAAY,UAAU,wBAAyB,CAAA,EAAE,uBAAA,EAEpD,EACAZ,EAAAA,IAACa,GAAgB,SAEjB,oEAAA,CAAA,CAAA,EACF,EACAb,EAAAA,IAACU,GACC,SAACV,EAAA,IAAA,MAAA,CAAI,UAAU,uDACZ,SAAAf,EAAa,IAAI,CAACW,EAAMkB,UACtBP,EAAiB,CAAA,UAAU,cAC1B,SAACP,EAAAA,IAAAU,EAAA,CAAY,UAAU,OACrB,SAAAX,EAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAAAC,EAAA,IAACW,EAAA,CACC,UACEf,EAAK,OAAS,OAAS,cACvBA,EAAK,OAAS,QAAU,cACxBA,EAAK,OAAS,UAAY,gBAC1B,4DAGD,SAAAA,EAAK,KAAK,YAAY,CAAA,CACzB,EACAI,EAAA,IAACG,EAAA,CACC,KAAK,KACL,QAAQ,QACR,QAAS,IAAMR,EAAgBC,CAAI,EACnC,UAAU,cAEV,SAAAI,EAAAA,IAACe,EAAK,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CAC5B,EACF,EAEAhB,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,cAAc,SAAM,SAAA,EAChCA,EAAA,IAAA,IAAA,CAAE,UAAU,oDACV,WAAK,KACR,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACC,EAAA,IAAA,IAAA,CAAE,UAAU,cAAc,SAAS,YAAA,EACnCA,EAAA,IAAA,IAAA,CAAE,UAAU,oDACV,WAAK,QACR,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EAtCSc,CAuCX,CACD,CACH,CAAA,CACF,CAAA,CAAA,EACF,SAIDP,EACC,CAAA,SAAA,CAAAP,MAACQ,EACC,CAAA,SAAAT,EAAAA,KAACU,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACT,EAAAA,IAAAgB,EAAA,CAAY,UAAU,uBAAwB,CAAA,EAAE,sBAAA,CAAA,CAEnD,CACF,CAAA,EACAjB,EAAAA,KAACW,EAAY,CAAA,UAAU,YACrB,SAAA,CAAAX,OAACkB,EACC,CAAA,SAAA,CAACjB,EAAAA,IAAAgB,EAAA,CAAY,UAAU,SAAU,CAAA,SAChCE,EACC,CAAA,SAAA,CAAAlB,EAAAA,IAAC,UAAO,SAAsC,wCAAA,CAAA,QAC7C,KAAG,EAAA,EAAE,kDAEL,KAAG,EAAA,EAAE,qEAEL,KAAG,EAAA,EAAE,yEAEL,KAAG,EAAA,EAAE,+DAAA,CAER,CAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAiB,oBAAA,EACpDD,EAAAA,KAAC,KAAG,CAAA,UAAU,kCACZ,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BA,EAAAA,IAAC,MAAG,SAA2B,6BAAA,CAAA,EAC/BA,EAAAA,IAAC,MAAG,SAAmB,qBAAA,CAAA,EACvBA,EAAAA,IAAC,MAAG,SAAwB,0BAAA,CAAA,EAC5BA,EAAAA,IAAC,MAAG,SAA2B,6BAAA,CAAA,EAC/BA,EAAAA,IAAC,MAAG,SAAiC,mCAAA,CAAA,CAAA,CACvC,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAkB,qBAAA,EACrDD,EAAAA,KAAC,KAAG,CAAA,UAAU,kCACZ,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAgC,kCAAA,CAAA,EACpCA,EAAAA,IAAC,MAAG,SAA0C,4CAAA,CAAA,EAC9CA,EAAAA,IAAC,MAAG,SAAoC,sCAAA,CAAA,EACxCA,EAAAA,IAAC,MAAG,SAA6B,+BAAA,CAAA,EACjCA,EAAAA,IAAC,MAAG,SAAiC,mCAAA,CAAA,EACrCA,EAAAA,IAAC,MAAG,SAAmC,qCAAA,CAAA,CAAA,CACzC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAEJ"}