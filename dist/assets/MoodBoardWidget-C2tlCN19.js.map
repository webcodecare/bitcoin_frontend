{"version":3,"file":"MoodBoardWidget-C2tlCN19.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/sparkles.js","../../src/components/trading/MoodBoardWidget.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Sparkles = createLucideIcon(\"Sparkles\", [\n  [\n    \"path\",\n    {\n      d: \"M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z\",\n      key: \"4pj2yx\"\n    }\n  ],\n  [\"path\", { d: \"M20 3v4\", key: \"1olli1\" }],\n  [\"path\", { d: \"M22 5h-4\", key: \"1gvqau\" }],\n  [\"path\", { d: \"M4 17v2\", key: \"vumght\" }],\n  [\"path\", { d: \"M5 18H3\", key: \"zchphs\" }]\n]);\n\nexport { Sparkles as default };\n//# sourceMappingURL=sparkles.js.map\n","import { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { Link } from 'wouter';\nimport { Sparkles, ArrowRight, Activity } from 'lucide-react';\n\ninterface SignalMood {\n  id: string;\n  ticker: string;\n  signalType: 'buy' | 'sell';\n  price: string;\n  timestamp: string;\n  timeframe?: string;\n  mood: {\n    emoji: string;\n    sentiment: string;\n    strength: number;\n  };\n}\n\nconst MOOD_MAP = {\n  buy: [\n    { emoji: 'üöÄ', sentiment: 'Very Bullish', strength: 5 },\n    { emoji: 'üìà', sentiment: 'Bullish', strength: 4 },\n    { emoji: 'üíö', sentiment: 'Optimistic', strength: 3 },\n    { emoji: 'üü¢', sentiment: 'Cautious Buy', strength: 2 },\n    { emoji: '‚ö°', sentiment: 'Quick Buy', strength: 4 },\n  ],\n  sell: [\n    { emoji: 'üî¥', sentiment: 'Bearish', strength: 4 },\n    { emoji: 'üìâ', sentiment: 'Very Bearish', strength: 5 },\n    { emoji: '‚ö†Ô∏è', sentiment: 'Warning', strength: 3 },\n    { emoji: 'üíî', sentiment: 'Breakdown', strength: 5 },\n    { emoji: 'üîª', sentiment: 'Cautious Sell', strength: 2 },\n  ]\n};\n\nconst getQuickMood = (signal: any): SignalMood['mood'] => {\n  const signalType = signal.signalType.toLowerCase() as 'buy' | 'sell';\n  const moods = MOOD_MAP[signalType];\n  const randomIndex = Math.floor(Math.random() * moods.length);\n  return moods[randomIndex];\n};\n\nexport default function MoodBoardWidget() {\n  const [moodSignals, setMoodSignals] = useState<SignalMood[]>([]);\n\n  const { data: signals, isLoading } = useQuery({\n    queryKey: ['/api/signals'],\n    refetchInterval: 10000, // Refetch every 10 seconds\n  });\n\n  useEffect(() => {\n    if (signals) {\n      const recentSignals = signals.slice(0, 6).map((signal: any) => ({\n        ...signal,\n        mood: getQuickMood(signal)\n      }));\n      setMoodSignals(recentSignals);\n    }\n  }, [signals]);\n\n  const getTimeAgo = (timestamp: string): string => {\n    const now = new Date();\n    const signalTime = new Date(timestamp);\n    const diffMs = now.getTime() - signalTime.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    \n    if (diffMins < 1) return 'Now';\n    if (diffMins < 60) return `${diffMins}m`;\n    const diffHours = Math.floor(diffMins / 60);\n    if (diffHours < 24) return `${diffHours}h`;\n    return `${Math.floor(diffHours / 24)}d`;\n  };\n\n  const overallMood = () => {\n    if (moodSignals.length === 0) return { emoji: 'üòê', label: 'Neutral' };\n    const buySignals = moodSignals.filter(s => s.signalType === 'buy').length;\n    const sellSignals = moodSignals.filter(s => s.signalType === 'sell').length;\n    \n    if (buySignals > sellSignals) {\n      return { emoji: 'üòä', label: 'Bullish Mood' };\n    } else if (sellSignals > buySignals) {\n      return { emoji: 'üòü', label: 'Bearish Mood' };\n    } else {\n      return { emoji: 'üòê', label: 'Mixed Signals' };\n    }\n  };\n\n  const mood = overallMood();\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Sparkles className=\"w-5 h-5\" />\n            <span>Signal Mood</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"animate-pulse space-y-3\">\n            {Array.from({ length: 3 }, (_, i) => (\n              <div key={i} className=\"flex items-center space-x-3\">\n                <div className=\"w-8 h-8 bg-muted rounded-lg\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-muted rounded mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-2/3\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"hover:shadow-lg transition-shadow\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Sparkles className=\"w-5 h-5\" />\n            <span>Signal Mood</span>\n          </CardTitle>\n          <div className=\"flex items-center space-x-2\">\n            <motion.span \n              className=\"text-xl\"\n              animate={{ scale: [1, 1.1, 1] }}\n              transition={{ duration: 2, repeat: Infinity }}\n            >\n              {mood.emoji}\n            </motion.span>\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {mood.label}\n            </Badge>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pt-0\">\n        <div className=\"space-y-3\">\n          {moodSignals.length === 0 ? (\n            <div className=\"text-center py-4 text-muted-foreground\">\n              <Activity className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\n              <p className=\"text-sm\">No recent signals</p>\n            </div>\n          ) : (\n            moodSignals.slice(0, 4).map((signal) => (\n              <motion.div\n                key={signal.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                className=\"flex items-center space-x-3 p-2 rounded-lg hover:bg-muted/50 transition-colors\"\n              >\n                <span className=\"text-xl\">{signal.mood.emoji}</span>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"font-medium text-sm\">{signal.ticker}</span>\n                    <Badge \n                      variant={signal.signalType === 'buy' ? 'default' : 'destructive'}\n                      className=\"text-xs\"\n                    >\n                      {signal.signalType.toUpperCase()}\n                    </Badge>\n                    {signal.timeframe && (\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {signal.timeframe}\n                      </Badge>\n                    )}\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-xs text-muted-foreground\">\n                      ${parseFloat(signal.price).toLocaleString()}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {getTimeAgo(signal.timestamp)}\n                    </span>\n                  </div>\n                </div>\n              </motion.div>\n            ))\n          )}\n        </div>\n        \n        {moodSignals.length > 0 && (\n          <div className=\"pt-4 border-t mt-4\">\n            <Button asChild variant=\"outline\" className=\"w-full\" size=\"sm\">\n              <Link href=\"/mood-board\" className=\"flex items-center space-x-2\">\n                <span>View Full Mood Board</span>\n                <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </Button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}"],"names":["Sparkles","createLucideIcon","MOOD_MAP","getQuickMood","signal","signalType","moods","randomIndex","MoodBoardWidget","moodSignals","setMoodSignals","useState","signals","isLoading","useQuery","useEffect","recentSignals","getTimeAgo","timestamp","now","signalTime","diffMs","diffMins","diffHours","mood","buySignals","s","sellSignals","Card","jsx","CardHeader","jsxs","CardTitle","CardContent","_","i","motion","Badge","Activity","Button","Link","ArrowRight"],"mappings":"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","x_google_ignoreList":[0]}