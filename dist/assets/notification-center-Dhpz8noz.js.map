{"version":3,"file":"notification-center-Dhpz8noz.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/monitor.js","../../src/hooks/useNotifications.tsx","../../src/components/notifications/NotificationStats.tsx","../../src/components/notifications/ContextualAlert.tsx","../../src/pages/notification-center.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Monitor = createLucideIcon(\"Monitor\", [\n  [\"rect\", { width: \"20\", height: \"14\", x: \"2\", y: \"3\", rx: \"2\", key: \"48i651\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"21\", y2: \"21\", key: \"1svkeh\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"17\", y2: \"21\", key: \"vw1qmm\" }]\n]);\n\nexport { Monitor as default };\n//# sourceMappingURL=monitor.js.map\n","import { useState, useEffect, useCallback } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useWebSocket } from '@/hooks/useWebSocket';\nimport { apiRequest } from '@/lib/queryClient';\nimport { ContextualAlertData } from '@/components/notifications/ContextualAlert';\n\ninterface Notification {\n  id: string;\n  type: 'signal' | 'price' | 'news' | 'system' | 'achievement';\n  title: string;\n  message: string;\n  timestamp: string;\n  isRead: boolean;\n  isArchived: boolean;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  metadata?: {\n    symbol?: string;\n    price?: number;\n    change?: number;\n    signalType?: 'buy' | 'sell';\n  };\n}\n\ninterface NotificationPreferences {\n  enableSound: boolean;\n  enableBrowser: boolean;\n  enableContextual: boolean;\n  categories: {\n    signals: boolean;\n    price: boolean;\n    news: boolean;\n    system: boolean;\n    achievements: boolean;\n  };\n  priorities: {\n    low: boolean;\n    medium: boolean;\n    high: boolean;\n    critical: boolean;\n  };\n}\n\nexport function useNotifications() {\n  const [contextualAlerts, setContextualAlerts] = useState<ContextualAlertData[]>([]);\n  const [preferences, setPreferences] = useState<NotificationPreferences>({\n    enableSound: true,\n    enableBrowser: true,\n    enableContextual: true,\n    categories: {\n      signals: true,\n      price: true,\n      news: true,\n      system: true,\n      achievements: true,\n    },\n    priorities: {\n      low: true,\n      medium: true,\n      high: true,\n      critical: true,\n    },\n  });\n\n  const queryClient = useQueryClient();\n\n  // Fetch notifications\n  const { data: notifications = [], isLoading } = useQuery<Notification[]>({\n    queryKey: ['/api/notifications'],\n    refetchInterval: 30000,\n  });\n\n  // Fetch notification preferences\n  const { data: userPreferences } = useQuery<NotificationPreferences>({\n    queryKey: ['/api/user/notification-preferences'],\n  });\n\n  // Update preferences when data changes\n  useEffect(() => {\n    if (userPreferences) {\n      setPreferences(userPreferences);\n    }\n  }, [userPreferences]);\n\n  // Update preferences mutation\n  const updatePreferencesMutation = useMutation({\n    mutationFn: async (newPreferences: Partial<NotificationPreferences>) => {\n      return apiRequest('/api/user/notification-preferences', 'PUT', newPreferences);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/user/notification-preferences'] });\n    },\n  });\n\n  // WebSocket for real-time notifications\n  const { isConnected } = useWebSocket('ws://localhost:3000/ws', {\n    onMessage: (data: any) => {\n      if (data.type === 'notification') {\n        handleNewNotification(data.notification);\n      }\n    },\n  });\n\n  // Handle new notifications\n  const handleNewNotification = useCallback((notification: Notification) => {\n    // Update notifications list\n    queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n\n    // Check if notification should be shown based on preferences\n    if (!shouldShowNotification(notification)) {\n      return;\n    }\n\n    // Show contextual alert\n    if (preferences.enableContextual) {\n      const contextualAlert: ContextualAlertData = {\n        id: notification.id,\n        type: notification.type,\n        title: notification.title,\n        message: notification.message,\n        priority: notification.priority,\n        metadata: notification.metadata,\n      };\n\n      setContextualAlerts(prev => [contextualAlert, ...prev.slice(0, 4)]); // Keep max 5 alerts\n    }\n\n    // Play sound\n    if (preferences.enableSound && notification.priority !== 'low') {\n      playNotificationSound();\n    }\n\n    // Show browser notification\n    if (preferences.enableBrowser && 'Notification' in window && Notification.permission === 'granted') {\n      showBrowserNotification(notification);\n    }\n  }, [preferences, queryClient]);\n\n  const shouldShowNotification = (notification: Notification): boolean => {\n    // Check category preferences\n    if (!preferences.categories[notification.type as keyof typeof preferences.categories]) {\n      return false;\n    }\n\n    // Check priority preferences\n    if (!preferences.priorities[notification.priority as keyof typeof preferences.priorities]) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const playNotificationSound = () => {\n    try {\n      const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmYdBTSJ2O3PeDEEJnvH9N6TSA0SUqzh7aZQEwxMpOD1wGIdBTSJ2O3PeDEEJnvH9N6TSA0SUqzh7aZQEwxMpOD1wGIdBTSJ2O3PeDEEJnvH9N6TSA0SUqzh7aZQEwxMpOD1wGIdBTSJ2O3PeDEEJnvH9N6TSA0SUqzh7aZQEwxMpOD1wGId');\n      audio.volume = 0.3;\n      audio.play().catch(() => {\n        // Ignore audio errors in restricted environments\n      });\n    } catch (error) {\n      console.warn('Failed to play notification sound:', error);\n    }\n  };\n\n  const showBrowserNotification = (notification: Notification) => {\n    try {\n      const browserNotification = new Notification(notification.title, {\n        body: notification.message,\n        icon: '/favicon.ico',\n        badge: '/favicon.ico',\n        tag: notification.id,\n        requireInteraction: notification.priority === 'critical',\n      });\n\n      // Auto-close after 5 seconds unless critical\n      if (notification.priority !== 'critical') {\n        setTimeout(() => {\n          browserNotification.close();\n        }, 5000);\n      }\n\n      browserNotification.onclick = () => {\n        window.focus();\n        browserNotification.close();\n        // Navigate to relevant page based on notification type\n        if (notification.type === 'signal') {\n          window.location.href = '/trading';\n        } else if (notification.type === 'price') {\n          window.location.href = '/dashboard';\n        }\n      };\n    } catch (error) {\n      console.warn('Failed to show browser notification:', error);\n    }\n  };\n\n  // Request browser notification permission\n  const requestNotificationPermission = useCallback(async () => {\n    if ('Notification' in window && Notification.permission === 'default') {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return Notification.permission === 'granted';\n  }, []);\n\n  // Dismiss contextual alert\n  const dismissContextualAlert = useCallback((alertId: string) => {\n    setContextualAlerts(prev => prev.filter(alert => alert.id !== alertId));\n  }, []);\n\n  // Mark notification as read\n  const markAsRead = useMutation({\n    mutationFn: async (notificationId: string) => {\n      return apiRequest(`/api/notifications/${notificationId}/read`, 'PATCH');\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n    },\n  });\n\n  // Mark all as read\n  const markAllAsRead = useMutation({\n    mutationFn: async () => {\n      return apiRequest('/api/notifications/mark-all-read', 'PATCH');\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n    },\n  });\n\n  // Archive notification\n  const archiveNotification = useMutation({\n    mutationFn: async (notificationId: string) => {\n      return apiRequest(`/api/notifications/${notificationId}/archive`, 'PATCH');\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/notifications'] });\n    },\n  });\n\n  // Create test notification\n  const createTestNotification = useCallback((type: Notification['type'] = 'system') => {\n    const testNotification: Notification = {\n      id: `test-${Date.now()}`,\n      type,\n      title: `Test ${type} notification`,\n      message: `This is a test ${type} notification to verify the system is working correctly.`,\n      timestamp: new Date().toISOString(),\n      isRead: false,\n      isArchived: false,\n      priority: 'medium',\n      metadata: type === 'signal' ? {\n        symbol: 'BTCUSDT',\n        price: 45000,\n        change: 2.5,\n        signalType: 'buy' as const,\n      } : undefined,\n    };\n\n    handleNewNotification(testNotification);\n  }, [handleNewNotification]);\n\n  const unreadCount = notifications.filter(n => !n.isRead && !n.isArchived).length;\n\n  return {\n    notifications,\n    contextualAlerts,\n    preferences,\n    unreadCount,\n    isConnected,\n    isLoading,\n    \n    // Actions\n    markAsRead: markAsRead.mutate,\n    markAllAsRead: markAllAsRead.mutate,\n    archiveNotification: archiveNotification.mutate,\n    dismissContextualAlert,\n    updatePreferences: (newPrefs: Partial<NotificationPreferences>) => {\n      setPreferences(prev => ({ ...prev, ...newPrefs }));\n      updatePreferencesMutation.mutate(newPrefs);\n    },\n    requestNotificationPermission,\n    createTestNotification,\n    \n    // Status\n    isMarkingAsRead: markAsRead.isPending,\n    isMarkingAllAsRead: markAllAsRead.isPending,\n    isArchiving: archiveNotification.isPending,\n    isUpdatingPreferences: updatePreferencesMutation.isPending,\n  };\n}","import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  Bell, \n  CheckCircle, \n  AlertTriangle, \n  Activity, \n  TrendingUp,\n  TrendingDown,\n  Clock,\n  Settings\n} from 'lucide-react';\n\ninterface NotificationStats {\n  total: number;\n  unread: number;\n  byType: {\n    signal: number;\n    price: number;\n    news: number;\n    system: number;\n    achievement: number;\n  };\n  byPriority: {\n    critical: number;\n    high: number;\n    medium: number;\n    low: number;\n  };\n  lastWeek: number;\n  deliveryRate: number;\n}\n\ninterface NotificationHealth {\n  smsEnabled: boolean;\n  emailEnabled: boolean;\n  telegramEnabled: boolean;\n  pushEnabled: boolean;\n  webhookEnabled: boolean;\n  lastDelivery: string;\n  failedDeliveries: number;\n}\n\nexport default function NotificationStats() {\n  const { data: stats, isLoading: statsLoading } = useQuery<NotificationStats>({\n    queryKey: ['/api/notifications/stats'],\n    refetchInterval: 30000,\n  });\n\n  const { data: health, isLoading: healthLoading } = useQuery<NotificationHealth>({\n    queryKey: ['/api/notifications/health'],\n    refetchInterval: 60000,\n  });\n\n  if (statsLoading || healthLoading) {\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-center\">\n              <Activity className=\"h-6 w-6 animate-pulse\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-center\">\n              <Settings className=\"h-6 w-6 animate-pulse\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Provide default values if data is not available\n  const defaultStats = {\n    total: 0,\n    unread: 0,\n    byType: { signal: 0, price: 0, news: 0, system: 0, achievement: 0 },\n    byPriority: { critical: 0, high: 0, medium: 0, low: 0 },\n    lastWeek: 0,\n    deliveryRate: 0\n  };\n\n  const defaultHealth = {\n    smsEnabled: false,\n    emailEnabled: false,\n    telegramEnabled: false,\n    pushEnabled: false,\n    webhookEnabled: false,\n    lastDelivery: '',\n    failedDeliveries: 0,\n    deliveryRate: 0\n  };\n\n  const safeStats = stats || defaultStats;\n  const safeHealth = health || defaultHealth;\n\n  // Ensure nested objects exist\n  const safeByType = safeStats.byType || defaultStats.byType;\n  const safeByPriority = safeStats.byPriority || defaultStats.byPriority;\n\n  const unreadPercentage = safeStats.total > 0 ? (safeStats.unread / safeStats.total) * 100 : 0;\n  const criticalPercentage = safeStats.total > 0 ? (safeByPriority.critical / safeStats.total) * 100 : 0;\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {/* Statistics Card */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Bell className=\"h-5 w-5\" />\n            Notification Statistics\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Overview */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-3 rounded-lg border\">\n              <div className=\"text-2xl font-bold\">{safeStats.total}</div>\n              <p className=\"text-sm text-muted-foreground\">Total</p>\n            </div>\n            <div className=\"text-center p-3 rounded-lg border\">\n              <div className=\"text-2xl font-bold text-orange-500\">{safeStats.unread}</div>\n              <p className=\"text-sm text-muted-foreground\">Unread</p>\n            </div>\n          </div>\n\n          {/* Unread Progress */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span>Unread Notifications</span>\n              <span>{unreadPercentage.toFixed(1)}%</span>\n            </div>\n            <Progress value={unreadPercentage} className=\"h-2\" />\n          </div>\n\n          {/* By Type */}\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium text-sm\">By Type</h4>\n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <TrendingUp className=\"h-3 w-3 text-green-500\" />\n                  Signals\n                </span>\n                <Badge variant=\"outline\">{safeByType.signal}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <Activity className=\"h-3 w-3 text-blue-500\" />\n                  Price\n                </span>\n                <Badge variant=\"outline\">{safeByType.price}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <Bell className=\"h-3 w-3 text-purple-500\" />\n                  News\n                </span>\n                <Badge variant=\"outline\">{safeByType.news}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <Settings className=\"h-3 w-3 text-gray-500\" />\n                  System\n                </span>\n                <Badge variant=\"outline\">{safeByType.system}</Badge>\n              </div>\n            </div>\n          </div>\n\n          {/* By Priority */}\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium text-sm\">By Priority</h4>\n            <div className=\"space-y-1 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-red-500\">Critical</span>\n                <Badge variant=\"destructive\">{safeByPriority.critical}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-orange-500\">High</span>\n                <Badge variant=\"secondary\">{safeByPriority.high}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-blue-500\">Medium</span>\n                <Badge variant=\"outline\">{safeByPriority.medium}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-500\">Low</span>\n                <Badge variant=\"outline\">{safeByPriority.low}</Badge>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Health Status Card */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <CheckCircle className=\"h-5 w-5\" />\n            System Health\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Delivery Rate */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span>Delivery Success Rate</span>\n              <span className=\"font-medium\">{safeHealth.deliveryRate}%</span>\n            </div>\n            <Progress value={safeHealth.deliveryRate} className=\"h-2\" />\n          </div>\n\n          {/* Channel Status */}\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium text-sm\">Delivery Channels</h4>\n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span>Email</span>\n                <Badge variant={safeHealth.emailEnabled ? 'default' : 'secondary'}>\n                  {safeHealth.emailEnabled ? 'Active' : 'Disabled'}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>SMS</span>\n                <Badge variant={safeHealth.smsEnabled ? 'default' : 'secondary'}>\n                  {safeHealth.smsEnabled ? 'Active' : 'Disabled'}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Telegram</span>\n                <Badge variant={safeHealth.telegramEnabled ? 'default' : 'secondary'}>\n                  {safeHealth.telegramEnabled ? 'Active' : 'Disabled'}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span>Push</span>\n                <Badge variant={safeHealth.pushEnabled ? 'default' : 'secondary'}>\n                  {safeHealth.pushEnabled ? 'Active' : 'Disabled'}\n                </Badge>\n              </div>\n            </div>\n          </div>\n\n          {/* Recent Activity */}\n          <div className=\"space-y-2\">\n            <h4 className=\"font-medium text-sm\">Recent Activity</h4>\n            <div className=\"space-y-1 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <Clock className=\"h-3 w-3\" />\n                  Last Delivery\n                </span>\n                <span className=\"text-muted-foreground\">\n                  {safeHealth.lastDelivery ? new Date(safeHealth.lastDelivery).toLocaleString() : 'Never'}\n                </span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <AlertTriangle className=\"h-3 w-3 text-orange-500\" />\n                  Failed Deliveries\n                </span>\n                <Badge variant={safeHealth.failedDeliveries > 0 ? 'destructive' : 'outline'}>\n                  {safeHealth.failedDeliveries}\n                </Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"flex items-center gap-1\">\n                  <TrendingUp className=\"h-3 w-3 text-green-500\" />\n                  This Week\n                </span>\n                <Badge variant=\"outline\">{safeStats.lastWeek}</Badge>\n              </div>\n            </div>\n          </div>\n\n          {/* Critical Alert Percentage */}\n          {criticalPercentage > 0 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-red-500\">Critical Alerts</span>\n                <span className=\"font-medium\">{criticalPercentage.toFixed(1)}%</span>\n              </div>\n              <Progress value={criticalPercentage} className=\"h-2\" />\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  X, \n  TrendingUp, \n  TrendingDown, \n  AlertTriangle, \n  Info, \n  CheckCircle,\n  DollarSign,\n  Activity\n} from 'lucide-react';\n\nexport interface ContextualAlertData {\n  id: string;\n  type: 'signal' | 'price' | 'news' | 'system' | 'achievement';\n  title: string;\n  message: string;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  autoClose?: boolean;\n  duration?: number;\n  metadata?: {\n    symbol?: string;\n    price?: number;\n    change?: number;\n    signalType?: 'buy' | 'sell';\n    action?: {\n      label: string;\n      onClick: () => void;\n    };\n  };\n}\n\ninterface ContextualAlertProps {\n  alerts: ContextualAlertData[];\n  onDismiss: (alertId: string) => void;\n  position?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';\n}\n\nexport default function ContextualAlert({ \n  alerts, \n  onDismiss, \n  position = 'top-right' \n}: ContextualAlertProps) {\n  const [visibleAlerts, setVisibleAlerts] = useState<ContextualAlertData[]>(alerts);\n\n  useEffect(() => {\n    setVisibleAlerts(alerts);\n    \n    // Handle auto-close alerts\n    alerts.forEach(alert => {\n      if (alert.autoClose !== false) {\n        const duration = alert.duration || getDurationByPriority(alert.priority);\n        setTimeout(() => {\n          onDismiss(alert.id);\n        }, duration);\n      }\n    });\n  }, [alerts, onDismiss]);\n\n  const getDurationByPriority = (priority: string) => {\n    switch (priority) {\n      case 'critical': return 10000; // 10 seconds\n      case 'high': return 8000;     // 8 seconds\n      case 'medium': return 6000;   // 6 seconds\n      case 'low': return 4000;      // 4 seconds\n      default: return 6000;\n    }\n  };\n\n  const getAlertIcon = (type: string, signalType?: string) => {\n    switch (type) {\n      case 'signal':\n        return signalType === 'buy' ? (\n          <TrendingUp className=\"h-5 w-5 text-green-500\" />\n        ) : (\n          <TrendingDown className=\"h-5 w-5 text-red-500\" />\n        );\n      case 'price':\n        return <DollarSign className=\"h-5 w-5 text-blue-500\" />;\n      case 'news':\n        return <Info className=\"h-5 w-5 text-blue-500\" />;\n      case 'system':\n        return <AlertTriangle className=\"h-5 w-5 text-orange-500\" />;\n      case 'achievement':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      default:\n        return <Activity className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getAlertColors = (priority: string, type: string) => {\n    if (priority === 'critical') {\n      return 'border-red-500 bg-red-50 dark:bg-red-950/20';\n    }\n    if (priority === 'high') {\n      return 'border-orange-500 bg-orange-50 dark:bg-orange-950/20';\n    }\n    if (type === 'signal') {\n      return 'border-blue-500 bg-blue-50 dark:bg-blue-950/20';\n    }\n    return 'border-gray-200 bg-white dark:bg-gray-950';\n  };\n\n  const getPositionClasses = () => {\n    switch (position) {\n      case 'top-left':\n        return 'top-4 left-4';\n      case 'bottom-left':\n        return 'bottom-4 left-4';\n      case 'bottom-right':\n        return 'bottom-4 right-4';\n      default:\n        return 'top-4 right-4';\n    }\n  };\n\n  return (\n    <div className={`fixed ${getPositionClasses()} z-50 space-y-3 max-w-sm w-full`}>\n      <AnimatePresence>\n        {visibleAlerts.map((alert, index) => (\n          <motion.div\n            key={alert.id}\n            initial={{ opacity: 0, x: position.includes('right') ? 300 : -300, scale: 0.8 }}\n            animate={{ opacity: 1, x: 0, scale: 1 }}\n            exit={{ \n              opacity: 0, \n              x: position.includes('right') ? 300 : -300, \n              scale: 0.8,\n              transition: { duration: 0.2 }\n            }}\n            transition={{ \n              type: \"spring\", \n              stiffness: 500, \n              damping: 30,\n              delay: index * 0.1\n            }}\n            className=\"w-full\"\n          >\n            <Card className={`border-2 shadow-lg ${getAlertColors(alert.priority, alert.type)}`}>\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-start gap-3\">\n                  {getAlertIcon(alert.type, alert.metadata?.signalType)}\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <h4 className=\"font-semibold text-sm\">{alert.title}</h4>\n                      <div className=\"flex items-center gap-2\">\n                        {alert.priority === 'critical' && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">\n                            Critical\n                          </Badge>\n                        )}\n                        {alert.priority === 'high' && (\n                          <Badge variant=\"secondary\" className=\"text-xs bg-orange-100 text-orange-800\">\n                            High\n                          </Badge>\n                        )}\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          className=\"h-6 w-6 p-0\"\n                          onClick={() => onDismiss(alert.id)}\n                        >\n                          <X className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-sm text-muted-foreground mb-2\">\n                      {alert.message}\n                    </p>\n                    \n                    {alert.metadata && (\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2 text-xs\">\n                          {alert.metadata.symbol && (\n                            <Badge variant=\"outline\" className=\"text-xs font-mono\">\n                              {alert.metadata.symbol}\n                            </Badge>\n                          )}\n                          {alert.metadata.price && (\n                            <span className=\"font-medium\">\n                              ${alert.metadata.price.toLocaleString()}\n                            </span>\n                          )}\n                          {alert.metadata.change && (\n                            <span className={`font-medium ${\n                              alert.metadata.change >= 0 ? 'text-green-600' : 'text-red-600'\n                            }`}>\n                              {alert.metadata.change >= 0 ? '+' : ''}{alert.metadata.change.toFixed(2)}%\n                            </span>\n                          )}\n                        </div>\n                        \n                        {alert.metadata.action && (\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            className=\"h-7 text-xs\"\n                            onClick={alert.metadata.action.onClick}\n                          >\n                            {alert.metadata.action.label}\n                          </Button>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        ))}\n      </AnimatePresence>\n    </div>\n  );\n}","import React from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useNotifications } from '@/hooks/useNotifications';\nimport Sidebar from '@/components/layout/Sidebar';\nimport NotificationCenter from '@/components/notifications/NotificationCenter';\nimport NotificationStats from '@/components/notifications/NotificationStats';\nimport ContextualAlert from '@/components/notifications/ContextualAlert';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { Separator } from '@/components/ui/separator';\nimport { \n  Bell, \n  Settings, \n  TestTube, \n  Volume2, \n  VolumeX,\n  Monitor,\n  Smartphone,\n  Activity\n} from 'lucide-react';\n\nexport default function NotificationCenterPage() {\n  const { user } = useAuth();\n  const {\n    notifications,\n    contextualAlerts,\n    preferences,\n    unreadCount,\n    isConnected,\n    updatePreferences,\n    dismissContextualAlert,\n    createTestNotification,\n    requestNotificationPermission,\n  } = useNotifications();\n\n  if (!user) {\n    return (\n      <div className=\"flex h-screen bg-background\">\n        <Sidebar />\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\n          <div className=\"flex-1 overflow-y-auto\">\n            <div className=\"container mx-auto px-4 py-8\">\n              <Card>\n                <CardContent className=\"pt-6\">\n                  <div className=\"text-center\">\n                    <p className=\"text-muted-foreground\">Please log in to access the notification center.</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-background\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col overflow-hidden ml-0 md:ml-64\">\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"container mx-auto px-3 sm:px-4 py-4 sm:py-6 space-y-4 sm:space-y-6\">\n            {/* Header */}\n            <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n              <div>\n                <h1 className=\"text-2xl sm:text-3xl font-bold tracking-tight\">Notification Center</h1>\n                <p className=\"text-muted-foreground text-sm sm:text-base\">\n                  Manage your real-time alerts and notification preferences\n                </p>\n              </div>\n              \n              <div className=\"flex items-center gap-2\">\n                <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n                  <Activity className=\"h-3 w-3\" />\n                  {unreadCount} unread\n                </Badge>\n                <Badge \n                  variant={isConnected ? \"default\" : \"destructive\"} \n                  className=\"flex items-center gap-1\"\n                >\n                  <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} />\n                  {isConnected ? 'Connected' : 'Disconnected'}\n                </Badge>\n              </div>\n            </div>\n\n            <Separator />\n\n            {/* Statistics Section */}\n            <NotificationStats />\n\n            <Separator />\n\n            {/* Main Content */}\n            <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n              {/* Notification Center - Takes up 2 columns */}\n              <div className=\"xl:col-span-2\">\n                <NotificationCenter />\n              </div>\n\n              {/* Settings Panel */}\n              <div className=\"space-y-6\">\n                {/* Notification Preferences */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Settings className=\"h-5 w-5\" />\n                      Preferences\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* Global Settings */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium text-sm\">General</h4>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          {preferences.enableSound ? <Volume2 className=\"h-4 w-4\" /> : <VolumeX className=\"h-4 w-4\" />}\n                          <Label htmlFor=\"sound\">Sound Alerts</Label>\n                        </div>\n                        <Switch\n                          id=\"sound\"\n                          checked={preferences.enableSound}\n                          onCheckedChange={(checked) => \n                            updatePreferences({ enableSound: checked })\n                          }\n                        />\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <Monitor className=\"h-4 w-4\" />\n                          <Label htmlFor=\"browser\">Browser Notifications</Label>\n                        </div>\n                        <Switch\n                          id=\"browser\"\n                          checked={preferences.enableBrowser}\n                          onCheckedChange={(checked) => \n                            updatePreferences({ enableBrowser: checked })\n                          }\n                        />\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <Smartphone className=\"h-4 w-4\" />\n                          <Label htmlFor=\"contextual\">Contextual Alerts</Label>\n                        </div>\n                        <Switch\n                          id=\"contextual\"\n                          checked={preferences.enableContextual}\n                          onCheckedChange={(checked) => \n                            updatePreferences({ enableContextual: checked })\n                          }\n                        />\n                      </div>\n                    </div>\n\n                    <Separator />\n\n                    {/* Categories */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium text-sm\">Categories</h4>\n                      \n                      {Object.entries(preferences.categories).map(([category, enabled]) => (\n                        <div key={category} className=\"flex items-center justify-between\">\n                          <Label htmlFor={category} className=\"capitalize\">\n                            {category}\n                          </Label>\n                          <Switch\n                            id={category}\n                            checked={enabled}\n                            onCheckedChange={(checked) => \n                              updatePreferences({ \n                                categories: { \n                                  ...preferences.categories, \n                                  [category]: checked \n                                } \n                              })\n                            }\n                          />\n                        </div>\n                      ))}\n                    </div>\n\n                    <Separator />\n\n                    {/* Priorities */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium text-sm\">Priorities</h4>\n                      \n                      {Object.entries(preferences.priorities).map(([priority, enabled]) => (\n                        <div key={priority} className=\"flex items-center justify-between\">\n                          <Label htmlFor={priority} className=\"capitalize\">\n                            {priority}\n                          </Label>\n                          <Switch\n                            id={priority}\n                            checked={enabled}\n                            onCheckedChange={(checked) => \n                              updatePreferences({ \n                                priorities: { \n                                  ...preferences.priorities, \n                                  [priority]: checked \n                                } \n                              })\n                            }\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Test Notifications */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <TestTube className=\"h-5 w-5\" />\n                      Test Notifications\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <p className=\"text-sm text-muted-foreground\">\n                      Test different types of notifications to verify your settings.\n                    </p>\n                    \n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => createTestNotification('signal')}\n                      >\n                        Signal\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => createTestNotification('price')}\n                      >\n                        Price\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => createTestNotification('news')}\n                      >\n                        News\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => createTestNotification('system')}\n                      >\n                        System\n                      </Button>\n                    </div>\n\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      className=\"w-full\"\n                      onClick={requestNotificationPermission}\n                    >\n                      Enable Browser Notifications\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                {/* Quick Stats */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Bell className=\"h-5 w-5\" />\n                      Quick Stats\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">Total Notifications:</span>\n                      <span className=\"font-medium\">{notifications.length}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">Unread:</span>\n                      <span className=\"font-medium\">{unreadCount}</span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">Today:</span>\n                      <span className=\"font-medium\">\n                        {notifications.filter(n => \n                          new Date(n.timestamp).toDateString() === new Date().toDateString()\n                        ).length}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"text-muted-foreground\">Connection:</span>\n                      <span className={`font-medium ${isConnected ? 'text-green-600' : 'text-red-600'}`}>\n                        {isConnected ? 'Online' : 'Offline'}\n                      </span>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Contextual Alerts */}\n      <ContextualAlert\n        alerts={contextualAlerts}\n        onDismiss={dismissContextualAlert}\n        position=\"top-right\"\n      />\n    </div>\n  );\n}"],"names":["Monitor","createLucideIcon","useNotifications","contextualAlerts","setContextualAlerts","useState","preferences","setPreferences","queryClient","useQueryClient","notifications","isLoading","useQuery","userPreferences","useEffect","updatePreferencesMutation","useMutation","newPreferences","apiRequest","isConnected","useWebSocket","handleNewNotification","useCallback","notification","shouldShowNotification","contextualAlert","prev","playNotificationSound","showBrowserNotification","audio","error","browserNotification","requestNotificationPermission","dismissContextualAlert","alertId","alert","markAsRead","notificationId","markAllAsRead","archiveNotification","createTestNotification","type","testNotification","unreadCount","n","newPrefs","NotificationStats","stats","statsLoading","health","healthLoading","jsxs","jsx","Card","CardContent","Activity","Settings","defaultStats","defaultHealth","safeStats","safeHealth","safeByType","safeByPriority","unreadPercentage","criticalPercentage","CardHeader","CardTitle","Bell","Progress","TrendingUp","Badge","CheckCircle","Clock","AlertTriangle","ContextualAlert","alerts","onDismiss","position","visibleAlerts","setVisibleAlerts","duration","getDurationByPriority","priority","getAlertIcon","signalType","TrendingDown","DollarSign","Info","getAlertColors","getPositionClasses","AnimatePresence","index","motion","_a","Button","X","NotificationCenterPage","user","useAuth","updatePreferences","Sidebar","Separator","NotificationCenter","Volume2","VolumeX","Label","Switch","checked","Smartphone","category","enabled","TestTube"],"mappings":"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","x_google_ignoreList":[0]}