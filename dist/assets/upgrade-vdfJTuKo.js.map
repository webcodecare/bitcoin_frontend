{"version":3,"file":"upgrade-vdfJTuKo.js","sources":["../../src/pages/upgrade.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useLocation } from 'wouter';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { SessionManager } from '@/lib/sessionManager';\nimport { tokenStorage } from '@/lib/auth';\nimport PaymentModal from '@/components/payments/PaymentModal';\nimport Sidebar from '@/components/layout/Sidebar';\nimport { \n  Check, \n  Crown, \n  TrendingUp, \n  BarChart3, \n  Settings,\n  CreditCard,\n  ArrowRight,\n  LogOut,\n  User,\n  Home,\n  Star\n} from 'lucide-react';\n\nconst SUBSCRIPTION_PLANS = [\n  {\n    id: 'basic',\n    name: 'Basic Plan',\n    tier: 'basic',\n    monthlyPrice: 2997, // $29.97 in cents\n    yearlyPrice: 29997, // $299.97 in cents\n    description: 'Perfect for getting started with crypto trading',\n    features: [\n      'Real-time trading signals',\n      'Basic chart analysis',\n      'Email alerts',\n      'Up to 10 tickers',\n      'Trading playground',\n      'Basic portfolio tracking'\n    ],\n    color: 'blue',\n    icon: TrendingUp\n  },\n  {\n    id: 'premium',\n    name: 'Premium Plan',\n    tier: 'premium',\n    monthlyPrice: 4997, // $49.97 in cents\n    yearlyPrice: 49997, // $499.97 in cents\n    description: 'Advanced features for serious traders',\n    features: [\n      'All Basic features',\n      'Advanced analytics',\n      'SMS & Telegram alerts',\n      'Unlimited tickers',\n      'Cycle forecasting',\n      'Advanced portfolio management',\n      'Priority support'\n    ],\n    color: 'purple',\n    icon: BarChart3,\n    popular: true\n  },\n  {\n    id: 'pro',\n    name: 'Pro Plan',\n    tier: 'pro',\n    monthlyPrice: 9997, // $99.97 in cents\n    yearlyPrice: 99997, // $999.97 in cents\n    description: 'Everything you need for professional trading',\n    features: [\n      'All Premium features',\n      'API access',\n      'Custom indicators',\n      'Advanced forecasting',\n      'White-label options',\n      'Dedicated support',\n      'Advanced automation'\n    ],\n    color: 'gold',\n    icon: Crown\n  }\n];\n\nexport default function UpgradePage() {\n  const { user, isLoading } = useAuth();\n  const { toast } = useToast();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [billingInterval, setBillingInterval] = useState<'monthly' | 'yearly'>('monthly');\n  const [, setLocation] = useLocation();\n  const token = tokenStorage.get();\n\n  const handleLogout = () => {\n    try {\n      SessionManager.clearSession();\n      toast({\n        title: \"Logged out successfully\",\n        description: \"You have been logged out of your account.\",\n      });\n      setLocation('/');\n    } catch (error) {\n      console.error('Logout error:', error);\n      toast({\n        title: \"Logout failed\",\n        description: \"There was an issue logging you out. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleUpgrade = async (planTier: string) => {\n    if (!user) {\n      toast({\n        title: \"Authentication Required\",\n        description: \"Please log in to upgrade your subscription.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (user.subscriptionTier === planTier) {\n      toast({\n        title: \"Already Subscribed\",\n        description: `You are already on the ${planTier} plan.`,\n        variant: \"default\",\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n\n    try {\n      const response = await apiRequest('POST', '/api/create-subscription', {\n        planTier,\n        billingInterval\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Upgrade failed');\n      }\n\n      const data = await response.json();\n\n      if (data.url) {\n        // Redirect to Stripe Checkout\n        window.location.href = data.url;\n      } else if (data.success || data.message?.includes('Successfully upgraded')) {\n        toast({\n          title: \"Upgrade Successful! ðŸŽ‰\",\n          description: `You have been upgraded to ${planTier} plan!`,\n        });\n        \n        // Update user session with new subscription data if provided\n        if (data.user) {\n          // Create updated user object with new subscription data\n          const updatedUser = {\n            ...user,\n            subscriptionTier: data.user.subscriptionTier || planTier,\n            subscriptionStatus: data.user.subscriptionStatus || 'active',\n            subscriptionEndsAt: data.subscription?.endsAt\n          };\n          \n          // Update session manager with new user data\n          if (token) {\n            const session = SessionManager.getSession();\n            if (session) {\n              SessionManager.createSession(token, updatedUser);\n            }\n          }\n        }\n        \n        // Refresh user profile data to ensure UI updates immediately\n        await queryClient.invalidateQueries({ queryKey: [\"/api/user/profile\"] });\n        await queryClient.refetchQueries({ queryKey: [\"/api/user/profile\"] });\n        \n        // Small delay to show success message then redirect\n        setTimeout(() => {\n          window.location.href = '/dashboard';\n        }, 1500);\n      } else {\n        throw new Error(data.message || 'Unknown error occurred');\n      }\n    } catch (error: any) {\n      console.error('Upgrade error:', error);\n      toast({\n        title: \"Upgrade Failed\",\n        description: error.message || \"Failed to process upgrade. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const formatPrice = (cents: number) => {\n    return (cents / 100).toFixed(2);\n  };\n\n  const getYearlySavings = (monthlyPrice: number, yearlyPrice: number) => {\n    const yearlyCost = monthlyPrice * 12;\n    const savings = yearlyCost - yearlyPrice;\n    return Math.round((savings / yearlyCost) * 100);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen bg-background\">\n        <Sidebar />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full\" />\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"flex h-screen bg-background\">\n        <Sidebar />\n        <div className=\"flex-1 flex items-center justify-center\">\n          <Card className=\"w-full max-w-md\">\n            <CardContent className=\"pt-6\">\n              <div className=\"text-center\">\n                <p className=\"text-muted-foreground\">Please log in to manage your subscription.</p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-background\">\n      <Sidebar />\n      <div className=\"flex-1 flex flex-col overflow-hidden ml-0 md:ml-64\">\n        {/* Top Header with Logout */}\n        <header className=\"bg-white dark:bg-slate-900 border-b border-slate-200 dark:border-slate-800 px-4 sm:px-6 py-3\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setLocation('/dashboard')}\n                className=\"text-slate-600 dark:text-slate-400 hover:text-slate-900 dark:hover:text-slate-100\"\n              >\n                <Home className=\"h-4 w-4 mr-2\" />\n                Dashboard\n              </Button>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <Badge variant=\"outline\" className=\"flex items-center gap-1 text-xs\">\n                <Star className=\"h-3 w-3\" />\n                {user?.subscriptionTier || 'Free'} Plan\n              </Badge>\n              \n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={''} alt={user?.email} />\n                      <AvatarFallback>\n                        {user?.email?.charAt(0)?.toUpperCase() || 'U'}\n                      </AvatarFallback>\n                    </Avatar>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n                  <div className=\"flex items-center justify-start gap-2 p-2\">\n                    <div className=\"flex flex-col space-y-1 leading-none\">\n                      {user?.email && (\n                        <p className=\"text-sm text-muted-foreground\">{user.email}</p>\n                      )}\n                    </div>\n                  </div>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem onClick={() => setLocation('/dashboard')}>\n                    <User className=\"mr-2 h-4 w-4\" />\n                    <span>Dashboard</span>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem onClick={() => setLocation('/subscription')}>\n                    <Settings className=\"mr-2 h-4 w-4\" />\n                    <span>Subscription</span>\n                  </DropdownMenuItem>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem onClick={handleLogout}>\n                    <LogOut className=\"mr-2 h-4 w-4\" />\n                    <span>Log out</span>\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            </div>\n          </div>\n        </header>\n\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"container mx-auto px-4 sm:px-6 py-6 sm:py-8\">\n            {/* Header */}\n            <div className=\"text-center mb-6 sm:mb-8\">\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-foreground mb-3 sm:mb-4\">\n                Upgrade Your Trading Experience\n              </h1>\n              <p className=\"text-muted-foreground text-base sm:text-lg max-w-2xl mx-auto px-2\">\n                Choose the perfect plan to unlock advanced trading features and maximize your profits\n              </p>\n              \n              {/* Current Plan Badge */}\n              <div className=\"mt-6\">\n                <Badge variant=\"outline\" className=\"text-sm px-3 py-1\">\n                  Current Plan: {user.subscriptionTier?.charAt(0).toUpperCase() + user.subscriptionTier?.slice(1) || 'Free'}\n                </Badge>\n              </div>\n            </div>\n\n          {/* Billing Toggle */}\n          <div className=\"flex justify-center mb-8\">\n            <div className=\"bg-muted p-1 rounded-lg\">\n              <button\n                onClick={() => setBillingInterval('monthly')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  billingInterval === 'monthly'\n                    ? 'bg-background text-foreground shadow-sm'\n                    : 'text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                Monthly\n              </button>\n              <button\n                onClick={() => setBillingInterval('yearly')}\n                className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n                  billingInterval === 'yearly'\n                    ? 'bg-background text-foreground shadow-sm'\n                    : 'text-muted-foreground hover:text-foreground'\n                }`}\n              >\n                Yearly (Save up to 33%)\n              </button>\n            </div>\n          </div>\n\n          {/* Subscription Plans */}\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6 max-w-6xl mx-auto\">\n            {SUBSCRIPTION_PLANS.map((plan) => {\n              const Icon = plan.icon;\n              const price = billingInterval === 'yearly' ? plan.yearlyPrice : plan.monthlyPrice;\n              const isCurrentPlan = user.subscriptionTier === plan.tier;\n              const savings = billingInterval === 'yearly' ? getYearlySavings(plan.monthlyPrice, plan.yearlyPrice) : 0;\n\n              return (\n                <Card \n                  key={plan.id} \n                  className={`relative transition-all ${plan.popular ? 'ring-2 ring-primary' : ''} ${\n                    isCurrentPlan ? 'border-green-500 bg-green-50 dark:bg-green-900/30 shadow-lg' : 'hover:shadow-md'\n                  }`}\n                >\n                  {plan.popular && (\n                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                      <Badge className=\"bg-primary text-primary-foreground\">\n                        Most Popular\n                      </Badge>\n                    </div>\n                  )}\n                  \n                  <CardHeader className={`text-center pb-4 ${isCurrentPlan ? 'text-green-800 dark:text-green-100' : ''}`}>\n                    <div className={`mx-auto mb-2 p-2 rounded-lg w-fit ${\n                      isCurrentPlan ? 'bg-green-100 dark:bg-green-800' : 'bg-muted'\n                    }`}>\n                      <Icon className={`h-6 w-6 ${isCurrentPlan ? 'text-green-700 dark:text-green-200' : ''}`} />\n                    </div>\n                    <CardTitle className={`text-xl ${isCurrentPlan ? 'text-green-800 dark:text-green-100' : ''}`}>\n                      {plan.name}\n                    </CardTitle>\n                    <p className={`text-sm ${\n                      isCurrentPlan ? 'text-green-700 dark:text-green-200' : 'text-muted-foreground'\n                    }`}>\n                      {plan.description}\n                    </p>\n                    \n                    <div className=\"mt-4\">\n                      <div className={`text-3xl font-bold ${\n                        isCurrentPlan ? 'text-green-800 dark:text-green-100' : ''\n                      }`}>\n                        ${formatPrice(price)}\n                        <span className={`text-sm font-normal ${\n                          isCurrentPlan ? 'text-green-700 dark:text-green-200' : 'text-muted-foreground'\n                        }`}>\n                          /{billingInterval === 'yearly' ? 'year' : 'month'}\n                        </span>\n                      </div>\n                      {billingInterval === 'yearly' && savings > 0 && (\n                        <p className={`text-sm mt-1 ${\n                          isCurrentPlan ? 'text-green-700 dark:text-green-200' : 'text-green-600 dark:text-green-400'\n                        }`}>\n                          Save {savings}% annually\n                        </p>\n                      )}\n                    </div>\n                  </CardHeader>\n\n                  <CardContent>\n                    <ul className=\"space-y-3 mb-6\">\n                      {plan.features.map((feature, index) => (\n                        <li key={index} className=\"flex items-start\">\n                          <Check className={`h-4 w-4 mt-0.5 mr-2 flex-shrink-0 ${\n                            isCurrentPlan ? 'text-green-700 dark:text-green-300' : 'text-green-500'\n                          }`} />\n                          <span className={`text-sm ${\n                            isCurrentPlan ? 'text-green-800 dark:text-green-100' : ''\n                          }`}>\n                            {feature}\n                          </span>\n                        </li>\n                      ))}\n                    </ul>\n\n                    {isCurrentPlan ? (\n                      <Button\n                        disabled\n                        className=\"w-full\"\n                        variant=\"outline\"\n                      >\n                        Current Plan\n                      </Button>\n                    ) : (\n                      <PaymentModal\n                        planName={plan.name}\n                        planTier={plan.tier}\n                        monthlyPrice={plan.monthlyPrice}\n                        yearlyPrice={plan.yearlyPrice}\n                        billingInterval={billingInterval}\n                        onSuccess={() => {\n                          toast({\n                            title: \"Upgrade Successful!\",\n                            description: `You have been upgraded to ${plan.name}!`,\n                          });\n                          // Refresh the page to show updated subscription\n                          window.location.reload();\n                        }}\n                      >\n                        <Button\n                          className=\"w-full\"\n                          disabled={isProcessing}\n                        >\n                          <div className=\"flex items-center\">\n                            <CreditCard className=\"w-4 h-4 mr-2\" />\n                            Upgrade Now\n                            <ArrowRight className=\"w-4 h-4 ml-2\" />\n                          </div>\n                        </Button>\n                      </PaymentModal>\n                    )}\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n\n          {/* Additional Info */}\n          <div className=\"mt-12 text-center\">\n            <Card className=\"max-w-2xl mx-auto\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-center justify-center mb-4\">\n                  <Settings className=\"h-6 w-6 text-muted-foreground mr-2\" />\n                  <h3 className=\"text-lg font-semibold\">Flexible Billing</h3>\n                </div>\n                <p className=\"text-muted-foreground mb-4\">\n                  All plans include a 14-day money-back guarantee. You can cancel or change your plan at any time.\n                </p>\n                <div className=\"flex justify-center space-x-6 text-sm text-muted-foreground\">\n                  <span>â€¢ Secure payment processing</span>\n                  <span>â€¢ No hidden fees</span>\n                  <span>â€¢ Instant activation</span>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["SUBSCRIPTION_PLANS","TrendingUp","BarChart3","Crown","UpgradePage","user","isLoading","useAuth","toast","useToast","isProcessing","setIsProcessing","useState","billingInterval","setBillingInterval","setLocation","useLocation","tokenStorage","handleLogout","SessionManager","error","formatPrice","cents","getYearlySavings","monthlyPrice","yearlyPrice","yearlyCost","savings","jsxs","jsx","Sidebar","Button","Home","Badge","Star","DropdownMenu","DropdownMenuTrigger","Avatar","AvatarImage","AvatarFallback","_b","_a","DropdownMenuContent","DropdownMenuSeparator","DropdownMenuItem","User","Settings","LogOut","_c","_d","plan","Icon","price","isCurrentPlan","Card","CardHeader","CardTitle","CardContent","feature","index","Check","PaymentModal","CreditCard","ArrowRight"],"mappings":"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"}