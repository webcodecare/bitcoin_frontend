{"version":3,"file":"notification-setup-gge-qCvF.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/bot.js","../../src/pages/notification-setup.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Bot = createLucideIcon(\"Bot\", [\n  [\"path\", { d: \"M12 8V4H8\", key: \"hb8ula\" }],\n  [\"rect\", { width: \"16\", height: \"12\", x: \"4\", y: \"8\", rx: \"2\", key: \"enze0r\" }],\n  [\"path\", { d: \"M2 14h2\", key: \"vft8re\" }],\n  [\"path\", { d: \"M20 14h2\", key: \"4cs60a\" }],\n  [\"path\", { d: \"M15 13v2\", key: \"1xurst\" }],\n  [\"path\", { d: \"M9 13v2\", key: \"rq6x2g\" }]\n]);\n\nexport { Bot as default };\n//# sourceMappingURL=bot.js.map\n","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useToast } from '@/hooks/use-toast';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { Separator } from '@/components/ui/separator';\nimport Navigation from '@/components/layout/Navigation';\nimport Footer from '@/components/layout/Footer';\nimport Sidebar from '@/components/layout/Sidebar';\nimport { \n  Mail, \n  MessageSquare, \n  Smartphone, \n  Bell, \n  Send, \n  CheckCircle, \n  ExternalLink,\n  Settings,\n  AlertTriangle,\n  Info,\n  Copy,\n  Bot,\n  Check,\n  X,\n  Phone\n} from 'lucide-react';\n\nexport default function NotificationSetup() {\n  const { toast } = useToast();\n  const [selectedTab, setSelectedTab] = useState('email');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [telegramChatId, setTelegramChatId] = useState('');\n  const [isPhoneVerified, setIsPhoneVerified] = useState(false);\n  const [isTelegramConnected, setIsTelegramConnected] = useState(false);\n\n  // Fetch SMS status\n  const { data: smsStatus, isLoading: smsLoading } = useQuery({\n    queryKey: ['/api/notifications/sms/status'],\n    retry: false,\n  });\n\n  // Fetch Telegram status\n  const { data: telegramStatus, isLoading: telegramLoading } = useQuery({\n    queryKey: ['/api/notifications/telegram/status'],\n    retry: false,\n  });\n\n  // SMS verification mutation\n  const smsVerifyMutation = useMutation({\n    mutationFn: async (phoneNumber: string) => {\n      return await apiRequest('POST', '/api/notifications/sms/verify', { phoneNumber });\n    },\n    onSuccess: (data) => {\n      if (data.demo) {\n        toast({\n          title: \"Demo Mode\",\n          description: `Demo verification code: ${data.code} (SMS service not configured)`,\n          variant: \"default\"\n        });\n      } else {\n        toast({\n          title: \"Verification Code Sent\",\n          description: `SMS sent to ${phoneNumber}. Code: ${data.code}`,\n        });\n      }\n      setIsPhoneVerified(true);\n    },\n    onError: (error: any) => {\n      let errorMessage = \"Failed to send verification code\";\n      \n      if (error.message.includes(\"not configured\")) {\n        errorMessage = \"SMS service is not configured. Please contact admin to set up Twilio credentials.\";\n      } else if (error.message.includes(\"country code\")) {\n        errorMessage = \"Phone number must include country code (e.g., +1234567890)\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      toast({\n        title: \"SMS Verification Failed\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Telegram validation mutation\n  const telegramValidateMutation = useMutation({\n    mutationFn: async (chatId: string) => {\n      return await apiRequest('POST', '/api/notifications/telegram/validate', { chatId });\n    },\n    onSuccess: (data) => {\n      setIsTelegramConnected(true);\n      if (data.demo) {\n        toast({\n          title: \"Demo Mode\",\n          description: \"Chat ID validated in demo mode (Telegram service not configured)\",\n        });\n      } else {\n        toast({\n          title: \"Telegram Connected\",\n          description: \"Chat ID validated successfully!\",\n        });\n      }\n    },\n    onError: (error: any) => {\n      let errorMessage = \"Failed to validate Telegram chat ID\";\n      \n      if (error.message.includes(\"not configured\")) {\n        errorMessage = \"Telegram bot is not configured. Please contact admin to set up bot credentials.\";\n      } else if (error.message.includes(\"Invalid chat ID\")) {\n        errorMessage = \"Invalid chat ID format. Please check and try again.\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      toast({\n        title: \"Telegram Validation Failed\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Telegram test mutation\n  const telegramTestMutation = useMutation({\n    mutationFn: async (chatId: string) => {\n      return await apiRequest('POST', '/api/notifications/telegram/test', { chatId });\n    },\n    onSuccess: (data) => {\n      if (data.demo) {\n        toast({\n          title: \"Demo Mode\",\n          description: \"Test message simulated (Telegram service not configured)\",\n        });\n      } else {\n        toast({\n          title: \"Test Message Sent\",\n          description: \"Check your Telegram for the test message!\",\n        });\n      }\n    },\n    onError: (error: any) => {\n      let errorMessage = \"Failed to send test message\";\n      \n      if (error.message.includes(\"not configured\")) {\n        errorMessage = \"Telegram bot is not configured. Please contact admin to set up bot credentials.\";\n      } else if (error.message.includes(\"chat not found\")) {\n        errorMessage = \"Chat ID not found. Please verify your Chat ID and try again.\";\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n      \n      toast({\n        title: \"Telegram Test Failed\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSmsVerify = () => {\n    if (!phoneNumber) {\n      toast({\n        title: \"Phone Number Required\",\n        description: \"Please enter your phone number with country code\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    smsVerifyMutation.mutate(phoneNumber);\n  };\n\n  const handleTelegramValidate = () => {\n    if (!telegramChatId) {\n      toast({\n        title: \"Chat ID Required\",\n        description: \"Please enter your Telegram Chat ID\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    telegramValidateMutation.mutate(telegramChatId);\n  };\n\n  const handleTelegramTest = () => {\n    if (!telegramChatId) {\n      toast({\n        title: \"Chat ID Required\",\n        description: \"Please enter your Telegram Chat ID first\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    telegramTestMutation.mutate(telegramChatId);\n  };\n\n  const copyBotUsername = () => {\n    if (telegramStatus?.botUsername) {\n      navigator.clipboard.writeText(telegramStatus.botUsername);\n      toast({\n        title: \"Copied\",\n        description: \"Bot username copied to clipboard\",\n      });\n    }\n  };\n\n  const copyToClipboard = (text: string, label: string) => {\n    navigator.clipboard.writeText(text);\n    toast({\n      title: \"Copied\",\n      description: `${label} copied to clipboard`,\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-950 via-gray-900 to-black\">\n      <Navigation />\n      \n      <div className=\"flex\">\n        <Sidebar />\n        \n        <main className=\"flex-1 ml-0 md:ml-64 p-3 sm:p-6\">\n          <div className=\"max-w-6xl mx-auto\">\n            <div className=\"mb-6 sm:mb-8\">\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-white mb-2\">Notification Setup</h1>\n              <p className=\"text-gray-400 text-sm sm:text-base\">Configure how you receive trading signals and market alerts</p>\n            </div>\n\n            <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-4 sm:space-y-6\">\n              <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 text-xs sm:text-sm\">\n                <TabsTrigger value=\"email\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Mail className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden sm:inline\">Email</span>\n                  <span className=\"sm:hidden\">📧</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"sms\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Smartphone className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden sm:inline\">SMS</span>\n                  <span className=\"sm:hidden\">📱</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"telegram\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <MessageSquare className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden sm:inline\">Telegram</span>\n                  <span className=\"sm:hidden\">💬</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"advanced\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Settings className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden lg:inline\">Advanced</span>\n                  <span className=\"lg:hidden\">⚙️</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"setup\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Info className=\"w-3 h-3 sm:w-4 sm:h-4\" />\n                  <span className=\"hidden lg:inline\">Setup Guide</span>\n                  <span className=\"lg:hidden\">📋</span>\n                </TabsTrigger>\n              </TabsList>\n\n              {/* Email Tab */}\n              <TabsContent value=\"email\">\n                <Card className=\"bg-gray-900/50 border-gray-800\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-3 text-white\">\n                      <Mail className=\"w-5 h-5\" />\n                      Email Notifications\n                      <Badge variant=\"secondary\" className=\"bg-green-900/50 text-green-300\">\n                        <CheckCircle className=\"w-3 h-3 mr-1\" />\n                        Configured\n                      </Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                      <div className=\"flex items-center gap-2 text-green-300 mb-2\">\n                        <CheckCircle className=\"w-4 h-4\" />\n                        <span className=\"font-medium\">Email notifications are active</span>\n                      </div>\n                      <p className=\"text-sm text-green-200\">\n                        You'll receive trading signals and market updates via email instantly.\n                      </p>\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Label className=\"text-white\">Email Address</Label>\n                        <Input\n                          value=\"demo@cryptostrategy.pro\"\n                          disabled\n                          className=\"bg-gray-800 border-gray-700 text-gray-300\"\n                        />\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <Label className=\"text-white\">Instant Alerts</Label>\n                          <p className=\"text-sm text-gray-400\">Get notified immediately when signals are generated</p>\n                        </div>\n                        <Switch checked={true} />\n                      </div>\n\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <Label className=\"text-white\">Daily Summary</Label>\n                          <p className=\"text-sm text-gray-400\">Receive a daily recap of all signals</p>\n                        </div>\n                        <Switch checked={true} />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* SMS Tab */}\n              <TabsContent value=\"sms\">\n                <Card className=\"bg-gray-900/50 border-gray-800\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-3 text-white\">\n                      <Smartphone className=\"w-5 h-5\" />\n                      SMS Alerts\n                      <Badge variant=\"secondary\" className={\n                        smsStatus?.configured \n                          ? \"bg-green-900/50 text-green-300\" \n                          : \"bg-yellow-900/50 text-yellow-300\"\n                      }>\n                        {smsStatus?.configured ? (\n                          <>\n                            <CheckCircle className=\"w-3 h-3 mr-1\" />\n                            Ready\n                          </>\n                        ) : (\n                          <>\n                            <AlertTriangle className=\"w-3 h-3 mr-1\" />\n                            Setup Required\n                          </>\n                        )}\n                      </Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    {!smsStatus?.configured ? (\n                      <div className=\"p-4 bg-yellow-900/20 border border-yellow-800 rounded-lg\">\n                        <div className=\"flex items-center gap-2 text-yellow-300 mb-2\">\n                          <AlertTriangle className=\"w-4 h-4\" />\n                          <span className=\"font-medium\">SMS service requires configuration</span>\n                        </div>\n                        <p className=\"text-sm text-yellow-200 mb-3\">\n                          To enable SMS alerts, you need to provide Twilio API credentials in your environment variables:\n                        </p>\n                        <div className=\"bg-gray-800 p-3 rounded font-mono text-sm text-gray-300\">\n                          <div>TWILIO_ACCOUNT_SID=your_account_sid</div>\n                          <div>TWILIO_AUTH_TOKEN=your_auth_token</div>\n                          <div>TWILIO_PHONE_NUMBER=+1234567890</div>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                        <div className=\"flex items-center gap-2 text-green-300 mb-2\">\n                          <CheckCircle className=\"w-4 h-4\" />\n                          <span className=\"font-medium\">SMS service configured with {smsStatus.provider}</span>\n                        </div>\n                        <p className=\"text-sm text-green-200\">\n                          Ready to send instant SMS alerts for trading signals.\n                        </p>\n                      </div>\n                    )}\n\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Label className=\"text-white\">Phone Number</Label>\n                        <div className=\"flex gap-2\">\n                          <Input\n                            placeholder=\"+1 (555) 123-4567\"\n                            value={phoneNumber}\n                            onChange={(e) => setPhoneNumber(e.target.value)}\n                            className=\"bg-gray-800 border-gray-700 text-white\"\n                            disabled={!smsStatus?.configured}\n                          />\n                          <Button \n                            onClick={handleSmsVerify}\n                            disabled={smsVerifyMutation.isPending}\n                            className=\"bg-blue-600 hover:bg-blue-700\"\n                          >\n                            {smsVerifyMutation.isPending ? 'Sending...' : 'Verify'}\n                          </Button>\n                        </div>\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Include country code (e.g., +1 for US, +44 for UK)\n                          {!smsStatus?.configured && (\n                            <span className=\"text-blue-400 ml-1\">• Demo mode available for testing</span>\n                          )}\n                        </p>\n                      </div>\n\n                      {isPhoneVerified && (\n                        <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                          <div className=\"flex items-center gap-2 text-green-300\">\n                            <CheckCircle className=\"w-4 h-4\" />\n                            <span className=\"font-medium\">Phone number verified!</span>\n                          </div>\n                        </div>\n                      )}\n\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <Label className=\"text-white\">Critical Alerts Only</Label>\n                          <p className=\"text-sm text-gray-400\">Only send SMS for high-confidence signals</p>\n                        </div>\n                        <Switch checked={true} disabled={!smsStatus?.configured} />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Telegram Tab */}\n              <TabsContent value=\"telegram\">\n                <Card className=\"bg-gray-900/50 border-gray-800\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-3 text-white\">\n                      <Bot className=\"w-5 h-5\" />\n                      Telegram Bot\n                      <Badge variant=\"secondary\" className={\n                        telegramStatus?.configured \n                          ? \"bg-green-900/50 text-green-300\" \n                          : \"bg-yellow-900/50 text-yellow-300\"\n                      }>\n                        {telegramStatus?.configured ? (\n                          <>\n                            <CheckCircle className=\"w-3 h-3 mr-1\" />\n                            Ready\n                          </>\n                        ) : (\n                          <>\n                            <AlertTriangle className=\"w-3 h-3 mr-1\" />\n                            Setup Required\n                          </>\n                        )}\n                      </Badge>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    {!telegramStatus?.configured ? (\n                      <div className=\"p-4 bg-yellow-900/20 border border-yellow-800 rounded-lg\">\n                        <div className=\"flex items-center gap-2 text-yellow-300 mb-2\">\n                          <AlertTriangle className=\"w-4 h-4\" />\n                          <span className=\"font-medium\">Telegram bot requires configuration</span>\n                        </div>\n                        <p className=\"text-sm text-yellow-200 mb-3\">\n                          To enable Telegram alerts, you need to provide a bot token in your environment variables:\n                        </p>\n                        <div className=\"bg-gray-800 p-3 rounded font-mono text-sm text-gray-300\">\n                          TELEGRAM_BOT_TOKEN=your_bot_token\n                        </div>\n                      </div>\n                    ) : (\n                      <>\n                        <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                          <div className=\"flex items-center gap-2 text-green-300 mb-2\">\n                            <CheckCircle className=\"w-4 h-4\" />\n                            <span className=\"font-medium\">Telegram bot is online</span>\n                          </div>\n                          <p className=\"text-sm text-green-200\">\n                            Bot: {telegramStatus.botUsername || '@CryptoStrategyProBot'} is ready to send alerts.\n                          </p>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                          <div className=\"p-4 bg-blue-900/20 border border-blue-800 rounded-lg\">\n                            <h4 className=\"font-medium text-blue-300 mb-3\">Setup Instructions:</h4>\n                            <ol className=\"space-y-2 text-sm text-blue-200\">\n                              <li className=\"flex items-start gap-2\">\n                                <span className=\"bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold mt-0.5\">1</span>\n                                <div>\n                                  Open Telegram and search for{\" \"}\n                                  <button\n                                    onClick={copyBotUsername}\n                                    className=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 inline-flex items-center gap-1\"\n                                  >\n                                    {telegramStatus.botUsername || '@CryptoStrategyProBot'}\n                                    <Copy className=\"w-3 h-3\" />\n                                  </button>\n                                </div>\n                              </li>\n                              <li className=\"flex items-start gap-2\">\n                                <span className=\"bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold mt-0.5\">2</span>\n                                <span>Send <code className=\"bg-gray-800 px-1 rounded\">/start</code> command to the bot</span>\n                              </li>\n                              <li className=\"flex items-start gap-2\">\n                                <span className=\"bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold mt-0.5\">3</span>\n                                <span>Copy your Chat ID from the bot's response</span>\n                              </li>\n                              <li className=\"flex items-start gap-2\">\n                                <span className=\"bg-blue-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs font-bold mt-0.5\">4</span>\n                                <span>Paste the Chat ID below and validate</span>\n                              </li>\n                            </ol>\n                          </div>\n\n                          <div>\n                            <Label className=\"text-white\">Telegram Chat ID</Label>\n                            <div className=\"flex gap-2\">\n                              <Input\n                                placeholder=\"123456789\"\n                                value={telegramChatId}\n                                onChange={(e) => setTelegramChatId(e.target.value)}\n                                className=\"bg-gray-800 border-gray-700 text-white\"\n                              />\n                              <Button \n                                onClick={handleTelegramValidate}\n                                disabled={telegramValidateMutation.isPending}\n                                className=\"bg-blue-600 hover:bg-blue-700\"\n                              >\n                                {telegramValidateMutation.isPending ? 'Validating...' : 'Validate'}\n                              </Button>\n                            </div>\n                            <p className=\"text-xs text-gray-400 mt-1\">\n                              Get your Chat ID by messaging the bot\n                            </p>\n                          </div>\n\n                          {isTelegramConnected && (\n                            <div className=\"p-4 bg-green-900/20 border border-green-800 rounded-lg\">\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center gap-2 text-green-300\">\n                                  <CheckCircle className=\"w-4 h-4\" />\n                                  <span className=\"font-medium\">Chat connected successfully!</span>\n                                </div>\n                                <Button \n                                  onClick={handleTelegramTest}\n                                  disabled={telegramTestMutation.isPending}\n                                  variant=\"outline\"\n                                  size=\"sm\"\n                                >\n                                  {telegramTestMutation.isPending ? 'Sending...' : 'Send Test'}\n                                </Button>\n                              </div>\n                            </div>\n                          )}\n\n                          <div className=\"flex items-center justify-between\">\n                            <div>\n                              <Label className=\"text-white\">Rich Formatting</Label>\n                              <p className=\"text-sm text-gray-400\">Send messages with charts and formatting</p>\n                            </div>\n                            <Switch checked={true} />\n                          </div>\n\n                          <div className=\"flex items-center justify-between\">\n                            <div>\n                              <Label className=\"text-white\">Signal Previews</Label>\n                              <p className=\"text-sm text-gray-400\">Include price charts in messages</p>\n                            </div>\n                            <Switch checked={true} />\n                          </div>\n                        </div>\n                      </>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Advanced Tab */}\n              <TabsContent value=\"advanced\">\n                <Card className=\"bg-gray-900/50 border-gray-800\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-3 text-white\">\n                      <Settings className=\"w-5 h-5\" />\n                      Advanced Settings\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <Label className=\"text-white\">Discord Webhook URL</Label>\n                        <Input\n                          placeholder=\"https://discord.com/api/webhooks/...\"\n                          className=\"bg-gray-800 border-gray-700 text-white\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Send signals to your Discord server\n                        </p>\n                      </div>\n\n                      <div>\n                        <Label className=\"text-white\">Custom Webhook URL</Label>\n                        <Input\n                          placeholder=\"https://your-api.com/webhook\"\n                          className=\"bg-gray-800 border-gray-700 text-white\"\n                        />\n                        <p className=\"text-xs text-gray-400 mt-1\">\n                          Send POST requests to your custom endpoint\n                        </p>\n                      </div>\n\n                      <Separator className=\"bg-gray-700\" />\n\n                      <div className=\"space-y-4\">\n                        <h4 className=\"font-medium text-white\">Notification Preferences</h4>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <Label className=\"text-white\">Sound Alerts</Label>\n                            <p className=\"text-sm text-gray-400\">Play notification sounds in browser</p>\n                          </div>\n                          <Switch />\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <Label className=\"text-white\">Desktop Notifications</Label>\n                            <p className=\"text-sm text-gray-400\">Show browser notifications when page is not active</p>\n                          </div>\n                          <Switch />\n                        </div>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <Label className=\"text-white\">Quiet Hours</Label>\n                            <p className=\"text-sm text-gray-400\">Disable notifications from 10 PM to 8 AM</p>\n                          </div>\n                          <Switch />\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Setup Guide Tab */}\n              <TabsContent value=\"setup\">\n                <div className=\"space-y-6\">\n                  <Card className=\"bg-gray-900/50 border-gray-800\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-3 text-white\">\n                        <Info className=\"w-5 h-5\" />\n                        Setup Guide\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                      {/* SMS Setup Guide */}\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Smartphone className=\"w-5 h-5\" />\n                          SMS Setup (Twilio)\n                        </h3>\n                        <div className=\"bg-gray-800/50 p-4 rounded-lg\">\n                          <p className=\"text-gray-300 mb-4\">\n                            To enable SMS notifications, an administrator needs to configure Twilio credentials:\n                          </p>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">1</div>\n                              <div>\n                                <p className=\"text-white\">Create a Twilio account at <a href=\"https://www.twilio.com\" target=\"_blank\" className=\"text-blue-400 hover:text-blue-300\">twilio.com</a></p>\n                                <p className=\"text-gray-400 text-sm\">Sign up for a free account to get started</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">2</div>\n                              <div>\n                                <p className=\"text-white\">Get your Account SID and Auth Token</p>\n                                <p className=\"text-gray-400 text-sm\">Found in your Twilio Console Dashboard</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">3</div>\n                              <div>\n                                <p className=\"text-white\">Purchase a phone number</p>\n                                <p className=\"text-gray-400 text-sm\">This will be used to send SMS alerts</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">4</div>\n                              <div>\n                                <p className=\"text-white\">Set environment variables:</p>\n                                <div className=\"bg-gray-900 p-2 rounded mt-1 font-mono text-sm\">\n                                  <p className=\"text-green-400\">TWILIO_ACCOUNT_SID=your_account_sid</p>\n                                  <p className=\"text-green-400\">TWILIO_AUTH_TOKEN=your_auth_token</p>\n                                  <p className=\"text-green-400\">TWILIO_PHONE_NUMBER=+1234567890</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Telegram Setup Guide */}\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Bot className=\"w-5 h-5\" />\n                          Telegram Setup\n                        </h3>\n                        <div className=\"bg-gray-800/50 p-4 rounded-lg\">\n                          <p className=\"text-gray-300 mb-4\">\n                            To enable Telegram notifications, an administrator needs to create a bot:\n                          </p>\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">1</div>\n                              <div>\n                                <p className=\"text-white\">Message @BotFather on Telegram</p>\n                                <p className=\"text-gray-400 text-sm\">The official bot for creating new bots</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">2</div>\n                              <div>\n                                <p className=\"text-white\">Send /newbot command</p>\n                                <p className=\"text-gray-400 text-sm\">Follow the prompts to create your bot</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">3</div>\n                              <div>\n                                <p className=\"text-white\">Get your bot token</p>\n                                <p className=\"text-gray-400 text-sm\">BotFather will provide a token like: 123456789:ABC-DEF1234ghIkl-zyx57W2v1u123ew11</p>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center gap-3\">\n                              <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-bold\">4</div>\n                              <div>\n                                <p className=\"text-white\">Set environment variable:</p>\n                                <div className=\"bg-gray-900 p-2 rounded mt-1 font-mono text-sm\">\n                                  <p className=\"text-green-400\">TELEGRAM_BOT_TOKEN=your_bot_token</p>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* User Instructions */}\n                      <div className=\"space-y-4\">\n                        <h3 className=\"text-lg font-semibold text-white flex items-center gap-2\">\n                          <Bell className=\"w-5 h-5\" />\n                          User Instructions\n                        </h3>\n                        <div className=\"bg-gray-800/50 p-4 rounded-lg\">\n                          <div className=\"space-y-3\">\n                            <div>\n                              <h4 className=\"font-medium text-white mb-2\">For SMS Notifications:</h4>\n                              <p className=\"text-gray-300 text-sm\">\n                                Enter your phone number with country code (e.g., +1234567890) and click Verify to receive a test SMS.\n                              </p>\n                            </div>\n                            <div>\n                              <h4 className=\"font-medium text-white mb-2\">For Telegram Notifications:</h4>\n                              <ol className=\"text-gray-300 text-sm space-y-1\">\n                                <li>1. Start a chat with the bot (once configured)</li>\n                                <li>2. Send /start to the bot</li>\n                                <li>3. Get your Chat ID from @userinfobot</li>\n                                <li>4. Enter your Chat ID and validate</li>\n                              </ol>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </TabsContent>\n            </Tabs>\n\n            <div className=\"mt-8 p-4 bg-blue-900/20 border border-blue-800 rounded-lg\">\n              <div className=\"flex items-start gap-3\">\n                <Info className=\"w-5 h-5 text-blue-300 mt-0.5\" />\n                <div>\n                  <h4 className=\"font-medium text-blue-300 mb-2\">About Notifications</h4>\n                  <p className=\"text-sm text-blue-200\">\n                    Our notification system delivers real-time trading signals from advanced algorithms and TradingView webhooks. \n                    Choose your preferred channels to stay informed about market opportunities without missing critical signals.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}"],"names":["Bot","createLucideIcon","NotificationSetup","toast","useToast","selectedTab","setSelectedTab","useState","phoneNumber","setPhoneNumber","telegramChatId","setTelegramChatId","isPhoneVerified","setIsPhoneVerified","isTelegramConnected","setIsTelegramConnected","smsStatus","smsLoading","useQuery","telegramStatus","telegramLoading","smsVerifyMutation","useMutation","apiRequest","data","error","errorMessage","telegramValidateMutation","chatId","telegramTestMutation","handleSmsVerify","handleTelegramValidate","handleTelegramTest","copyBotUsername","jsxs","jsx","Navigation","Sidebar","Tabs","TabsList","TabsTrigger","Mail","Smartphone","MessageSquare","Settings","Info","TabsContent","Card","CardHeader","CardTitle","Badge","CheckCircle","CardContent","Label","Input","Switch","Fragment","AlertTriangle","e","Button","Copy","Separator","Bell"],"mappings":"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","x_google_ignoreList":[0]}