{"version":3,"file":"trading-playground-CgLhRt4Y.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/pause.js","../../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../src/pages/trading-playground.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pause = createLucideIcon(\"Pause\", [\n  [\"rect\", { x: \"14\", y: \"4\", width: \"4\", height: \"16\", rx: \"1\", key: \"zuxfzm\" }],\n  [\"rect\", { x: \"6\", y: \"4\", width: \"4\", height: \"16\", rx: \"1\", key: \"1okwgv\" }]\n]);\n\nexport { Pause as default };\n//# sourceMappingURL=pause.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RotateCcw = createLucideIcon(\"RotateCcw\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n]);\n\nexport { RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\n\nimport Header from \"@/components/layout/Header\";\nimport SubscriptionGuard from \"@/components/auth/SubscriptionGuard\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  Play, \n  Pause, \n  RotateCcw, \n  TrendingUp, \n  TrendingDown, \n  DollarSign,\n  AlertTriangle,\n  BarChart3\n} from \"lucide-react\";\n\ninterface TradingViewSignal {\n  id: string;\n  ticker: string;\n  timeframe: string;\n  signal: 'buy' | 'sell';\n  price: number;\n  timestamp: Date;\n}\n\ninterface SimulationPosition {\n  ticker: string;\n  signal: 'buy' | 'sell';\n  entryPrice: number;\n  currentPrice: number;\n  pnl: number;\n  timestamp: Date;\n}\n\nexport default function TradingPlayground() {\n  // Simple simulation state\n  const [selectedTicker, setSelectedTicker] = useState('BTCUSDT');\n  const [selectedTimeframe, setSelectedTimeframe] = useState('30M');\n  const [isSimulationActive, setIsSimulationActive] = useState(false);\n  const [simulatedBalance, setSimulatedBalance] = useState(10000);\n  const [positions, setPositions] = useState<SimulationPosition[]>([]);\n\n  // Available timeframes that support TradingView signals (matching database format)\n  const timeframes = [\n    { value: '30M', label: '30 Minutes' },\n    { value: '1H', label: '1 Hour' },\n    { value: '4H', label: '4 Hours' },\n    { value: '8H', label: '8 Hours' },\n    { value: '12H', label: '12 Hours' },\n    { value: '1D', label: '1 Day' },\n    { value: '1W', label: '1 Week' },\n    { value: '1M', label: '1 Month' }\n  ];\n\n  // Fetch available tickers\n  const { data: tickers } = useQuery({\n    queryKey: ['/api/tickers'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/tickers');\n      return response.json();\n    }\n  });\n\n  // Fetch current price for selected ticker\n  const { data: currentPrice, refetch: refetchPrice } = useQuery({\n    queryKey: ['/api/market/price', selectedTicker],\n    queryFn: async () => {\n      const response = await apiRequest('GET', `/api/market/price/${selectedTicker}`);\n      const data = await response.json();\n      return data.price;\n    },\n    refetchInterval: isSimulationActive ? 5000 : false\n  });\n\n  // Fetch TradingView signals for selected ticker and timeframe\n  const { data: signals } = useQuery({\n    queryKey: ['/api/signals', selectedTicker],\n    queryFn: async () => {\n      const response = await apiRequest('GET', `/api/signals/${selectedTicker}?timeframe=${selectedTimeframe}`);\n      return response.json();\n    },\n    refetchInterval: isSimulationActive ? 10000 : false\n  });\n\n  // Reset simulation\n  const resetSimulation = () => {\n    setIsSimulationActive(false);\n    setSimulatedBalance(10000);\n    setPositions([]);\n  };\n\n  // Calculate total P&L\n  const totalPnL = positions.reduce((sum, pos) => sum + pos.pnl, 0);\n  const totalPnLPercentage = ((simulatedBalance - 10000) / 10000) * 100;\n\n  return (\n    <div className=\"min-h-screen bg-gray-900\">\n      <div className=\"w-full\">\n        <Header />\n        <div className=\"p-3 sm:p-6 space-y-4 sm:space-y-6\">\n          <SubscriptionGuard feature=\"tradingPlayground\">\n              {/* Header */}\n              <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\n                <div>\n                  <h1 className=\"text-2xl sm:text-3xl font-bold text-white\">Trading Playground</h1>\n                  <p className=\"text-gray-400 mt-1 text-sm sm:text-base\">Simulate trading with real TradingView signals</p>\n                </div>\n                <div className=\"flex items-center space-x-2 sm:space-x-4\">\n                  <Button\n                    onClick={() => setIsSimulationActive(!isSimulationActive)}\n                    className={`${isSimulationActive ? 'bg-red-600 hover:bg-red-700' : 'bg-green-600 hover:bg-green-700'}`}\n                  >\n                    {isSimulationActive ? (\n                      <>\n                        <Pause className=\"w-4 h-4 mr-2\" />\n                        Pause\n                      </>\n                    ) : (\n                      <>\n                        <Play className=\"w-4 h-4 mr-2\" />\n                        Start\n                      </>\n                    )}\n                  </Button>\n                  <Button\n                    onClick={resetSimulation}\n                    variant=\"outline\"\n                    className=\"border-gray-600 text-gray-300 hover:text-white\"\n                  >\n                    <RotateCcw className=\"w-4 h-4 mr-2\" />\n                    Reset\n                  </Button>\n                </div>\n              </div>\n\n              {/* Settings */}\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <Card className=\"bg-gray-800 border-gray-700\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <label className=\"text-sm text-gray-300 mb-2 block\">Trading Pair</label>\n                        <Select \n                          value={selectedTicker} \n                          onValueChange={setSelectedTicker}\n                          disabled={isSimulationActive}\n                        >\n                          <SelectTrigger className=\"bg-gray-700 border-gray-600 text-white\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {tickers?.map((ticker: any) => (\n                              <SelectItem key={ticker.symbol} value={ticker.symbol}>\n                                {ticker.symbol}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div>\n                        <label className=\"text-sm text-gray-300 mb-2 block\">Timeframe</label>\n                        <Select \n                          value={selectedTimeframe} \n                          onValueChange={setSelectedTimeframe}\n                          disabled={isSimulationActive}\n                        >\n                          <SelectTrigger className=\"bg-gray-700 border-gray-600 text-white\">\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {timeframes.map((tf) => (\n                              <SelectItem key={tf.value} value={tf.value}>\n                                {tf.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"bg-gray-800 border-gray-700\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-sm text-gray-400\">Current Price</p>\n                          <p className=\"text-xl font-bold text-white\">\n                            ${currentPrice?.toLocaleString() || '---'}\n                          </p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-sm text-gray-400\">Balance</p>\n                          <p className=\"text-xl font-bold text-white\">\n                            ${simulatedBalance.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n                          </p>\n                          <p className={`text-sm ${totalPnLPercentage >= 0 ? 'text-green-500' : 'text-red-500'}`}>\n                            {totalPnLPercentage >= 0 ? '+' : ''}{totalPnLPercentage.toFixed(2)}%\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Signals Display */}\n              <Card className=\"bg-gray-800 border-gray-700\">\n                <CardHeader>\n                  <CardTitle className=\"text-white flex items-center\">\n                    <AlertTriangle className=\"w-5 h-5 mr-2\" />\n                    TradingView Signals - {selectedTicker} ({selectedTimeframe})\n                    {isSimulationActive && (\n                      <span className=\"w-2 h-2 bg-green-500 rounded-full ml-2 animate-pulse\" />\n                    )}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n                    {signals && signals.length > 0 ? (\n                      signals.slice(0, 10).map((signal: TradingViewSignal) => (\n                        <div\n                          key={signal.id}\n                          className=\"p-3 rounded-lg bg-gray-750 border border-gray-600 flex items-center justify-between\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            {signal.signal === 'buy' ? (\n                              <TrendingUp className=\"w-4 h-4 text-green-500\" />\n                            ) : (\n                              <TrendingDown className=\"w-4 h-4 text-red-500\" />\n                            )}\n                            <div>\n                              <p className=\"text-white font-medium\">\n                                {signal.signal.toUpperCase()} Signal\n                              </p>\n                              <p className=\"text-sm text-gray-400\">\n                                ${signal.price?.toLocaleString()} • {signal.timeframe}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <Badge variant={signal.signal === 'buy' ? 'default' : 'destructive'}>\n                              {signal.signal.toUpperCase()}\n                            </Badge>\n                            <p className=\"text-xs text-gray-500 mt-1\">\n                              {new Date(signal.timestamp).toLocaleTimeString()}\n                            </p>\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"text-center py-8\">\n                        <AlertTriangle className=\"w-8 h-8 text-gray-500 mx-auto mb-2\" />\n                        <p className=\"text-gray-500\">\n                          {isSimulationActive ? 'Waiting for TradingView signals...' : 'Select ticker and start simulation'}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n\n\n\n            </SubscriptionGuard>\n          </div>\n        </div>\n      </div>\n  );\n}"],"names":["Pause","createLucideIcon","RotateCcw","TradingPlayground","selectedTicker","setSelectedTicker","useState","selectedTimeframe","setSelectedTimeframe","isSimulationActive","setIsSimulationActive","simulatedBalance","setSimulatedBalance","positions","setPositions","timeframes","tickers","useQuery","apiRequest","currentPrice","refetchPrice","signals","resetSimulation","sum","pos","totalPnLPercentage","jsxs","jsx","Header","SubscriptionGuard","Button","Fragment","Play","Card","CardContent","Select","SelectTrigger","SelectValue","SelectContent","ticker","SelectItem","tf","CardHeader","CardTitle","AlertTriangle","signal","TrendingUp","TrendingDown","_a","Badge"],"mappings":"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","x_google_ignoreList":[0,1]}