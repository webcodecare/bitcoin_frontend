{"version":3,"file":"logs-CSAzQCwa.js","sources":["../../src/pages/admin/logs.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport Sidebar from \"@/components/layout/Sidebar\";\nimport Header from \"@/components/layout/Header\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { \n  Activity, \n  User, \n  Settings, \n  Database, \n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Info,\n  Search,\n  Calendar,\n  Download\n} from \"lucide-react\";\n\ninterface AdminLog {\n  id: string;\n  userId: string;\n  userEmail: string;\n  action: string;\n  resource: string;\n  resourceId?: string;\n  details: string;\n  ipAddress: string;\n  userAgent: string;\n  status: \"success\" | \"error\" | \"warning\";\n  timestamp: string;\n}\n\ninterface LogFilters {\n  userId?: string;\n  action?: string;\n  resource?: string;\n  status?: string;\n  dateFrom?: string;\n  dateTo?: string;\n  search?: string;\n}\n\nexport default function AdminLogs() {\n  const { toast } = useToast();\n  const [filters, setFilters] = useState<LogFilters>({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const logsPerPage = 50;\n\n  // Fetch admin logs\n  const { data: logsData, isLoading } = useQuery({\n    queryKey: [\"/api/admin/logs\", filters, currentPage],\n    queryFn: async () => {\n      const searchParams = new URLSearchParams();\n      \n      if (filters.userId) searchParams.append(\"userId\", filters.userId);\n      if (filters.action) searchParams.append(\"action\", filters.action);\n      if (filters.resource && filters.resource !== \"all\") searchParams.append(\"resource\", filters.resource);\n      if (filters.status && filters.status !== \"all\") searchParams.append(\"status\", filters.status);\n      if (filters.dateFrom) searchParams.append(\"dateFrom\", filters.dateFrom);\n      if (filters.dateTo) searchParams.append(\"dateTo\", filters.dateTo);\n      if (filters.search) searchParams.append(\"search\", filters.search);\n      \n      searchParams.append(\"page\", currentPage.toString());\n      searchParams.append(\"limit\", logsPerPage.toString());\n\n      const response = await fetch(`/api/admin/logs?${searchParams}`);\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch admin logs\");\n      }\n      return await response.json();\n    },\n    refetchInterval: 30000 // Refresh every 30 seconds\n  });\n\n  // Fetch users for filter dropdown\n  const { data: users } = useQuery({\n    queryKey: [\"/api/admin/users\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/admin/users\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch users\");\n      }\n      return await response.json();\n    }\n  });\n\n  const logs = logsData?.logs || [];\n  const totalLogs = logsData?.total || 0;\n  const totalPages = Math.ceil(totalLogs / logsPerPage);\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"success\":\n        return <Badge variant=\"default\" className=\"bg-emerald-500\"><CheckCircle className=\"w-3 h-3 mr-1\" />Success</Badge>;\n      case \"error\":\n        return <Badge variant=\"destructive\"><XCircle className=\"w-3 h-3 mr-1\" />Error</Badge>;\n      case \"warning\":\n        return <Badge variant=\"secondary\" className=\"bg-yellow-500\"><AlertTriangle className=\"w-3 h-3 mr-1\" />Warning</Badge>;\n      default:\n        return <Badge variant=\"outline\"><Info className=\"w-3 h-3 mr-1\" />{status}</Badge>;\n    }\n  };\n\n  const getActionIcon = (action: string) => {\n    if (action.includes(\"user\")) return <User className=\"w-4 h-4\" />;\n    if (action.includes(\"settings\") || action.includes(\"config\")) return <Settings className=\"w-4 h-4\" />;\n    if (action.includes(\"database\") || action.includes(\"data\")) return <Database className=\"w-4 h-4\" />;\n    return <Activity className=\"w-4 h-4\" />;\n  };\n\n  const exportLogs = () => {\n    const csvContent = [\n      \"Timestamp,User,Action,Resource,Status,Details,IP Address\",\n      ...logs.map((log: AdminLog) => \n        `${log.timestamp},\"${log.userEmail}\",\"${log.action}\",\"${log.resource}\",\"${log.status}\",\"${log.details.replace(/\"/g, '\"\"')}\",\"${log.ipAddress}\"`\n      )\n    ].join(\"\\n\");\n\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `admin-logs-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n\n    toast({\n      title: \"Success\",\n      description: \"Admin logs exported successfully\"\n    });\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    setCurrentPage(1);\n  };\n\n  // Get unique actions and resources for filter dropdowns\n  const uniqueActions = [...new Set(logs.map((log: AdminLog) => log.action))];\n  const uniqueResources = [...new Set(logs.map((log: AdminLog) => log.resource))];\n\n  const logStats = {\n    total: totalLogs,\n    success: logs.filter((log: AdminLog) => log.status === \"success\").length,\n    errors: logs.filter((log: AdminLog) => log.status === \"error\").length,\n    warnings: logs.filter((log: AdminLog) => log.status === \"warning\").length,\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"flex\">\n        <Sidebar className=\"hidden lg:block lg:w-64\" />\n        \n        {/* Main Content */}\n        <div className=\"flex-1 lg:ml-64\">\n          {/* Header */}\n          <Header \n            title=\"Admin Activity Logs\" \n            subtitle=\"View and export administrative activity logs\"\n          >\n            <Button variant=\"outline\" onClick={exportLogs}>\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export CSV\n            </Button>\n          </Header>\n\n          {/* Content */}\n          <div className=\"p-4 lg:p-6 space-y-6\">\n\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Actions</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{logStats.total}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Successful</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-emerald-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-emerald-600\">{logStats.success}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Errors</CardTitle>\n            <XCircle className=\"h-4 w-4 text-destructive\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-destructive\">{logStats.errors}</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Warnings</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-600\">{logStats.warnings}</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Search className=\"w-5 h-5\" />\n            <span>Filters</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\n            <div>\n              <Input\n                placeholder=\"Search logs...\"\n                value={filters.search || \"\"}\n                onChange={(e) => setFilters(prev => ({ ...prev, search: e.target.value }))}\n              />\n            </div>\n\n            <Select value={filters.userId || \"\"} onValueChange={(value) => setFilters(prev => ({ ...prev, userId: value || undefined }))}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"User\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Users</SelectItem>\n                {users?.map((user: any) => (\n                  <SelectItem key={user.id} value={user.id}>\n                    {user.email}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Select value={filters.action || \"\"} onValueChange={(value) => setFilters(prev => ({ ...prev, action: value || undefined }))}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Action\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Actions</SelectItem>\n                {uniqueActions.map((action: string) => (\n                  <SelectItem key={action} value={action}>\n                    {action}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Select value={filters.resource || \"\"} onValueChange={(value) => setFilters(prev => ({ ...prev, resource: value || undefined }))}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Resource\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Resources</SelectItem>\n                {uniqueResources.map((resource: string) => (\n                  <SelectItem key={resource} value={resource}>\n                    {resource}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n\n            <Select value={filters.status || \"\"} onValueChange={(value) => setFilters(prev => ({ ...prev, status: value || undefined }))}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"success\">Success</SelectItem>\n                <SelectItem value=\"error\">Error</SelectItem>\n                <SelectItem value=\"warning\">Warning</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Button variant=\"outline\" onClick={clearFilters}>\n              Clear Filters\n            </Button>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\n            <div>\n              <label className=\"text-sm font-medium\">From Date</label>\n              <Input\n                type=\"datetime-local\"\n                value={filters.dateFrom || \"\"}\n                onChange={(e) => setFilters(prev => ({ ...prev, dateFrom: e.target.value }))}\n              />\n            </div>\n            <div>\n              <label className=\"text-sm font-medium\">To Date</label>\n              <Input\n                type=\"datetime-local\"\n                value={filters.dateTo || \"\"}\n                onChange={(e) => setFilters(prev => ({ ...prev, dateTo: e.target.value }))}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Logs Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle>Activity Logs</CardTitle>\n            <div className=\"text-sm text-muted-foreground\">\n              Showing {logs.length} of {totalLogs} logs\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {isLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(10)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12 w-full\" />\n              ))}\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-x-auto\">\n                <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Timestamp</TableHead>\n                    <TableHead>User</TableHead>\n                    <TableHead>Action</TableHead>\n                    <TableHead>Resource</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Details</TableHead>\n                    <TableHead>IP Address</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {logs.map((log: AdminLog) => (\n                    <TableRow key={log.id}>\n                      <TableCell className=\"font-mono text-sm\">\n                        {new Date(log.timestamp).toLocaleString()}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          <User className=\"w-4 h-4 text-muted-foreground\" />\n                          <span className=\"max-w-xs truncate\">{log.userEmail}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          {getActionIcon(log.action)}\n                          <span>{log.action}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell>{log.resource}</TableCell>\n                      <TableCell>{getStatusBadge(log.status)}</TableCell>\n                      <TableCell className=\"max-w-sm truncate\">\n                        {log.details}\n                      </TableCell>\n                      <TableCell className=\"font-mono text-sm\">\n                        {log.ipAddress}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                  {logs.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan={7} className=\"text-center text-muted-foreground py-8\">\n                        No logs found matching your criteria\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n              </div>\n\n              {/* Pagination */}\n              {totalPages > 1 && (\n                <div className=\"flex items-center justify-between mt-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Page {currentPage} of {totalPages}\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n                      disabled={currentPage === 1}\n                    >\n                      Previous\n                    </Button>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n                      disabled={currentPage === totalPages}\n                    >\n                      Next\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardContent>\n      </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["AdminLogs","toast","useToast","filters","setFilters","useState","currentPage","setCurrentPage","logsPerPage","logsData","isLoading","useQuery","searchParams","response","users","logs","totalLogs","totalPages","getStatusBadge","status","jsxs","Badge","jsx","CheckCircle","XCircle","AlertTriangle","Info","getActionIcon","action","User","Settings","Database","Activity","exportLogs","csvContent","log","blob","url","a","clearFilters","uniqueActions","uniqueResources","logStats","Sidebar","Header","Button","Download","Card","CardHeader","CardTitle","CardContent","Search","Input","e","prev","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","user","resource","_","i","Skeleton","Fragment","Table","TableHeader","TableRow","TableHead","TableBody","TableCell"],"mappings":"6iCAyDA,SAAwBA,IAAY,CAC5B,KAAA,CAAE,MAAAC,CAAM,EAAIC,EAAS,EACrB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAqB,CAAA,CAAE,EAC/C,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,CAAC,EAC1CG,EAAc,GAGd,CAAE,KAAMC,EAAU,UAAAC,CAAA,EAAcC,EAAS,CAC7C,SAAU,CAAC,kBAAmBR,EAASG,CAAW,EAClD,QAAS,SAAY,CACb,MAAAM,EAAe,IAAI,gBAErBT,EAAQ,QAAQS,EAAa,OAAO,SAAUT,EAAQ,MAAM,EAC5DA,EAAQ,QAAQS,EAAa,OAAO,SAAUT,EAAQ,MAAM,EAC5DA,EAAQ,UAAYA,EAAQ,WAAa,OAAoBS,EAAA,OAAO,WAAYT,EAAQ,QAAQ,EAChGA,EAAQ,QAAUA,EAAQ,SAAW,OAAoBS,EAAA,OAAO,SAAUT,EAAQ,MAAM,EACxFA,EAAQ,UAAUS,EAAa,OAAO,WAAYT,EAAQ,QAAQ,EAClEA,EAAQ,QAAQS,EAAa,OAAO,SAAUT,EAAQ,MAAM,EAC5DA,EAAQ,QAAQS,EAAa,OAAO,SAAUT,EAAQ,MAAM,EAEhES,EAAa,OAAO,OAAQN,EAAY,SAAA,CAAU,EAClDM,EAAa,OAAO,QAASJ,EAAY,SAAA,CAAU,EAEnD,MAAMK,EAAW,MAAM,MAAM,mBAAmBD,CAAY,EAAE,EAC1D,GAAA,CAACC,EAAS,GACN,MAAA,IAAI,MAAM,4BAA4B,EAEvC,OAAA,MAAMA,EAAS,KAAK,CAC7B,EACA,gBAAiB,GAAA,CAClB,EAGK,CAAE,KAAMC,CAAM,EAAIH,EAAS,CAC/B,SAAU,CAAC,kBAAkB,EAC7B,QAAS,SAAY,CACb,MAAAE,EAAW,MAAM,MAAM,kBAAkB,EAC3C,GAAA,CAACA,EAAS,GACN,MAAA,IAAI,MAAM,uBAAuB,EAElC,OAAA,MAAMA,EAAS,KAAK,CAAA,CAC7B,CACD,EAEKE,GAAON,GAAA,YAAAA,EAAU,OAAQ,CAAC,EAC1BO,GAAYP,GAAA,YAAAA,EAAU,QAAS,EAC/BQ,EAAa,KAAK,KAAKD,EAAYR,CAAW,EAE9CU,EAAkBC,GAAmB,CACzC,OAAQA,EAAQ,CACd,IAAK,UACH,OAAQC,EAAAA,KAAAC,EAAA,CAAM,QAAQ,UAAU,UAAU,iBAAiB,SAAA,CAACC,EAAAA,IAAAC,EAAA,CAAY,UAAU,cAAe,CAAA,EAAE,SAAA,EAAO,EAC5G,IAAK,QACI,OAAAH,EAAA,KAACC,EAAM,CAAA,QAAQ,cAAc,SAAA,CAACC,EAAAA,IAAAE,EAAA,CAAQ,UAAU,cAAe,CAAA,EAAE,OAAA,EAAK,EAC/E,IAAK,UACH,OAAQJ,EAAAA,KAAAC,EAAA,CAAM,QAAQ,YAAY,UAAU,gBAAgB,SAAA,CAACC,EAAAA,IAAAG,EAAA,CAAc,UAAU,cAAe,CAAA,EAAE,SAAA,EAAO,EAC/G,QACS,OAAAL,EAAA,KAACC,EAAM,CAAA,QAAQ,UAAU,SAAA,CAACC,EAAAA,IAAAI,GAAA,CAAK,UAAU,cAAe,CAAA,EAAGP,CAAA,EAAO,CAAA,CAE/E,EAEMQ,EAAiBC,GACjBA,EAAO,SAAS,MAAM,EAAWN,EAAA,IAAAO,EAAA,CAAK,UAAU,UAAU,EAC1DD,EAAO,SAAS,UAAU,GAAKA,EAAO,SAAS,QAAQ,EAAUN,EAAAA,IAACQ,EAAS,CAAA,UAAU,SAAU,CAAA,EAC/FF,EAAO,SAAS,UAAU,GAAKA,EAAO,SAAS,MAAM,EAAUN,EAAAA,IAACS,GAAS,CAAA,UAAU,SAAU,CAAA,EAC1FT,EAAA,IAACU,EAAS,CAAA,UAAU,SAAU,CAAA,EAGjCC,EAAa,IAAM,CACvB,MAAMC,EAAa,CACjB,2DACA,GAAGnB,EAAK,IAAKoB,GACX,GAAGA,EAAI,SAAS,KAAKA,EAAI,SAAS,MAAMA,EAAI,MAAM,MAAMA,EAAI,QAAQ,MAAMA,EAAI,MAAM,MAAMA,EAAI,QAAQ,QAAQ,KAAM,IAAI,CAAC,MAAMA,EAAI,SAAS,GAAA,CAC9I,EACA,KAAK;AAAA,CAAI,EAELC,EAAO,IAAI,KAAK,CAACF,CAAU,EAAG,CAAE,KAAM,WAAY,EAClDG,EAAM,OAAO,IAAI,gBAAgBD,CAAI,EACrCE,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOD,EACPC,EAAA,SAAW,cAAc,IAAI,KAAK,EAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,OACjEA,EAAE,MAAM,EACD,OAAA,IAAI,gBAAgBD,CAAG,EAExBpC,EAAA,CACJ,MAAO,UACP,YAAa,kCAAA,CACd,CACH,EAEMsC,EAAe,IAAM,CACzBnC,EAAW,CAAA,CAAE,EACbG,EAAe,CAAC,CAClB,EAGMiC,EAAgB,CAAC,GAAG,IAAI,IAAIzB,EAAK,IAAKoB,GAAkBA,EAAI,MAAM,CAAC,CAAC,EACpEM,EAAkB,CAAC,GAAG,IAAI,IAAI1B,EAAK,IAAKoB,GAAkBA,EAAI,QAAQ,CAAC,CAAC,EAExEO,EAAW,CACf,MAAO1B,EACP,QAASD,EAAK,OAAQoB,GAAkBA,EAAI,SAAW,SAAS,EAAE,OAClE,OAAQpB,EAAK,OAAQoB,GAAkBA,EAAI,SAAW,OAAO,EAAE,OAC/D,SAAUpB,EAAK,OAAQoB,GAAkBA,EAAI,SAAW,SAAS,EAAE,MACrE,EAEA,aACG,MAAI,CAAA,UAAU,6BACb,SAACf,EAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACE,EAAAA,IAAAqB,EAAA,CAAQ,UAAU,yBAA0B,CAAA,EAG7CvB,EAAAA,KAAC,MAAI,CAAA,UAAU,kBAEb,SAAA,CAAAE,EAAA,IAACsB,EAAA,CACC,MAAM,sBACN,SAAS,+CAET,SAACxB,EAAAA,KAAAyB,EAAA,CAAO,QAAQ,UAAU,QAASZ,EACjC,SAAA,CAACX,EAAAA,IAAAwB,GAAA,CAAS,UAAU,cAAe,CAAA,EAAE,YAAA,CAEvC,CAAA,CAAA,CACF,EAGA1B,EAAAA,KAAC,MAAI,CAAA,UAAU,uBAGb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gEACnB,SAAA,CAAAA,OAAC2B,EACC,CAAA,SAAA,CAAC3B,EAAAA,KAAA4B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAa,gBAAA,EACxD3B,EAAAA,IAACU,EAAS,CAAA,UAAU,+BAAgC,CAAA,CAAA,EACtD,EACAV,EAAAA,IAAC4B,GACC,SAAC5B,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAsB,SAAAoB,EAAS,KAAM,CAAA,CACtD,CAAA,CAAA,EACF,SAECK,EACC,CAAA,SAAA,CAAC3B,EAAAA,KAAA4B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAU,aAAA,EACrD3B,EAAAA,IAACC,EAAY,CAAA,UAAU,0BAA2B,CAAA,CAAA,EACpD,EACAD,EAAAA,IAAC4B,GACC,SAAC5B,EAAA,IAAA,MAAA,CAAI,UAAU,sCAAuC,SAAAoB,EAAS,OAAQ,CAAA,CACzE,CAAA,CAAA,EACF,SAECK,EACC,CAAA,SAAA,CAAC3B,EAAAA,KAAA4B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAM,SAAA,EACjD3B,EAAAA,IAACE,EAAQ,CAAA,UAAU,0BAA2B,CAAA,CAAA,EAChD,EACAF,EAAAA,IAAC4B,GACC,SAAC5B,EAAA,IAAA,MAAA,CAAI,UAAU,sCAAuC,SAAAoB,EAAS,MAAO,CAAA,CACxE,CAAA,CAAA,EACF,SAECK,EACC,CAAA,SAAA,CAAC3B,EAAAA,KAAA4B,EAAA,CAAW,UAAU,4DACpB,SAAA,CAAC1B,EAAA,IAAA2B,EAAA,CAAU,UAAU,sBAAsB,SAAQ,WAAA,EACnD3B,EAAAA,IAACG,EAAc,CAAA,UAAU,yBAA0B,CAAA,CAAA,EACrD,EACAH,EAAAA,IAAC4B,GACC,SAAC5B,EAAA,IAAA,MAAA,CAAI,UAAU,qCAAsC,SAAAoB,EAAS,QAAS,CAAA,CACzE,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGCK,EACC,CAAA,SAAA,CAAAzB,MAAC0B,EACC,CAAA,SAAA5B,EAAAA,KAAC6B,EAAU,CAAA,UAAU,8BACnB,SAAA,CAAC3B,EAAAA,IAAA6B,GAAA,CAAO,UAAU,SAAU,CAAA,EAC5B7B,EAAAA,IAAC,QAAK,SAAO,SAAA,CAAA,CAAA,CAAA,CACf,CACF,CAAA,SACC4B,EACC,CAAA,SAAA,CAAC9B,EAAAA,KAAA,MAAA,CAAI,UAAU,sEACb,SAAA,CAAAE,MAAC,MACC,CAAA,SAAAA,EAAA,IAAC8B,EAAA,CACC,YAAY,iBACZ,MAAOjD,EAAQ,QAAU,GACzB,SAAWkD,GAAMjD,EAAoBkD,IAAA,CAAE,GAAGA,EAAM,OAAQD,EAAE,OAAO,KAAA,EAAQ,CAAA,CAAA,EAE7E,SAECE,EAAO,CAAA,MAAOpD,EAAQ,QAAU,GAAI,cAAgBqD,GAAUpD,EAAWkD,IAAS,CAAE,GAAGA,EAAM,OAAQE,GAAS,MAAA,EAAY,EACzH,SAAA,CAAAlC,MAACmC,EACC,CAAA,SAAAnC,EAAA,IAACoC,EAAY,CAAA,YAAY,MAAO,CAAA,EAClC,SACCC,EACC,CAAA,SAAA,CAACrC,EAAA,IAAAsC,EAAA,CAAW,MAAM,MAAM,SAAS,YAAA,EAChC9C,GAAA,YAAAA,EAAO,IAAK+C,GACVvC,EAAAA,IAAAsC,EAAA,CAAyB,MAAOC,EAAK,GACnC,SAAAA,EAAK,KADS,EAAAA,EAAK,EAEtB,EACD,CACH,CAAA,CAAA,EACF,SAECN,EAAO,CAAA,MAAOpD,EAAQ,QAAU,GAAI,cAAgBqD,GAAUpD,EAAWkD,IAAS,CAAE,GAAGA,EAAM,OAAQE,GAAS,MAAA,EAAY,EACzH,SAAA,CAAAlC,MAACmC,EACC,CAAA,SAAAnC,EAAA,IAACoC,EAAY,CAAA,YAAY,QAAS,CAAA,EACpC,SACCC,EACC,CAAA,SAAA,CAACrC,EAAA,IAAAsC,EAAA,CAAW,MAAM,MAAM,SAAW,cAAA,EAClCpB,EAAc,IAAKZ,GAClBN,EAAA,IAACsC,GAAwB,MAAOhC,EAC7B,SADcA,CAAA,EAAAA,CAEjB,CACD,CAAA,CACH,CAAA,CAAA,EACF,SAEC2B,EAAO,CAAA,MAAOpD,EAAQ,UAAY,GAAI,cAAgBqD,GAAUpD,EAAWkD,IAAS,CAAE,GAAGA,EAAM,SAAUE,GAAS,MAAA,EAAY,EAC7H,SAAA,CAAAlC,MAACmC,EACC,CAAA,SAAAnC,EAAA,IAACoC,EAAY,CAAA,YAAY,UAAW,CAAA,EACtC,SACCC,EACC,CAAA,SAAA,CAACrC,EAAA,IAAAsC,EAAA,CAAW,MAAM,MAAM,SAAa,gBAAA,EACpCnB,EAAgB,IAAKqB,GACpBxC,EAAA,IAACsC,GAA0B,MAAOE,EAC/B,SADcA,CAAA,EAAAA,CAEjB,CACD,CAAA,CACH,CAAA,CAAA,EACF,SAECP,EAAO,CAAA,MAAOpD,EAAQ,QAAU,GAAI,cAAgBqD,GAAUpD,EAAWkD,IAAS,CAAE,GAAGA,EAAM,OAAQE,GAAS,MAAA,EAAY,EACzH,SAAA,CAAAlC,MAACmC,EACC,CAAA,SAAAnC,EAAA,IAACoC,EAAY,CAAA,YAAY,QAAS,CAAA,EACpC,SACCC,EACC,CAAA,SAAA,CAACrC,EAAA,IAAAsC,EAAA,CAAW,MAAM,MAAM,SAAU,aAAA,EACjCtC,EAAA,IAAAsC,EAAA,CAAW,MAAM,UAAU,SAAO,UAAA,EAClCtC,EAAA,IAAAsC,EAAA,CAAW,MAAM,QAAQ,SAAK,QAAA,EAC9BtC,EAAA,IAAAsC,EAAA,CAAW,MAAM,UAAU,SAAO,SAAA,CAAA,CAAA,CACrC,CAAA,CAAA,EACF,QAECf,EAAO,CAAA,QAAQ,UAAU,QAASN,EAAc,SAEjD,eAAA,CAAA,CAAA,EACF,EAEAnB,EAAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAA,QAAA,CAAM,UAAU,sBAAsB,SAAS,YAAA,EAChDA,EAAA,IAAC8B,EAAA,CACC,KAAK,iBACL,MAAOjD,EAAQ,UAAY,GAC3B,SAAWkD,GAAMjD,EAAoBkD,IAAA,CAAE,GAAGA,EAAM,SAAUD,EAAE,OAAO,KAAA,EAAQ,CAAA,CAAA,CAC7E,EACF,SACC,MACC,CAAA,SAAA,CAAC/B,EAAA,IAAA,QAAA,CAAM,UAAU,sBAAsB,SAAO,UAAA,EAC9CA,EAAA,IAAC8B,EAAA,CACC,KAAK,iBACL,MAAOjD,EAAQ,QAAU,GACzB,SAAWkD,GAAMjD,EAAoBkD,IAAA,CAAE,GAAGA,EAAM,OAAQD,EAAE,OAAO,KAAA,EAAQ,CAAA,CAAA,CAC3E,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGCN,EACC,CAAA,SAAA,CAAAzB,MAAC0B,EACC,CAAA,SAAA5B,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAAAE,EAAAA,IAAC2B,GAAU,SAAa,eAAA,CAAA,EACxB7B,EAAAA,KAAC,MAAI,CAAA,UAAU,gCAAgC,SAAA,CAAA,WACpCL,EAAK,OAAO,OAAKC,EAAU,OAAA,CACtC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACAM,EAAAA,IAAC4B,EACE,CAAA,SAAAxC,EACEY,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAA,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,IAAI,CAACyC,EAAGC,IACrB1C,EAAA,IAAA2C,EAAA,CAAiB,UAAU,aAAA,EAAbD,CAA2B,CAC3C,CACH,CAAA,EAGE5C,EAAA,KAAA8C,EAAA,SAAA,CAAA,SAAA,CAAA5C,MAAC,MAAI,CAAA,UAAU,kBACb,SAAAF,EAAA,KAAC+C,EACD,CAAA,SAAA,CAAC7C,EAAA,IAAA8C,EAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAA/C,EAAAA,IAACgD,GAAU,SAAS,WAAA,CAAA,EACpBhD,EAAAA,IAACgD,GAAU,SAAI,MAAA,CAAA,EACfhD,EAAAA,IAACgD,GAAU,SAAM,QAAA,CAAA,EACjBhD,EAAAA,IAACgD,GAAU,SAAQ,UAAA,CAAA,EACnBhD,EAAAA,IAACgD,GAAU,SAAM,QAAA,CAAA,EACjBhD,EAAAA,IAACgD,GAAU,SAAO,SAAA,CAAA,EAClBhD,EAAAA,IAACgD,GAAU,SAAU,YAAA,CAAA,CAAA,CAAA,CACvB,CACF,CAAA,SACCC,GACE,CAAA,SAAA,CAAAxD,EAAK,IAAKoB,GACTf,EAAAA,KAACiD,EACC,CAAA,SAAA,CAAC/C,EAAAA,IAAAkD,EAAA,CAAU,UAAU,oBAClB,SAAA,IAAI,KAAKrC,EAAI,SAAS,EAAE,eAC3B,CAAA,CAAA,EACCb,MAAAkD,EAAA,CACC,SAACpD,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAACE,EAAAA,IAAAO,EAAA,CAAK,UAAU,+BAAgC,CAAA,EAC/CP,EAAA,IAAA,OAAA,CAAK,UAAU,oBAAqB,WAAI,SAAU,CAAA,CAAA,CAAA,CACrD,CACF,CAAA,EACCA,MAAAkD,EAAA,CACC,SAACpD,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACZ,SAAA,CAAAO,EAAcQ,EAAI,MAAM,EACzBb,EAAAA,IAAC,OAAM,CAAA,SAAAa,EAAI,MAAO,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,EACAb,EAAAA,IAACkD,EAAW,CAAA,SAAArC,EAAI,QAAS,CAAA,EACxBb,EAAA,IAAAkD,EAAA,CAAW,SAAetD,EAAAiB,EAAI,MAAM,EAAE,EACtCb,EAAA,IAAAkD,EAAA,CAAU,UAAU,oBAClB,WAAI,QACP,EACClD,EAAA,IAAAkD,EAAA,CAAU,UAAU,oBAClB,WAAI,SACP,CAAA,CAAA,GAvBarC,EAAI,EAwBnB,CACD,EACApB,EAAK,SAAW,GACfO,EAAA,IAAC+C,EACC,CAAA,SAAA/C,EAAA,IAACkD,EAAU,CAAA,QAAS,EAAG,UAAU,yCAAyC,SAAA,sCAAA,CAE1E,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACA,CAAA,EAGCvD,EAAa,GACXG,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,QACvCd,EAAY,OAAKW,CAAA,EACzB,EACAG,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAAAE,EAAA,IAACuB,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMtC,EAAe+C,GAAQ,KAAK,IAAIA,EAAO,EAAG,CAAC,CAAC,EAC3D,SAAUhD,IAAgB,EAC3B,SAAA,UAAA,CAED,EACAgB,EAAA,IAACuB,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMtC,EAAe+C,GAAQ,KAAK,IAAIA,EAAO,EAAGrC,CAAU,CAAC,EACpE,SAAUX,IAAgBW,EAC3B,SAAA,MAAA,CAAA,CAED,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACI,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ"}