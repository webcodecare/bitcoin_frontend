{"version":3,"file":"dashboard-widgets-Dxuj-1hB.js","sources":["../../src/components/dashboard/widgets/PriceWidget.tsx","../../src/components/dashboard/widgets/PortfolioWidget.tsx","../../src/components/dashboard/widgets/SignalsWidget.tsx","../../src/components/dashboard/widgets/AlertsWidget.tsx","../../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../src/components/ui/checkbox.tsx","../../src/components/dashboard/widgets/MarketOverviewWidget.tsx","../../src/components/dashboard/widgets/TradingPerformanceWidget.tsx","../../src/components/dashboard/widgets/NewsWidget.tsx","../../src/components/dashboard/widgets/WatchlistWidget.tsx","../../src/components/dashboard/SimpleDashboard.tsx","../../src/pages/dashboard-widgets.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { TrendingUp, TrendingDown, Settings, DollarSign } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ninterface PriceWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function PriceWidget({ widget, onUpdateSettings }: PriceWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: price, isLoading, error } = useQuery({\n    queryKey: ['/api/market/price', widget.settings.ticker],\n    queryFn: () => apiRequest('GET', `/api/market/price/${widget.settings.ticker}`),\n    refetchInterval: 5000, // Refresh every 5 seconds\n    retry: false,\n  });\n\n  const { data: ohlcData } = useQuery({\n    queryKey: ['/api/chart/ohlc', widget.settings.ticker],\n    queryFn: () => apiRequest('GET', `/api/chart/ohlc/${widget.settings.ticker}?interval=1h&limit=24`),\n    enabled: widget.settings.showChart,\n    retry: false,\n  });\n\n  const formatPrice = (price: number) => {\n    if (price >= 1) {\n      return `$${price.toLocaleString(undefined, { maximumFractionDigits: 2 })}`;\n    } else {\n      return `$${price.toFixed(6)}`;\n    }\n  };\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n  };\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <DollarSign className=\"h-4 w-4\" />\n            {widget.title}\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-2\">\n            <div className=\"h-8 bg-muted rounded w-32\"></div>\n            <div className=\"h-4 bg-muted rounded w-24\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Fallback demo data when API is unavailable\n  const getFallbackData = (ticker: string) => {\n    const basePrices = {\n      'BTCUSDT': { price: 67432.50, changePercent24h: 2.45 },\n      'ETHUSDT': { price: 3456.78, changePercent24h: -1.23 },\n      'SOLUSDT': { price: 145.67, changePercent24h: 4.56 },\n      'ADAUSDT': { price: 0.456, changePercent24h: -0.89 },\n      'DOTUSDT': { price: 7.89, changePercent24h: 1.34 },\n      'LINKUSDT': { price: 14.23, changePercent24h: 3.21 }\n    };\n    return basePrices[ticker as keyof typeof basePrices] || basePrices.BTCUSDT;\n  };\n\n  const priceData = price || getFallbackData(widget.settings.ticker);\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <DollarSign className=\"h-4 w-4\" />\n          {widget.settings.ticker}\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Price Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Cryptocurrency</Label>\n                <Select \n                  value={localSettings.ticker} \n                  onValueChange={(value) => setLocalSettings({...localSettings, ticker: value})}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"BTCUSDT\">Bitcoin (BTC)</SelectItem>\n                    <SelectItem value=\"ETHUSDT\">Ethereum (ETH)</SelectItem>\n                    <SelectItem value=\"SOLUSDT\">Solana (SOL)</SelectItem>\n                    <SelectItem value=\"ADAUSDT\">Cardano (ADA)</SelectItem>\n                    <SelectItem value=\"DOTUSDT\">Polkadot (DOT)</SelectItem>\n                    <SelectItem value=\"LINKUSDT\">Chainlink (LINK)</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"show-chart\"\n                  checked={localSettings.showChart}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, showChart: checked})}\n                />\n                <Label htmlFor=\"show-chart\">Show mini chart</Label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-2\">\n          <div className=\"text-2xl font-bold\">\n            {formatPrice(priceData.price)}\n          </div>\n          <div className={`flex items-center gap-1 text-sm ${getChangeColor(priceData.changePercent24h)}`}>\n            {priceData.changePercent24h >= 0 ? (\n              <TrendingUp className=\"h-3 w-3\" />\n            ) : (\n              <TrendingDown className=\"h-3 w-3\" />\n            )}\n            {formatPercentage(priceData.changePercent24h)}\n            <span className=\"text-muted-foreground\">24h</span>\n          </div>\n          {widget.settings.showChart && ohlcData && ohlcData.length > 0 && (\n            <div className=\"mt-3\">\n              <div className=\"text-xs text-muted-foreground mb-1\">24h Price Chart</div>\n              <div className=\"h-16 flex items-end space-x-0.5\">\n                {ohlcData.slice(-12).map((candle: any, index: number) => {\n                  const height = Math.max(2, (candle.close / priceData.price) * 60);\n                  const isGreen = candle.close >= candle.open;\n                  return (\n                    <div\n                      key={index}\n                      className={`flex-1 ${\n                        isGreen ? 'bg-green-500' : 'bg-red-500'\n                      } rounded-sm opacity-80`}\n                      style={{ height: `${height}%` }}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { PieChart, Settings, TrendingUp, TrendingDown } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ninterface PortfolioWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function PortfolioWidget({ widget, onUpdateSettings }: PortfolioWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: portfolio, isLoading } = useQuery({\n    queryKey: ['/api/trading/portfolio'],\n    queryFn: () => apiRequest('GET', '/api/trading/portfolio'),\n    retry: false,\n  });\n\n  const { data: performance } = useQuery({\n    queryKey: ['/api/trading/performance'],\n    queryFn: () => apiRequest('GET', '/api/trading/performance'),\n    retry: false,\n  });\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <PieChart className=\"h-4 w-4\" />\n            Portfolio Overview\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-8 bg-muted rounded w-32\"></div>\n            <div className=\"space-y-2\">\n              <div className=\"h-4 bg-muted rounded\"></div>\n              <div className=\"h-4 bg-muted rounded w-3/4\"></div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  // Mock portfolio data for demonstration\n  const portfolioData = portfolio || {\n    totalValue: 125430.50,\n    totalPnL: 12543.25,\n    totalPnLPercent: 11.12,\n    positions: [\n      { symbol: 'BTCUSDT', quantity: 1.5, value: 75000, allocation: 59.8, pnl: 8500, pnlPercent: 12.8 },\n      { symbol: 'ETHUSDT', quantity: 15.2, value: 32500, allocation: 25.9, pnl: 2800, pnlPercent: 9.4 },\n      { symbol: 'SOLUSDT', quantity: 85.7, value: 12430, allocation: 9.9, pnl: 980, pnlPercent: 8.6 },\n      { symbol: 'ADAUSDT', quantity: 12500, value: 5500, allocation: 4.4, pnl: 263, pnlPercent: 5.0 },\n    ]\n  };\n\n  const performanceData = performance || {\n    dailyPnL: 1250.30,\n    dailyPnLPercent: 1.01,\n    weeklyPnL: 5430.80,\n    weeklyPnLPercent: 4.52,\n    monthlyPnL: 12543.25,\n    monthlyPnLPercent: 11.12\n  };\n\n  const formatCurrency = (amount: number) => {\n    return `$${amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n  };\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <PieChart className=\"h-4 w-4\" />\n          Portfolio Overview\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Portfolio Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"show-allocation\"\n                  checked={localSettings.showAllocation}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, showAllocation: checked})}\n                />\n                <Label htmlFor=\"show-allocation\">Show allocation breakdown</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"show-pnl\"\n                  checked={localSettings.showPnL}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, showPnL: checked})}\n                />\n                <Label htmlFor=\"show-pnl\">Show P&L details</Label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4 space-y-4\">\n        {/* Total Portfolio Value */}\n        <div>\n          <div className=\"text-xs text-muted-foreground\">Total Portfolio Value</div>\n          <div className=\"text-2xl font-bold\">{formatCurrency(portfolioData.totalValue)}</div>\n          <div className={`flex items-center gap-1 text-sm ${getChangeColor(portfolioData.totalPnL)}`}>\n            {portfolioData.totalPnL >= 0 ? (\n              <TrendingUp className=\"h-3 w-3\" />\n            ) : (\n              <TrendingDown className=\"h-3 w-3\" />\n            )}\n            {formatCurrency(Math.abs(portfolioData.totalPnL))} ({formatPercentage(portfolioData.totalPnLPercent)})\n          </div>\n        </div>\n\n        {/* Performance Overview */}\n        {localSettings.showPnL && (\n          <div className=\"space-y-2\">\n            <div className=\"text-xs text-muted-foreground\">Performance</div>\n            <div className=\"grid grid-cols-3 gap-2 text-xs\">\n              <div>\n                <div className=\"text-muted-foreground\">24h</div>\n                <div className={getChangeColor(performanceData.dailyPnL)}>\n                  {formatPercentage(performanceData.dailyPnLPercent)}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-muted-foreground\">7d</div>\n                <div className={getChangeColor(performanceData.weeklyPnL)}>\n                  {formatPercentage(performanceData.weeklyPnLPercent)}\n                </div>\n              </div>\n              <div>\n                <div className=\"text-muted-foreground\">30d</div>\n                <div className={getChangeColor(performanceData.monthlyPnL)}>\n                  {formatPercentage(performanceData.monthlyPnLPercent)}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Top Holdings */}\n        {localSettings.showAllocation && (\n          <div className=\"space-y-2\">\n            <div className=\"text-xs text-muted-foreground\">Top Holdings</div>\n            <div className=\"space-y-1\">\n              {portfolioData.positions.slice(0, 3).map((position: any, index: number) => (\n                <div key={position.symbol} className=\"flex items-center justify-between text-xs\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 rounded-full bg-primary\" style={{\n                      backgroundColor: `hsl(${(index * 60) % 360}, 70%, 50%)`\n                    }} />\n                    <span className=\"font-medium\">{position.symbol.replace('USDT', '')}</span>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"font-medium\">{position.allocation.toFixed(1)}%</div>\n                    <div className={`${getChangeColor(position.pnl)} text-xs`}>\n                      {formatPercentage(position.pnlPercent)}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { TrendingUp, TrendingDown, Settings, Activity } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ninterface SignalsWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function SignalsWidget({ widget, onUpdateSettings }: SignalsWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: signals, isLoading } = useQuery({\n    queryKey: ['/api/signals', localSettings.limit],\n    queryFn: () => apiRequest('GET', `/api/signals?limit=${localSettings.limit}`),\n    refetchInterval: localSettings.autoRefresh ? 10000 : false, // Refresh every 10 seconds if auto-refresh is enabled\n    retry: false,\n  });\n\n  // Demo signals data when API is unavailable\n  const demoSignals = [\n    {\n      id: '1',\n      symbol: 'BTCUSDT',\n      type: 'buy',\n      price: 67500,\n      timestamp: new Date().toISOString(),\n      confidence: 85,\n      notes: 'Strong bullish momentum'\n    },\n    {\n      id: '2',\n      symbol: 'ETHUSDT',\n      type: 'sell',\n      price: 3450,\n      timestamp: new Date(Date.now() - 3600000).toISOString(),\n      confidence: 78,\n      notes: 'Resistance level reached'\n    },\n    {\n      id: '3',\n      symbol: 'SOLUSDT',\n      type: 'buy',\n      price: 145,\n      timestamp: new Date(Date.now() - 7200000).toISOString(),\n      confidence: 92,\n      notes: 'Breakout pattern confirmed'\n    }\n  ];\n\n  const signalsData = signals || demoSignals;\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const getSignalColor = (type: string) => {\n    switch (type) {\n      case 'buy': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100';\n      case 'sell': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-100';\n      case 'hold': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-100';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-100';\n    }\n  };\n\n  const getSignalIcon = (type: string) => {\n    switch (type) {\n      case 'buy': return <TrendingUp className=\"h-3 w-3\" />;\n      case 'sell': return <TrendingDown className=\"h-3 w-3\" />;\n      default: return <Activity className=\"h-3 w-3\" />;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    return `${diffDays}d ago`;\n  };\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <Activity className=\"h-4 w-4\" />\n            Trading Signals\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"flex items-center gap-3\">\n                <div className=\"h-6 w-12 bg-muted rounded\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-muted rounded w-16 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-20\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <Activity className=\"h-4 w-4\" />\n          Trading Signals\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Signals Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Number of signals to show</Label>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"20\"\n                  value={localSettings.limit}\n                  onChange={(e) => setLocalSettings({...localSettings, limit: parseInt(e.target.value) || 5})}\n                />\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"auto-refresh\"\n                  checked={localSettings.autoRefresh}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, autoRefresh: checked})}\n                />\n                <Label htmlFor=\"auto-refresh\">Auto refresh (10s interval)</Label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        {signalsData.length === 0 ? (\n          <div className=\"text-center text-muted-foreground text-sm py-8\">\n            <Activity className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n            <div>No signals available</div>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {signalsData.slice(0, localSettings.limit).map((signal: any, index: number) => (\n              <div key={signal.id || index} className=\"flex items-center gap-3\">\n                <Badge variant=\"secondary\" className={`${getSignalColor(signal.type)} flex items-center gap-1`}>\n                  {getSignalIcon(signal.type)}\n                  {signal.type.toUpperCase()}\n                </Badge>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"font-medium text-sm\">{signal.symbol}</div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {signal.price && `$${signal.price.toLocaleString()}`}\n                    {signal.timestamp && ` • ${formatTime(signal.timestamp)}`}\n                  </div>\n                </div>\n                {signal.confidence && (\n                  <div className=\"text-xs text-muted-foreground\">\n                    {Math.round(signal.confidence * 100)}%\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Bell, Settings, TrendingUp, TrendingDown } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ninterface AlertsWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function AlertsWidget({ widget, onUpdateSettings }: AlertsWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: alerts = [], isLoading } = useQuery({\n    queryKey: ['/api/alerts'],\n    queryFn: () => apiRequest('GET', '/api/alerts'),\n  });\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const getConditionIcon = (condition: string) => {\n    switch (condition) {\n      case 'above':\n      case 'crosses_above':\n        return <TrendingUp className=\"h-3 w-3\" />;\n      case 'below':\n      case 'crosses_below':\n        return <TrendingDown className=\"h-3 w-3\" />;\n      default:\n        return <Bell className=\"h-3 w-3\" />;\n    }\n  };\n\n  const getConditionColor = (condition: string) => {\n    switch (condition) {\n      case 'above':\n      case 'crosses_above':\n        return 'text-green-600 dark:text-green-400';\n      case 'below':\n      case 'crosses_below':\n        return 'text-red-600 dark:text-red-400';\n      default:\n        return 'text-blue-600 dark:text-blue-400';\n    }\n  };\n\n  const formatPrice = (price: number) => {\n    if (price >= 1) {\n      return `$${price.toLocaleString(undefined, { maximumFractionDigits: 2 })}`;\n    } else {\n      return `$${price.toFixed(6)}`;\n    }\n  };\n\n  const activeAlerts = localSettings.showOnlyActive ? alerts.filter((alert: any) => alert.enabled) : alerts;\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <Bell className=\"h-4 w-4\" />\n            Active Alerts\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"flex items-center gap-3\">\n                <div className=\"h-4 w-4 bg-muted rounded\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-muted rounded w-16 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-20\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <Bell className=\"h-4 w-4\" />\n          Active Alerts ({activeAlerts.length})\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Alerts Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"show-only-active\"\n                  checked={localSettings.showOnlyActive}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, showOnlyActive: checked})}\n                />\n                <Label htmlFor=\"show-only-active\">Show only enabled alerts</Label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        {activeAlerts.length === 0 ? (\n          <div className=\"text-center text-muted-foreground text-sm py-8\">\n            <Bell className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n            <div>No active alerts</div>\n            <div className=\"text-xs mt-1\">Create alerts to monitor prices</div>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {activeAlerts.slice(0, 5).map((alert: any, index: number) => (\n              <div key={alert.id || index} className=\"flex items-center gap-3\">\n                <div className={`${getConditionColor(alert.condition)}`}>\n                  {getConditionIcon(alert.condition)}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"font-medium text-sm\">{alert.ticker}</div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {alert.condition.replace('_', ' ')} {formatPrice(alert.value)}\n                  </div>\n                </div>\n                <div className=\"flex flex-col items-end\">\n                  {!alert.enabled && (\n                    <Badge variant=\"secondary\" className=\"text-xs\">Disabled</Badge>\n                  )}\n                  {alert.lastTriggered && (\n                    <div className=\"text-xs text-muted-foreground\">\n                      Triggered\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","\"use client\";\n\n// packages/react/checkbox/src/checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form2 = button?.form;\n      if (form2) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form2.addEventListener(\"reset\", reset);\n        return () => form2.removeEventListener(\"reset\", reset);\n      }\n    }, [button, setChecked]);\n    return /* @__PURE__ */ jsxs(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"checkbox\",\n          \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...checkboxProps,\n          ref: composedRefs,\n          onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === \"Enter\") event.preventDefault();\n          }),\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        BubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" },\n          defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked\n        }\n      )\n    ] });\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.state),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef,\n        style: { pointerEvents: \"none\", ...props.style }\n      }\n    ) });\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BubbleInput = (props) => {\n  const { control, checked, bubbles = true, defaultChecked, ...inputProps } = props;\n  const ref = React.useRef(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", { bubbles });\n      input.indeterminate = isIndeterminate(checked);\n      setChecked.call(input, isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type: \"checkbox\",\n      \"aria-hidden\": true,\n      defaultChecked: defaultChecked ?? defaultCheckedRef.current,\n      ...inputProps,\n      tabIndex: -1,\n      ref,\n      style: {\n        ...props.style,\n        ...controlSize,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        opacity: 0,\n        margin: 0\n      }\n    }\n  );\n};\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Checkbox;\nvar Indicator = CheckboxIndicator;\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  Indicator,\n  Root,\n  createCheckboxScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { BarChart3, Settings, TrendingUp, TrendingDown } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\ninterface MarketOverviewWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function MarketOverviewWidget({ widget, onUpdateSettings }: MarketOverviewWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: marketData = [], isLoading } = useQuery({\n    queryKey: ['/api/market/overview'],\n    queryFn: () => apiRequest('GET', '/api/market/overview'),\n  });\n\n  const { data: tickers = [] } = useQuery({\n    queryKey: ['/api/tickers/enabled'],\n    queryFn: () => apiRequest('GET', '/api/tickers/enabled'),\n  });\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const formatPrice = (price: number) => {\n    if (price >= 1) {\n      return `$${price.toLocaleString(undefined, { maximumFractionDigits: 2 })}`;\n    } else {\n      return `$${price.toFixed(6)}`;\n    }\n  };\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      'Major': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100',\n      'Layer1': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-100',\n      'DeFi': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100',\n      'Legacy': 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-100',\n      'Utility': 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-100',\n      'Emerging': 'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-100'\n    };\n    return colors[category as keyof typeof colors] || colors.Legacy;\n  };\n\n  // Mock market data with realistic values\n  const mockMarketData = [\n    { symbol: 'BTCUSDT', name: 'Bitcoin', price: 67890.45, change24h: 2.34, volume24h: 28500000000, category: 'Major' },\n    { symbol: 'ETHUSDT', name: 'Ethereum', price: 3456.78, change24h: 1.87, volume24h: 15600000000, category: 'Major' },\n    { symbol: 'SOLUSDT', name: 'Solana', price: 98.45, change24h: -0.92, volume24h: 2100000000, category: 'Layer1' },\n    { symbol: 'ADAUSDT', name: 'Cardano', price: 0.4567, change24h: 3.21, volume24h: 890000000, category: 'Layer1' },\n    { symbol: 'LINKUSDT', name: 'Chainlink', price: 14.23, change24h: -1.45, volume24h: 456000000, category: 'Utility' },\n    { symbol: 'UNIUSDT', name: 'Uniswap', price: 7.89, change24h: 4.56, volume24h: 234000000, category: 'DeFi' },\n    { symbol: 'DOTUSDT', name: 'Polkadot', price: 5.67, change24h: -2.34, volume24h: 345000000, category: 'Layer1' },\n    { symbol: 'AVAXUSDT', name: 'Avalanche', price: 32.45, change24h: 1.23, volume24h: 567000000, category: 'Layer1' }\n  ];\n\n  const filteredData = mockMarketData\n    .filter(item => localSettings.categories.includes(item.category))\n    .slice(0, localSettings.limit);\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <BarChart3 className=\"h-4 w-4\" />\n            Market Overview\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"flex items-center gap-3\">\n                <div className=\"h-8 w-8 bg-muted rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-muted rounded w-20 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-16\"></div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"h-4 bg-muted rounded w-16 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-12\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <BarChart3 className=\"h-4 w-4\" />\n          Market Overview\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Market Overview Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Number of assets to show</Label>\n                <Input\n                  type=\"number\"\n                  min=\"5\"\n                  max=\"20\"\n                  value={localSettings.limit}\n                  onChange={(e) => setLocalSettings({...localSettings, limit: parseInt(e.target.value) || 10})}\n                />\n              </div>\n              <div>\n                <Label>Asset Categories</Label>\n                <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                  {['Major', 'Layer1', 'DeFi', 'Legacy', 'Utility', 'Emerging'].map(category => (\n                    <div key={category} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id={category}\n                        checked={localSettings.categories.includes(category)}\n                        onCheckedChange={(checked) => {\n                          if (checked) {\n                            setLocalSettings({\n                              ...localSettings,\n                              categories: [...localSettings.categories, category]\n                            });\n                          } else {\n                            setLocalSettings({\n                              ...localSettings,\n                              categories: localSettings.categories.filter((c: string) => c !== category)\n                            });\n                          }\n                        }}\n                      />\n                      <Label htmlFor={category} className=\"text-sm\">{category}</Label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        <div className=\"space-y-3\">\n          {filteredData.map((asset, index) => (\n            <div key={asset.symbol} className=\"flex items-center gap-3\">\n              <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                <Badge variant=\"secondary\" className={`text-xs ${getCategoryColor(asset.category)}`}>\n                  {asset.symbol.replace('USDT', '')}\n                </Badge>\n                <div className=\"min-w-0\">\n                  <div className=\"font-medium text-sm truncate\">{asset.name}</div>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"font-medium text-sm\">{formatPrice(asset.price)}</div>\n                <div className={`flex items-center gap-1 text-xs ${getChangeColor(asset.change24h)}`}>\n                  {asset.change24h >= 0 ? (\n                    <TrendingUp className=\"h-3 w-3\" />\n                  ) : (\n                    <TrendingDown className=\"h-3 w-3\" />\n                  )}\n                  {formatPercentage(asset.change24h)}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { LineChart, Settings, TrendingUp, TrendingDown, Target, Activity } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\n\ninterface TradingPerformanceWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function TradingPerformanceWidget({ widget, onUpdateSettings }: TradingPerformanceWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: performance, isLoading } = useQuery({\n    queryKey: ['/api/trading/performance', localSettings.timeframe],\n    queryFn: () => apiRequest('GET', `/api/trading/performance?timeframe=${localSettings.timeframe}`),\n  });\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return `$${amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;\n  };\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n  };\n\n  // Mock performance data\n  const mockPerformance = {\n    totalTrades: 47,\n    winRate: 68.09,\n    totalPnL: 12543.75,\n    totalPnLPercent: 15.68,\n    avgWin: 856.23,\n    avgLoss: -432.18,\n    maxDrawdown: -2456.78,\n    sharpeRatio: 1.85,\n    profitFactor: 2.34,\n    bestTrade: 1850.45,\n    worstTrade: -850.22,\n    consecutiveWins: 5,\n    consecutiveLosses: 2,\n    dailyReturns: [\n      { date: '2025-01-01', return: 2.3 },\n      { date: '2025-01-02', return: -0.8 },\n      { date: '2025-01-03', return: 1.5 },\n      { date: '2025-01-04', return: 3.2 },\n      { date: '2025-01-05', return: -1.1 },\n      { date: '2025-01-06', return: 2.8 },\n      { date: '2025-01-07', return: 0.9 }\n    ]\n  };\n\n  const performanceData = performance || mockPerformance;\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <LineChart className=\"h-4 w-4\" />\n            Trading Performance\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"h-16 bg-muted rounded\"></div>\n              <div className=\"h-16 bg-muted rounded\"></div>\n            </div>\n            <div className=\"h-24 bg-muted rounded\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <LineChart className=\"h-4 w-4\" />\n          Trading Performance ({localSettings.timeframe})\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>Performance Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Time Frame</Label>\n                <Select \n                  value={localSettings.timeframe} \n                  onValueChange={(value) => setLocalSettings({...localSettings, timeframe: value})}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"7d\">Last 7 Days</SelectItem>\n                    <SelectItem value=\"30d\">Last 30 Days</SelectItem>\n                    <SelectItem value=\"90d\">Last 90 Days</SelectItem>\n                    <SelectItem value=\"1y\">Last Year</SelectItem>\n                    <SelectItem value=\"all\">All Time</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"show-chart\"\n                  checked={localSettings.showChart}\n                  onCheckedChange={(checked) => setLocalSettings({...localSettings, showChart: checked})}\n                />\n                <Label htmlFor=\"show-chart\">Show performance chart</Label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4 space-y-4\">\n        {/* Key Metrics */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"space-y-1\">\n            <div className=\"text-xs text-muted-foreground\">Total P&L</div>\n            <div className={`text-lg font-bold ${getChangeColor(performanceData.totalPnL)}`}>\n              {formatCurrency(performanceData.totalPnL)}\n            </div>\n            <div className={`text-xs ${getChangeColor(performanceData.totalPnLPercent)}`}>\n              {formatPercentage(performanceData.totalPnLPercent)}\n            </div>\n          </div>\n          <div className=\"space-y-1\">\n            <div className=\"text-xs text-muted-foreground\">Win Rate</div>\n            <div className=\"text-lg font-bold flex items-center gap-1\">\n              <Target className=\"h-4 w-4\" />\n              {performanceData.winRate.toFixed(1)}%\n            </div>\n            <div className=\"text-xs text-muted-foreground\">\n              {performanceData.totalTrades} trades\n            </div>\n          </div>\n        </div>\n\n        {/* Additional Metrics */}\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <div className=\"text-xs text-muted-foreground\">Avg Win</div>\n            <div className=\"font-medium text-green-600 dark:text-green-400\">\n              {formatCurrency(performanceData.avgWin)}\n            </div>\n          </div>\n          <div>\n            <div className=\"text-xs text-muted-foreground\">Avg Loss</div>\n            <div className=\"font-medium text-red-600 dark:text-red-400\">\n              {formatCurrency(Math.abs(performanceData.avgLoss))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <div className=\"text-xs text-muted-foreground\">Sharpe Ratio</div>\n            <div className=\"font-medium\">{performanceData.sharpeRatio.toFixed(2)}</div>\n          </div>\n          <div>\n            <div className=\"text-xs text-muted-foreground\">Profit Factor</div>\n            <div className=\"font-medium\">{performanceData.profitFactor.toFixed(2)}</div>\n          </div>\n        </div>\n\n        {/* Performance Chart */}\n        {localSettings.showChart && performanceData.dailyReturns && (\n          <div className=\"space-y-2\">\n            <div className=\"text-xs text-muted-foreground\">Daily Returns (%)</div>\n            <div className=\"h-16 flex items-end space-x-1\">\n              {performanceData.dailyReturns.slice(-14).map((day: any, index: number) => {\n                const height = Math.max(2, Math.abs(day.return) * 5);\n                const isPositive = day.return >= 0;\n                return (\n                  <div\n                    key={index}\n                    className={`flex-1 ${\n                      isPositive ? 'bg-green-500' : 'bg-red-500'\n                    } rounded-sm opacity-80`}\n                    style={{ height: `${height}px` }}\n                    title={`${day.date}: ${formatPercentage(day.return)}`}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        {/* Recent Performance */}\n        <div className=\"space-y-2\">\n          <div className=\"text-xs text-muted-foreground\">Recent Activity</div>\n          <div className=\"flex items-center justify-between text-sm\">\n            <div className=\"flex items-center gap-1\">\n              <Activity className=\"h-3 w-3\" />\n              Best Trade\n            </div>\n            <div className=\"font-medium text-green-600 dark:text-green-400\">\n              {formatCurrency(performanceData.bestTrade)}\n            </div>\n          </div>\n          <div className=\"flex items-center justify-between text-sm\">\n            <div className=\"flex items-center gap-1\">\n              <TrendingDown className=\"h-3 w-3\" />\n              Max Drawdown\n            </div>\n            <div className=\"font-medium text-red-600 dark:text-red-400\">\n              {formatCurrency(Math.abs(performanceData.maxDrawdown))}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Activity, Settings, ExternalLink, Clock } from 'lucide-react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\ninterface NewsWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function NewsWidget({ widget, onUpdateSettings }: NewsWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const formatTime = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n    const diffHours = Math.floor(diffMins / 60);\n\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    return date.toLocaleDateString();\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      'breaking': 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-100',\n      'market': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-100',\n      'tech': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-100',\n      'regulation': 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-100',\n      'defi': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-100',\n      'nft': 'bg-pink-100 text-pink-800 dark:bg-pink-900 dark:text-pink-100'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-100';\n  };\n\n  // Mock news data\n  const mockNews = [\n    {\n      id: '1',\n      title: 'Bitcoin ETF Sees Record Inflows This Week',\n      summary: 'Institutional adoption continues as Bitcoin ETFs attract significant capital...',\n      category: 'market',\n      source: 'CryptoNews',\n      publishedAt: new Date(Date.now() - 30 * 60000).toISOString(),\n      url: '#'\n    },\n    {\n      id: '2',\n      title: 'Ethereum 2.0 Staking Rewards Increase',\n      summary: 'Network upgrades lead to higher staking yields for validators...',\n      category: 'tech',\n      source: 'EthHub',\n      publishedAt: new Date(Date.now() - 2 * 60 * 60000).toISOString(),\n      url: '#'\n    },\n    {\n      id: '3',\n      title: 'DeFi Protocol Launches New Yield Farming Program',\n      summary: 'Users can now earn enhanced rewards through liquidity provision...',\n      category: 'defi',\n      source: 'DeFiPulse',\n      publishedAt: new Date(Date.now() - 4 * 60 * 60000).toISOString(),\n      url: '#'\n    },\n    {\n      id: '4',\n      title: 'Regulatory Clarity Expected for Crypto Markets',\n      summary: 'Government officials hint at comprehensive framework for digital assets...',\n      category: 'regulation',\n      source: 'RegulatoryWatch',\n      publishedAt: new Date(Date.now() - 6 * 60 * 60000).toISOString(),\n      url: '#'\n    },\n    {\n      id: '5',\n      title: 'Major NFT Marketplace Announces New Features',\n      summary: 'Enhanced trading tools and royalty management coming soon...',\n      category: 'nft',\n      source: 'NFTInsider',\n      publishedAt: new Date(Date.now() - 8 * 60 * 60000).toISOString(),\n      url: '#'\n    }\n  ];\n\n  const filteredNews = mockNews\n    .filter(article => localSettings.sources.includes('general') || localSettings.sources.includes(article.category))\n    .slice(0, localSettings.limit);\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <Activity className=\"h-4 w-4\" />\n          Crypto News\n        </CardTitle>\n        <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n          <DialogTrigger asChild>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n              <Settings className=\"h-3 w-3\" />\n            </Button>\n          </DialogTrigger>\n          <DialogContent>\n            <DialogHeader>\n              <DialogTitle>News Widget Settings</DialogTitle>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div>\n                <Label>Number of articles to show</Label>\n                <Input\n                  type=\"number\"\n                  min=\"3\"\n                  max=\"10\"\n                  value={localSettings.limit}\n                  onChange={(e) => setLocalSettings({...localSettings, limit: parseInt(e.target.value) || 5})}\n                />\n              </div>\n              <div>\n                <Label>News Sources</Label>\n                <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                  {['general', 'market', 'tech', 'regulation', 'defi', 'nft'].map(source => (\n                    <div key={source} className=\"flex items-center space-x-2\">\n                      <Checkbox\n                        id={source}\n                        checked={localSettings.sources.includes(source)}\n                        onCheckedChange={(checked) => {\n                          if (checked) {\n                            setLocalSettings({\n                              ...localSettings,\n                              sources: [...localSettings.sources, source]\n                            });\n                          } else {\n                            setLocalSettings({\n                              ...localSettings,\n                              sources: localSettings.sources.filter((s: string) => s !== source)\n                            });\n                          }\n                        }}\n                      />\n                      <Label htmlFor={source} className=\"text-sm capitalize\">{source}</Label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={saveSettings}>Save</Button>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        {filteredNews.length === 0 ? (\n          <div className=\"text-center text-muted-foreground text-sm py-8\">\n            <Activity className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n            <div>No news available</div>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {filteredNews.map((article) => (\n              <div key={article.id} className=\"space-y-2 pb-3 border-b border-border last:border-b-0 last:pb-0\">\n                <div className=\"flex items-start gap-2\">\n                  <Badge variant=\"secondary\" className={`${getCategoryColor(article.category)} text-xs`}>\n                    {article.category}\n                  </Badge>\n                  <div className=\"flex items-center gap-1 text-xs text-muted-foreground\">\n                    <Clock className=\"h-3 w-3\" />\n                    {formatTime(article.publishedAt)}\n                  </div>\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-sm leading-tight mb-1\">\n                    {article.title}\n                  </h4>\n                  <p className=\"text-xs text-muted-foreground line-clamp-2\">\n                    {article.summary}\n                  </p>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"text-xs text-muted-foreground\">\n                    {article.source}\n                  </div>\n                  <Button variant=\"ghost\" size=\"sm\" className=\"h-6 px-2 text-xs\">\n                    <ExternalLink className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Target, Settings, TrendingUp, TrendingDown, Plus, X } from 'lucide-react';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\n\ninterface WatchlistWidgetProps {\n  widget: any;\n  onUpdateSettings: (settings: Record<string, any>) => void;\n  onRemove: () => void;\n  onToggleEnabled: () => void;\n}\n\nexport default function WatchlistWidget({ widget, onUpdateSettings }: WatchlistWidgetProps) {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isAddAssetOpen, setIsAddAssetOpen] = useState(false);\n  const [selectedAsset, setSelectedAsset] = useState('');\n  const [localSettings, setLocalSettings] = useState(widget.settings);\n\n  const { data: watchlist = [], isLoading } = useQuery({\n    queryKey: ['/api/watchlist'],\n    queryFn: () => apiRequest('GET', '/api/watchlist'),\n  });\n\n  const { data: availableAssets = [] } = useQuery({\n    queryKey: ['/api/tickers/enabled'],\n    queryFn: () => apiRequest('GET', '/api/tickers/enabled'),\n  });\n\n  const saveSettings = () => {\n    onUpdateSettings(localSettings);\n    setIsSettingsOpen(false);\n  };\n\n  const formatPrice = (price: number) => {\n    if (price >= 1) {\n      return `$${price.toLocaleString(undefined, { maximumFractionDigits: 2 })}`;\n    } else {\n      return `$${price.toFixed(6)}`;\n    }\n  };\n\n  const formatPercentage = (percentage: number) => {\n    const sign = percentage >= 0 ? '+' : '';\n    return `${sign}${percentage.toFixed(2)}%`;\n  };\n\n  const getChangeColor = (change: number) => {\n    return change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n  };\n\n  // Mock watchlist data\n  const mockWatchlist = [\n    { symbol: 'BTCUSDT', name: 'Bitcoin', price: 67890.45, change24h: 2.34, volume24h: 28500000000 },\n    { symbol: 'ETHUSDT', name: 'Ethereum', price: 3456.78, change24h: 1.87, volume24h: 15600000000 },\n    { symbol: 'SOLUSDT', name: 'Solana', price: 98.45, change24h: -0.92, volume24h: 2100000000 },\n    { symbol: 'ADAUSDT', name: 'Cardano', price: 0.4567, change24h: 3.21, volume24h: 890000000 }\n  ];\n\n  const displayWatchlist = watchlist.length > 0 ? watchlist : mockWatchlist;\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader className=\"pb-2\">\n          <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n            <Target className=\"h-4 w-4\" />\n            Watchlist\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3].map((i) => (\n              <div key={i} className=\"flex items-center gap-3\">\n                <div className=\"h-8 w-8 bg-muted rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-muted rounded w-20 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-16\"></div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"h-4 bg-muted rounded w-16 mb-1\"></div>\n                  <div className=\"h-3 bg-muted rounded w-12\"></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-2 flex flex-row items-center justify-between\">\n        <CardTitle className=\"text-sm font-medium flex items-center gap-2\">\n          <Target className=\"h-4 w-4\" />\n          Watchlist ({displayWatchlist.length})\n        </CardTitle>\n        <div className=\"flex gap-1\">\n          <Dialog open={isAddAssetOpen} onOpenChange={setIsAddAssetOpen}>\n            <DialogTrigger asChild>\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n                <Plus className=\"h-3 w-3\" />\n              </Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Add to Watchlist</DialogTitle>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label>Select Asset</Label>\n                  <Select value={selectedAsset} onValueChange={setSelectedAsset}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Choose cryptocurrency\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {availableAssets.map((asset: any) => (\n                        <SelectItem key={asset.symbol} value={asset.symbol}>\n                          {asset.name} ({asset.symbol.replace('USDT', '')})\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setIsAddAssetOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button onClick={() => {\n                    // Add asset to watchlist logic here\n                    setIsAddAssetOpen(false);\n                    setSelectedAsset('');\n                  }} disabled={!selectedAsset}>\n                    Add to Watchlist\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Dialog open={isSettingsOpen} onOpenChange={setIsSettingsOpen}>\n            <DialogTrigger asChild>\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\">\n                <Settings className=\"h-3 w-3\" />\n              </Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Watchlist Widget Settings</DialogTitle>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"show-charts\"\n                    checked={localSettings.showCharts}\n                    onCheckedChange={(checked) => setLocalSettings({...localSettings, showCharts: checked})}\n                  />\n                  <Label htmlFor=\"show-charts\">Show mini charts</Label>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"compact-view\"\n                    checked={localSettings.compactView}\n                    onCheckedChange={(checked) => setLocalSettings({...localSettings, compactView: checked})}\n                  />\n                  <Label htmlFor=\"compact-view\">Compact view</Label>\n                </div>\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setIsSettingsOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button onClick={saveSettings}>Save</Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-4\">\n        {displayWatchlist.length === 0 ? (\n          <div className=\"text-center text-muted-foreground text-sm py-8\">\n            <Target className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n            <div>No assets in watchlist</div>\n            <div className=\"text-xs mt-1\">Add cryptocurrencies to monitor</div>\n          </div>\n        ) : (\n          <div className=\"space-y-3\">\n            {displayWatchlist.map((asset, index) => (\n              <div key={asset.symbol} className=\"flex items-center gap-3 group\">\n                <div className=\"flex items-center gap-2 flex-1 min-w-0\">\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {asset.symbol.replace('USDT', '')}\n                  </Badge>\n                  {!localSettings.compactView && (\n                    <div className=\"min-w-0\">\n                      <div className=\"font-medium text-sm truncate\">{asset.name}</div>\n                    </div>\n                  )}\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"font-medium text-sm\">{formatPrice(asset.price)}</div>\n                  <div className={`flex items-center gap-1 text-xs ${getChangeColor(asset.change24h)}`}>\n                    {asset.change24h >= 0 ? (\n                      <TrendingUp className=\"h-3 w-3\" />\n                    ) : (\n                      <TrendingDown className=\"h-3 w-3\" />\n                    )}\n                    {formatPercentage(asset.change24h)}\n                  </div>\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"h-6 w-6 p-0 opacity-0 group-hover:opacity-100\"\n                  onClick={() => {\n                    // Remove from watchlist logic here\n                  }}\n                >\n                  <X className=\"h-3 w-3\" />\n                </Button>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        {/* Mini charts if enabled */}\n        {localSettings.showCharts && displayWatchlist.length > 0 && (\n          <div className=\"mt-4 space-y-2\">\n            <div className=\"text-xs text-muted-foreground\">Price Trends (24h)</div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {displayWatchlist.slice(0, 4).map((asset) => (\n                <div key={asset.symbol} className=\"space-y-1\">\n                  <div className=\"text-xs font-medium\">{asset.symbol.replace('USDT', '')}</div>\n                  <div className=\"h-8 flex items-end space-x-0.5\">\n                    {Array.from({ length: 12 }, (_, i) => {\n                      const height = Math.max(2, Math.random() * 30 + 5);\n                      const isGreen = Math.random() > 0.5;\n                      return (\n                        <div\n                          key={i}\n                          className={`flex-1 ${\n                            isGreen ? 'bg-green-500' : 'bg-red-500'\n                          } rounded-sm opacity-60`}\n                          style={{ height: `${height}px` }}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  Settings, \n  Plus, \n  X, \n  TrendingUp, \n  DollarSign, \n  Activity, \n  BarChart3,\n  PieChart,\n  LineChart,\n  Bell,\n  Target\n} from 'lucide-react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\n\n// Widget Components\nimport PriceWidget from './widgets/PriceWidget';\nimport PortfolioWidget from './widgets/PortfolioWidget';\nimport SignalsWidget from './widgets/SignalsWidget';\nimport AlertsWidget from './widgets/AlertsWidget';\nimport MarketOverviewWidget from './widgets/MarketOverviewWidget';\nimport TradingPerformanceWidget from './widgets/TradingPerformanceWidget';\nimport NewsWidget from './widgets/NewsWidget';\nimport WatchlistWidget from './widgets/WatchlistWidget';\n\ninterface Widget {\n  id: string;\n  type: string;\n  title: string;\n  position: number;\n  size: 'small' | 'medium' | 'large';\n  settings: Record<string, any>;\n  enabled: boolean;\n}\n\ninterface DashboardLayout {\n  id?: string;\n  userId: string;\n  name: string;\n  widgets: Widget[];\n  isDefault: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nconst AVAILABLE_WIDGETS = [\n  {\n    type: 'price',\n    title: 'Price Tracker',\n    icon: DollarSign,\n    description: 'Real-time cryptocurrency prices with alerts',\n    defaultSize: 'medium',\n    defaultSettings: { ticker: 'BTCUSDT', showChart: true }\n  },\n  {\n    type: 'portfolio',\n    title: 'Portfolio Overview',\n    icon: PieChart,\n    description: 'Your portfolio balance and performance',\n    defaultSize: 'large',\n    defaultSettings: { showAllocation: true, showPnL: true }\n  },\n  {\n    type: 'signals',\n    title: 'Trading Signals',\n    icon: TrendingUp,\n    description: 'Latest buy/sell signals and recommendations',\n    defaultSize: 'medium',\n    defaultSettings: { limit: 5, autoRefresh: true }\n  },\n  {\n    type: 'alerts',\n    title: 'Active Alerts',\n    icon: Bell,\n    description: 'Your price alerts and notifications',\n    defaultSize: 'small',\n    defaultSettings: { showOnlyActive: true }\n  },\n  {\n    type: 'market-overview',\n    title: 'Market Overview',\n    icon: BarChart3,\n    description: 'Market trends and top movers',\n    defaultSize: 'large',\n    defaultSettings: { categories: ['Major', 'DeFi'], limit: 10 }\n  },\n  {\n    type: 'trading-performance',\n    title: 'Trading Performance',\n    icon: LineChart,\n    description: 'Your trading statistics and performance metrics',\n    defaultSize: 'large',\n    defaultSettings: { timeframe: '30d', showChart: true }\n  },\n  {\n    type: 'news',\n    title: 'Crypto News',\n    icon: Activity,\n    description: 'Latest cryptocurrency news and updates',\n    defaultSize: 'medium',\n    defaultSettings: { sources: ['general'], limit: 5 }\n  },\n  {\n    type: 'watchlist',\n    title: 'Watchlist',\n    icon: Target,\n    description: 'Your favorite cryptocurrencies to monitor',\n    defaultSize: 'medium',\n    defaultSettings: { showCharts: false, compactView: true }\n  }\n];\n\nexport default function SimpleDashboard() {\n  const [dashboardLayout, setDashboardLayout] = useState<DashboardLayout | null>(null);\n  const [isAddWidgetOpen, setIsAddWidgetOpen] = useState(false);\n  const [selectedWidgetType, setSelectedWidgetType] = useState('');\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Fetch dashboard layout\n  const { data: layout, isLoading } = useQuery({\n    queryKey: ['/api/dashboard/layout'],\n    queryFn: () => apiRequest('GET', '/api/dashboard/layout'),\n  });\n\n  // Save dashboard layout\n  const saveLayoutMutation = useMutation({\n    mutationFn: (layout: DashboardLayout) => \n      apiRequest('POST', '/api/dashboard/layout', layout),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/dashboard/layout'] });\n      toast({\n        title: \"Dashboard Saved\",\n        description: \"Your dashboard layout has been saved\",\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (layout) {\n      setDashboardLayout(layout);\n    } else {\n      // Create default layout\n      const defaultLayout: DashboardLayout = {\n        userId: 'demo-user',\n        name: 'Default Dashboard',\n        isDefault: true,\n        widgets: [\n          {\n            id: 'widget-1',\n            type: 'price',\n            title: 'BTC Price',\n            position: 0,\n            size: 'medium',\n            settings: { ticker: 'BTCUSDT', showChart: true },\n            enabled: true\n          },\n          {\n            id: 'widget-2',\n            type: 'portfolio',\n            title: 'Portfolio',\n            position: 1,\n            size: 'large',\n            settings: { showAllocation: true, showPnL: true },\n            enabled: true\n          },\n          {\n            id: 'widget-3',\n            type: 'signals',\n            title: 'Trading Signals',\n            position: 2,\n            size: 'medium',\n            settings: { limit: 5, autoRefresh: true },\n            enabled: true\n          }\n        ]\n      };\n      setDashboardLayout(defaultLayout);\n    }\n  }, [layout]);\n\n  const addWidget = () => {\n    if (!selectedWidgetType || !dashboardLayout) return;\n\n    const widgetConfig = AVAILABLE_WIDGETS.find(w => w.type === selectedWidgetType);\n    if (!widgetConfig) return;\n\n    const newWidget: Widget = {\n      id: `widget-${Date.now()}`,\n      type: selectedWidgetType,\n      title: widgetConfig.title,\n      position: dashboardLayout.widgets.length,\n      size: widgetConfig.defaultSize,\n      settings: widgetConfig.defaultSettings,\n      enabled: true\n    };\n\n    setDashboardLayout({\n      ...dashboardLayout,\n      widgets: [...dashboardLayout.widgets, newWidget]\n    });\n\n    setIsAddWidgetOpen(false);\n    setSelectedWidgetType('');\n\n    toast({\n      title: \"Widget Added\",\n      description: `${widgetConfig.title} widget has been added to your dashboard`,\n    });\n  };\n\n  const removeWidget = (widgetId: string) => {\n    if (!dashboardLayout) return;\n\n    const updatedWidgets = dashboardLayout.widgets\n      .filter(w => w.id !== widgetId)\n      .map((widget, index) => ({ ...widget, position: index }));\n\n    setDashboardLayout({\n      ...dashboardLayout,\n      widgets: updatedWidgets\n    });\n\n    toast({\n      title: \"Widget Removed\",\n      description: \"Widget has been removed from your dashboard\",\n    });\n  };\n\n  const updateWidgetSettings = (widgetId: string, settings: Record<string, any>) => {\n    if (!dashboardLayout) return;\n\n    const updatedWidgets = dashboardLayout.widgets.map(widget =>\n      widget.id === widgetId ? { ...widget, settings: { ...widget.settings, ...settings } } : widget\n    );\n\n    setDashboardLayout({\n      ...dashboardLayout,\n      widgets: updatedWidgets\n    });\n  };\n\n  const toggleWidgetEnabled = (widgetId: string) => {\n    if (!dashboardLayout) return;\n\n    const updatedWidgets = dashboardLayout.widgets.map(widget =>\n      widget.id === widgetId ? { ...widget, enabled: !widget.enabled } : widget\n    );\n\n    setDashboardLayout({\n      ...dashboardLayout,\n      widgets: updatedWidgets\n    });\n  };\n\n  const saveDashboard = () => {\n    if (dashboardLayout) {\n      saveLayoutMutation.mutate(dashboardLayout);\n    }\n  };\n\n  const renderWidget = (widget: Widget) => {\n    const commonProps = {\n      widget,\n      onUpdateSettings: (settings: Record<string, any>) => updateWidgetSettings(widget.id, settings),\n      onRemove: () => removeWidget(widget.id),\n      onToggleEnabled: () => toggleWidgetEnabled(widget.id)\n    };\n\n    switch (widget.type) {\n      case 'price':\n        return <PriceWidget {...commonProps} />;\n      case 'portfolio':\n        return <PortfolioWidget {...commonProps} />;\n      case 'signals':\n        return <SignalsWidget {...commonProps} />;\n      case 'alerts':\n        return <AlertsWidget {...commonProps} />;\n      case 'market-overview':\n        return <MarketOverviewWidget {...commonProps} />;\n      case 'trading-performance':\n        return <TradingPerformanceWidget {...commonProps} />;\n      case 'news':\n        return <NewsWidget {...commonProps} />;\n      case 'watchlist':\n        return <WatchlistWidget {...commonProps} />;\n      default:\n        return (\n          <Card className=\"h-full\">\n            <CardContent className=\"p-4\">\n              <div className=\"text-center text-muted-foreground\">\n                Unknown widget type: {widget.type}\n              </div>\n            </CardContent>\n          </Card>\n        );\n    }\n  };\n\n  const getSizeClass = (size: string) => {\n    switch (size) {\n      case 'small': return 'col-span-1';\n      case 'medium': return 'col-span-1 md:col-span-2';\n      case 'large': return 'col-span-1 md:col-span-3';\n      default: return 'col-span-1 md:col-span-2';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center\">\n        <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Trading Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Customize your personal trading insights with widgets\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Dialog open={isAddWidgetOpen} onOpenChange={setIsAddWidgetOpen}>\n            <DialogTrigger asChild>\n              <Button variant=\"outline\">\n                <Plus className=\"h-4 w-4 mr-2\" />\n                Add Widget\n              </Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Add Widget</DialogTitle>\n                <DialogDescription>\n                  Choose a widget to add to your dashboard\n                </DialogDescription>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label>Widget Type</Label>\n                  <Select value={selectedWidgetType} onValueChange={setSelectedWidgetType}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select widget type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {AVAILABLE_WIDGETS.map(widget => (\n                        <SelectItem key={widget.type} value={widget.type}>\n                          <div className=\"flex items-center gap-2\">\n                            <widget.icon className=\"h-4 w-4\" />\n                            <div>\n                              <div className=\"font-medium\">{widget.title}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {widget.description}\n                              </div>\n                            </div>\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"flex justify-end gap-2\">\n                  <Button variant=\"outline\" onClick={() => setIsAddWidgetOpen(false)}>\n                    Cancel\n                  </Button>\n                  <Button onClick={addWidget} disabled={!selectedWidgetType}>\n                    Add Widget\n                  </Button>\n                </div>\n              </div>\n            </DialogContent>\n          </Dialog>\n          <Button onClick={saveDashboard} disabled={saveLayoutMutation.isPending}>\n            <Settings className=\"h-4 w-4 mr-2\" />\n            Save Layout\n          </Button>\n        </div>\n      </div>\n\n      {/* Dashboard Grid */}\n      {dashboardLayout && dashboardLayout.widgets && (\n        <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n          {dashboardLayout.widgets\n            .sort((a, b) => a.position - b.position)\n            .map((widget) => (\n              <div key={widget.id} className={getSizeClass(widget.size)}>\n                <div className=\"relative group h-full\">\n                  <div className=\"absolute top-2 right-2 z-10 opacity-0 group-hover:opacity-100 transition-opacity\">\n                    <div className=\"flex gap-1\">\n                      <div className=\"h-6 w-6 flex items-center justify-center\">\n                        <Switch \n                          checked={widget.enabled} \n                          onCheckedChange={() => toggleWidgetEnabled(widget.id)}\n                          className=\"h-3 w-6\"\n                        />\n                      </div>\n                      <Button\n                        size=\"sm\"\n                        variant=\"ghost\"\n                        className=\"h-6 w-6 p-0\"\n                        onClick={() => removeWidget(widget.id)}\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </Button>\n                    </div>\n                  </div>\n                  {widget.enabled ? renderWidget(widget) : (\n                    <Card className=\"h-full opacity-50\">\n                      <CardContent className=\"p-4 flex items-center justify-center h-full\">\n                        <div className=\"text-center text-muted-foreground\">\n                          <div className=\"font-medium\">{widget.title}</div>\n                          <div className=\"text-sm\">Widget disabled</div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  )}\n                </div>\n              </div>\n            ))}\n        </div>\n      )}\n\n      {/* Empty State */}\n      {dashboardLayout && dashboardLayout.widgets && dashboardLayout.widgets.length === 0 && (\n        <Card className=\"p-12\">\n          <div className=\"text-center\">\n            <BarChart3 className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground\" />\n            <h3 className=\"text-lg font-semibold mb-2\">No Widgets Added</h3>\n            <p className=\"text-muted-foreground mb-4\">\n              Start building your personalized trading dashboard by adding widgets\n            </p>\n            <Button onClick={() => setIsAddWidgetOpen(true)}>\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Add Your First Widget\n            </Button>\n          </div>\n        </Card>\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport SimpleDashboard from '@/components/dashboard/SimpleDashboard';\n\nexport default function DashboardWidgetsPage() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <SimpleDashboard />\n    </div>\n  );\n}"],"names":["PriceWidget","widget","onUpdateSettings","isSettingsOpen","setIsSettingsOpen","useState","localSettings","setLocalSettings","price","isLoading","error","useQuery","apiRequest","ohlcData","formatPrice","formatPercentage","percentage","getChangeColor","change","saveSettings","jsxs","Card","jsx","CardHeader","CardTitle","DollarSign","CardContent","priceData","ticker","basePrices","Dialog","DialogTrigger","Button","Settings","DialogContent","DialogHeader","DialogTitle","Label","Select","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Switch","checked","TrendingUp","TrendingDown","candle","index","height","isGreen","PortfolioWidget","portfolio","performance","PieChart","portfolioData","performanceData","formatCurrency","amount","position","SignalsWidget","signals","demoSignals","signalsData","getSignalColor","type","getSignalIcon","Activity","formatTime","timestamp","date","diffMs","diffMins","diffHours","diffDays","Input","e","signal","Badge","AlertsWidget","alerts","getConditionIcon","condition","Bell","getConditionColor","activeAlerts","alert","i","CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","createContextScope","CheckboxProvider","useCheckboxContext","Checkbox","React.forwardRef","props","forwardedRef","__scopeCheckbox","name","checkedProp","defaultChecked","required","disabled","onCheckedChange","form","checkboxProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","setChecked","useControllableState","initialCheckedStateRef","React.useEffect","form2","reset","Primitive","isIndeterminate","getState","composeEventHandlers","event","prevChecked","BubbleInput","INDICATOR_NAME","CheckboxIndicator","forceMount","indicatorProps","context","Presence","control","bubbles","inputProps","ref","usePrevious","controlSize","useSize","input","inputProto","defaultCheckedRef","Root","Indicator","className","CheckboxPrimitive.Root","cn","CheckboxPrimitive.Indicator","Check","MarketOverviewWidget","marketData","getCategoryColor","category","colors","filteredData","item","BarChart3","c","asset","TradingPerformanceWidget","LineChart","Target","day","isPositive","NewsWidget","filteredNews","article","source","s","Clock","ExternalLink","WatchlistWidget","isAddAssetOpen","setIsAddAssetOpen","selectedAsset","setSelectedAsset","watchlist","availableAssets","mockWatchlist","displayWatchlist","Plus","X","_","AVAILABLE_WIDGETS","SimpleDashboard","dashboardLayout","setDashboardLayout","isAddWidgetOpen","setIsAddWidgetOpen","selectedWidgetType","setSelectedWidgetType","toast","useToast","queryClient","useQueryClient","layout","saveLayoutMutation","useMutation","useEffect","addWidget","widgetConfig","w","newWidget","removeWidget","widgetId","updatedWidgets","updateWidgetSettings","settings","toggleWidgetEnabled","saveDashboard","renderWidget","commonProps","getSizeClass","size","DialogDescription","a","b","DashboardWidgetsPage"],"mappings":"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","x_google_ignoreList":[4]}