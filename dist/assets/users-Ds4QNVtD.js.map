{"version":3,"file":"users-Ds4QNVtD.js","sources":["../../src/components/admin/AdminStats.tsx","../../../node_modules/date-fns/toDate.mjs","../../../node_modules/date-fns/constructFrom.mjs","../../../node_modules/date-fns/constants.mjs","../../../node_modules/date-fns/_lib/defaultOptions.mjs","../../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","../../../node_modules/date-fns/compareAsc.mjs","../../../node_modules/date-fns/constructNow.mjs","../../../node_modules/date-fns/differenceInCalendarMonths.mjs","../../../node_modules/date-fns/_lib/getRoundingMethod.mjs","../../../node_modules/date-fns/differenceInMilliseconds.mjs","../../../node_modules/date-fns/endOfDay.mjs","../../../node_modules/date-fns/endOfMonth.mjs","../../../node_modules/date-fns/isLastDayOfMonth.mjs","../../../node_modules/date-fns/differenceInMonths.mjs","../../../node_modules/date-fns/differenceInSeconds.mjs","../../../node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","../../../node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","../../../node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","../../../node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","../../../node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","../../../node_modules/date-fns/locale/en-US/_lib/localize.mjs","../../../node_modules/date-fns/locale/_lib/buildMatchFn.mjs","../../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","../../../node_modules/date-fns/locale/en-US/_lib/match.mjs","../../../node_modules/date-fns/locale/en-US.mjs","../../../node_modules/date-fns/formatDistance.mjs","../../../node_modules/date-fns/formatDistanceToNow.mjs","../../src/components/admin/UserManagementTable.tsx","../../src/components/admin/AdminTableCard.tsx","../../src/components/admin/QuickActions.tsx","../../src/pages/admin/users.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Users, Activity, Shield, Database } from \"lucide-react\";\n\ninterface AdminStatsProps {\n  totalUsers: number;\n  totalSignals: number;\n  adminUsers: number;\n  activeSessions: number;\n}\n\nexport default function AdminStats({ \n  totalUsers, \n  totalSignals, \n  adminUsers, \n  activeSessions \n}: AdminStatsProps) {\n  const stats = [\n    {\n      title: \"Total Users\",\n      value: totalUsers.toString(),\n      icon: Users,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-50\"\n    },\n    {\n      title: \"Trading Signals\",\n      value: totalSignals.toString(),\n      icon: Activity,\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50\"\n    },\n    {\n      title: \"Admin Users\",\n      value: adminUsers.toString(),\n      icon: Shield,\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-50\"\n    },\n    {\n      title: \"Active Sessions\",\n      value: activeSessions.toString(),\n      icon: Database,\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-50\"\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6\">\n      {stats.map((stat, index) => {\n        const Icon = stat.icon;\n        return (\n          <Card key={index}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\n              <div className={`p-2 rounded-lg ${stat.bgColor}`}>\n                <Icon className={`h-4 w-4 ${stat.color}`} />\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className={`text-2xl font-bold ${stat.color}`}>\n                {stat.value}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Live count\n              </p>\n            </CardContent>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name constructNow\n * @category Generic Helpers\n * @summary Constructs a new current date using the passed value constructor.\n * @pure false\n *\n * @description\n * The function constructs a new current date using the constructor from\n * the reference date. It helps to build generic functions that accept date\n * extensions and use the current date.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n *\n * @returns Current date initialized using the given date constructor\n *\n * @example\n * import { constructNow, isSameDay } from 'date-fns'\n *\n * function isToday<DateType extends Date>(\n *   date: DateType | number | string,\n * ): boolean {\n *   // If we were to use `new Date()` directly, the function would  behave\n *   // differently in different timezones and return false for the same date.\n *   return isSameDay(date, constructNow(date));\n * }\n */\nexport function constructNow(date) {\n  return constructFrom(date, Date.now());\n}\n\n// Fallback for modularized imports:\nexport default constructNow;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { minutesInDay, minutesInMonth } from \"./constants.mjs\";\nimport { differenceInMonths } from \"./differenceInMonths.mjs\";\nimport { differenceInSeconds } from \"./differenceInSeconds.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date\n * @param baseDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport function formatDistance(date, baseDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(date, baseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  let dateLeft;\n  let dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(baseDate);\n    dateRight = toDate(date);\n  } else {\n    dateLeft = toDate(date);\n    dateRight = toDate(baseDate);\n  }\n\n  const seconds = differenceInSeconds(dateRight, dateLeft);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(dateRight) -\n      getTimezoneOffsetInMilliseconds(dateLeft)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","import { constructNow } from \"./constructNow.mjs\";\nimport { formatDistance } from \"./formatDistance.mjs\";\n\n/**\n * The {@link formatDistanceToNow} function options.\n */\n\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - The object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * const result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * const result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * const result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * const eoLocale = require('date-fns/locale/eo')\n * const result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistanceToNow(date, options) {\n  return formatDistance(date, constructNow(date), options);\n}\n\n// Fallback for modularized imports:\nexport default formatDistanceToNow;\n","import { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Edit, Trash2 } from \"lucide-react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface User {\n  id: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  role: \"admin\" | \"user\";\n  isActive: boolean;\n  createdAt: string;\n  lastLoginAt?: string;\n}\n\ninterface UserManagementTableProps {\n  users: User[];\n  isLoading: boolean;\n  onEditUser: (user: User) => void;\n  onDeleteUser: (user: User) => void;\n}\n\nexport default function UserManagementTable({\n  users,\n  isLoading,\n  onEditUser,\n  onDeleteUser,\n}: UserManagementTableProps) {\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        {[...Array(5)].map((_, i) => (\n          <div key={i} className=\"flex items-center space-x-4 p-4 border rounded\">\n            <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"h-4 w-24 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"h-4 w-16 bg-gray-200 rounded animate-pulse\" />\n            <div className=\"h-8 w-20 bg-gray-200 rounded animate-pulse\" />\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"rounded-md border\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>User</TableHead>\n            <TableHead>Role</TableHead>\n            <TableHead>Status</TableHead>\n            <TableHead>Last Login</TableHead>\n            <TableHead className=\"text-right\">Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow key={user.id}>\n              <TableCell>\n                <div>\n                  <p className=\"font-medium\">{user.email}</p>\n                  {(user.firstName || user.lastName) && (\n                    <p className=\"text-sm text-muted-foreground\">\n                      {user.firstName} {user.lastName}\n                    </p>\n                  )}\n                </div>\n              </TableCell>\n              <TableCell>\n                <Badge variant={user.role === \"admin\" ? \"default\" : \"secondary\"}>\n                  {user.role}\n                </Badge>\n              </TableCell>\n              <TableCell>\n                <Badge variant={user.isActive ? \"default\" : \"destructive\"}>\n                  {user.isActive ? \"Active\" : \"Inactive\"}\n                </Badge>\n              </TableCell>\n              <TableCell>\n                {user.lastLoginAt ? (\n                  <span className=\"text-sm\">\n                    {formatDistanceToNow(new Date(user.lastLoginAt), {\n                      addSuffix: true,\n                    })}\n                  </span>\n                ) : (\n                  <span className=\"text-sm text-muted-foreground\">Never</span>\n                )}\n              </TableCell>\n              <TableCell className=\"text-right\">\n                <div className=\"flex items-center justify-end space-x-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => onEditUser(user)}\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => onDeleteUser(user)}\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ReactNode } from \"react\";\n\ninterface AdminTableCardProps {\n  title: string;\n  description?: string;\n  children: ReactNode;\n  action?: ReactNode;\n}\n\nexport default function AdminTableCard({\n  title,\n  description,\n  children,\n  action,\n}: AdminTableCardProps) {\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"text-lg font-semibold\">{title}</CardTitle>\n            {description && (\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                {description}\n              </p>\n            )}\n          </div>\n          {action && <div>{action}</div>}\n        </div>\n      </CardHeader>\n      <CardContent>{children}</CardContent>\n    </Card>\n  );\n}","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { \n  Users, \n  Settings, \n  BarChart3, \n  Bell,\n  Database,\n  Shield\n} from \"lucide-react\";\n\nexport default function QuickActions() {\n  const actions = [\n    {\n      title: \"User Management\",\n      description: \"Manage user accounts and permissions\",\n      icon: Users,\n      href: \"/admin/users\",\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-50\"\n    },\n    {\n      title: \"System Settings\",\n      description: \"Configure platform settings\",\n      icon: Settings,\n      href: \"/admin/settings\",\n      color: \"text-gray-600\",\n      bgColor: \"bg-gray-50\"\n    },\n    {\n      title: \"Analytics\",\n      description: \"View platform analytics and reports\",\n      icon: BarChart3,\n      href: \"/admin/analytics\",\n      color: \"text-green-600\",\n      bgColor: \"bg-green-50\"\n    },\n    {\n      title: \"Notifications\",\n      description: \"Manage system notifications\",\n      icon: Bell,\n      href: \"/admin/notifications\",\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-50\"\n    },\n    {\n      title: \"Tickers\",\n      description: \"Manage cryptocurrency tickers\",\n      icon: Database,\n      href: \"/admin/tickers\",\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-50\"\n    },\n    {\n      title: \"Permissions\",\n      description: \"Configure role-based permissions\",\n      icon: Shield,\n      href: \"/admin/permissions\",\n      color: \"text-red-600\",\n      bgColor: \"bg-red-50\"\n    }\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Quick Actions</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {actions.map((action) => {\n            const Icon = action.icon;\n            return (\n              <Link key={action.href} href={action.href}>\n                <Button\n                  variant=\"outline\"\n                  className=\"h-auto p-4 flex flex-col items-start space-y-2 w-full hover:shadow-md transition-shadow\"\n                >\n                  <div className=\"flex items-center space-x-3 w-full\">\n                    <div className={`p-2 rounded-lg ${action.bgColor}`}>\n                      <Icon className={`h-5 w-5 ${action.color}`} />\n                    </div>\n                    <div className=\"text-left flex-1\">\n                      <h3 className=\"font-medium text-sm\">{action.title}</h3>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {action.description}\n                      </p>\n                    </div>\n                  </div>\n                </Button>\n              </Link>\n            );\n          })}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport Sidebar from \"@/components/layout/Sidebar\";\nimport AdminStats from \"@/components/admin/AdminStats\";\nimport UserManagementTable from \"@/components/admin/UserManagementTable\";\nimport AdminTableCard from \"@/components/admin/AdminTableCard\";\nimport QuickActions from \"@/components/admin/QuickActions\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { \n  UserPlus,\n  Search\n} from \"lucide-react\";\n\ninterface User {\n  id: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  role: \"admin\" | \"user\";\n  isActive: boolean;\n  createdAt: string;\n  lastLoginAt?: string;\n}\n\nexport default function AdminUsers() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isCreateUserOpen, setIsCreateUserOpen] = useState(false);\n  const [newUser, setNewUser] = useState({\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    role: \"user\" as \"admin\" | \"user\",\n  });\n\n  const authToken = localStorage.getItem(\"token\");\n\n  const { data: users, isLoading: isLoadingUsers } = useQuery({\n    queryKey: [\"/api/admin/users\"],\n    queryFn: async () => {\n      const response = await fetch(\"/api/admin/users\", {\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      if (!response.ok) throw new Error(\"Failed to fetch users\");\n      return await response.json() as User[];\n    },\n  });\n\n  const createUserMutation = useMutation({\n    mutationFn: async (userData: typeof newUser) => {\n      const response = await fetch(\"/api/admin/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${authToken}`,\n        },\n        body: JSON.stringify(userData),\n      });\n      if (!response.ok) throw new Error(\"Failed to create user\");\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/users\"] });\n      setIsCreateUserOpen(false);\n      setNewUser({\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        role: \"user\",\n      });\n      toast({\n        title: \"Success\",\n        description: \"User created successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to create user\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteUserMutation = useMutation({\n    mutationFn: async (userId: string) => {\n      const response = await fetch(`/api/admin/users/${userId}`, {\n        method: \"DELETE\",\n        headers: { Authorization: `Bearer ${authToken}` },\n      });\n      if (!response.ok) throw new Error(\"Failed to delete user\");\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/users\"] });\n      toast({\n        title: \"Success\",\n        description: \"User deleted successfully\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete user\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const filteredUsers = users?.filter(\n    (user) =>\n      user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.lastName?.toLowerCase().includes(searchTerm.toLowerCase())\n  ) || [];\n\n  const handleCreateUser = () => {\n    createUserMutation.mutate(newUser);\n  };\n\n  const handleEditUser = (user: User) => {\n    toast({\n      title: \"Edit User\",\n      description: `Edit functionality for ${user.email} will be implemented`,\n    });\n  };\n\n  const handleDeleteUser = (user: User) => {\n    if (confirm(`Are you sure you want to delete ${user.email}?`)) {\n      deleteUserMutation.mutate(user.id);\n    }\n  };\n\n  const adminUsers = users?.filter(u => u.role === \"admin\").length || 0;\n  const totalUsers = users?.length || 0;\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"flex\">\n        <Sidebar />\n        \n        <div className=\"w-full ml-0 md:ml-64 flex-1 bg-background\">\n          <div className=\"p-4 md:p-6 space-y-6\">\n            {/* Page Header */}\n            <div className=\"flex items-center justify-between\">\n              <h1 className=\"text-2xl md:text-3xl font-bold\">User Management</h1>\n              <Dialog open={isCreateUserOpen} onOpenChange={setIsCreateUserOpen}>\n                <DialogTrigger asChild>\n                  <Button className=\"flex items-center gap-2\">\n                    <UserPlus className=\"h-4 w-4\" />\n                    <span className=\"hidden sm:inline\">Create User</span>\n                  </Button>\n                </DialogTrigger>\n                <DialogContent>\n                  <DialogHeader>\n                    <DialogTitle>Create New User</DialogTitle>\n                    <DialogDescription>\n                      Add a new user to the platform.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <Label htmlFor=\"firstName\">First Name</Label>\n                        <Input\n                          id=\"firstName\"\n                          value={newUser.firstName}\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, firstName: e.target.value })\n                          }\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"lastName\">Last Name</Label>\n                        <Input\n                          id=\"lastName\"\n                          value={newUser.lastName}\n                          onChange={(e) =>\n                            setNewUser({ ...newUser, lastName: e.target.value })\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div>\n                      <Label htmlFor=\"email\">Email</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={newUser.email}\n                        onChange={(e) =>\n                          setNewUser({ ...newUser, email: e.target.value })\n                        }\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"password\">Password</Label>\n                      <Input\n                        id=\"password\"\n                        type=\"password\"\n                        value={newUser.password}\n                        onChange={(e) =>\n                          setNewUser({ ...newUser, password: e.target.value })\n                        }\n                      />\n                    </div>\n                  </div>\n                  <DialogFooter>\n                    <Button\n                      onClick={handleCreateUser}\n                      disabled={createUserMutation.isPending}\n                    >\n                      {createUserMutation.isPending ? \"Creating...\" : \"Create User\"}\n                    </Button>\n                  </DialogFooter>\n                </DialogContent>\n              </Dialog>\n            </div>\n\n            {/* Admin Stats */}\n            <AdminStats\n              totalUsers={totalUsers}\n              totalSignals={8} // From database\n              adminUsers={adminUsers}\n              activeSessions={totalUsers} // Simplified\n            />\n\n            {/* Search */}\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search users...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n\n            {/* Users Table */}\n            <AdminTableCard\n              title=\"User Accounts\"\n              description={`Manage all user accounts (${filteredUsers.length} users)`}\n            >\n              <UserManagementTable\n                users={filteredUsers}\n                isLoading={isLoadingUsers}\n                onEditUser={handleEditUser}\n                onDeleteUser={handleDeleteUser}\n              />\n            </AdminTableCard>\n\n            {/* Quick Actions */}\n            <QuickActions />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["AdminStats","totalUsers","totalSignals","adminUsers","activeSessions","stats","Users","Activity","Shield","Database","jsx","stat","index","Icon","Card","jsxs","CardHeader","CardTitle","CardContent","toDate","argument","argStr","constructFrom","date","value","minutesInMonth","minutesInDay","defaultOptions","getDefaultOptions","getTimezoneOffsetInMilliseconds","_date","utcDate","compareAsc","dateLeft","dateRight","_dateLeft","_dateRight","diff","constructNow","differenceInCalendarMonths","yearDiff","monthDiff","getRoundingMethod","method","number","result","differenceInMilliseconds","endOfDay","endOfMonth","month","isLastDayOfMonth","differenceInMonths","sign","difference","isLastMonthNotFull","differenceInSeconds","options","formatDistanceLocale","formatDistance","token","count","tokenValue","buildFormatLongFn","args","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","context","valuesArray","defaultWidth","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","key","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","baseDate","locale","defaultLocale","minutesInAlmostTwoDays","comparison","localizeOptions","seconds","offsetInSeconds","minutes","months","hours","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceToNow","UserManagementTable","users","isLoading","onEditUser","onDeleteUser","_","i","Table","TableHeader","TableRow","TableHead","TableBody","user","TableCell","Badge","Button","Edit","Trash2","AdminTableCard","title","description","children","action","QuickActions","actions","Settings","BarChart3","Bell","Link","AdminUsers","toast","useToast","queryClient","useQueryClient","searchTerm","setSearchTerm","useState","isCreateUserOpen","setIsCreateUserOpen","newUser","setNewUser","authToken","isLoadingUsers","useQuery","response","createUserMutation","useMutation","userData","deleteUserMutation","userId","filteredUsers","_a","_b","handleCreateUser","handleEditUser","handleDeleteUser","u","Sidebar","Dialog","DialogTrigger","UserPlus","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","DialogFooter","Search"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}