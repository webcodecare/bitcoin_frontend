{"version":3,"file":"alerts-VuzmW63m.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/maximize-2.js","../../../node_modules/lucide-react/dist/esm/icons/minimize-2.js","../../src/components/alerts/AlertsTable.tsx","../../src/components/charts/WorkingChart.tsx","../../src/components/alerts/AlertsView.tsx","../../src/pages/alerts.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\n  [\"polyline\", { points: \"15 3 21 3 21 9\", key: \"mznyad\" }],\n  [\"polyline\", { points: \"9 21 3 21 3 15\", key: \"1avn1i\" }],\n  [\"line\", { x1: \"21\", x2: \"14\", y1: \"3\", y2: \"10\", key: \"ota7mn\" }],\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\n]);\n\nexport { Maximize2 as default };\n//# sourceMappingURL=maximize-2.js.map\n","/**\n * @license lucide-react v0.453.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Minimize2 = createLucideIcon(\"Minimize2\", [\n  [\"polyline\", { points: \"4 14 10 14 10 20\", key: \"11kfnr\" }],\n  [\"polyline\", { points: \"20 10 14 10 14 4\", key: \"rlmsce\" }],\n  [\"line\", { x1: \"14\", x2: \"21\", y1: \"10\", y2: \"3\", key: \"o5lafz\" }],\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\n]);\n\nexport { Minimize2 as default };\n//# sourceMappingURL=minimize-2.js.map\n","import { useState, useMemo } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { \n  Table, \n  TableBody, \n  TableCell, \n  TableHead, \n  TableHeader, \n  TableRow \n} from '@/components/ui/table';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { \n  Select, \n  SelectContent, \n  SelectItem, \n  SelectTrigger, \n  SelectValue \n} from '@/components/ui/select';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { \n  ChevronLeft, \n  ChevronRight, \n  Search, \n  TrendingUp, \n  TrendingDown,\n  Clock,\n  Filter,\n  RefreshCw,\n  Target\n} from 'lucide-react';\n\ninterface AlertSignal {\n  id: string;\n  userId: string | null;\n  ticker: string;\n  signalType: 'buy' | 'sell';\n  price: number;\n  timestamp: string;\n  timeframe: string;\n  strategy?: string;\n  source: string;\n  note?: string;\n  createdAt: string;\n}\n\ninterface AlertsTableProps {\n  onRowClick?: (alert: AlertSignal) => void;\n  selectedAlertId?: string | null;\n  className?: string;\n}\n\nconst ITEMS_PER_PAGE = 10;\nconst SORT_OPTIONS = [\n  { value: 'timestamp_desc', label: 'Latest First' },\n  { value: 'timestamp_asc', label: 'Oldest First' },\n  { value: 'price_desc', label: 'Price High to Low' },\n  { value: 'price_asc', label: 'Price Low to High' },\n  { value: 'ticker_asc', label: 'Ticker A-Z' },\n  { value: 'ticker_desc', label: 'Ticker Z-A' },\n];\n\nconst FILTER_OPTIONS = [\n  { value: 'all', label: 'All Signals' },\n  { value: 'buy', label: 'Buy Signals' },\n  { value: 'sell', label: 'Sell Signals' },\n];\n\nexport default function AlertsTable({ \n  onRowClick, \n  selectedAlertId, \n  className = '' \n}: AlertsTableProps) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortBy, setSortBy] = useState('timestamp_desc');\n  const [filterBy, setFilterBy] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Fetch alerts data\n  const { data: alertsData, isLoading, refetch } = useQuery<{alerts: AlertSignal[], total: number}>({\n    queryKey: ['/api/signals', { page: currentPage, sort: sortBy, filter: filterBy, search: searchQuery }],\n    queryFn: async () => {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        limit: ITEMS_PER_PAGE.toString(),\n        sort: sortBy,\n        ...(filterBy !== 'all' && { signal_type: filterBy }),\n        ...(searchQuery && { search: searchQuery })\n      });\n      \n      const response = await fetch(`/api/signals/all?${params}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch alerts');\n      }\n      return response.json();\n    },\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  const alerts = alertsData?.alerts || [];\n  const totalAlerts = alertsData?.total || 0;\n  const totalPages = Math.ceil(totalAlerts / ITEMS_PER_PAGE);\n\n  // Memoized filtered and sorted alerts for client-side operations\n  const processedAlerts = useMemo(() => {\n    let filtered = alerts;\n\n    // Apply search filter\n    if (searchQuery) {\n      filtered = filtered.filter(alert => \n        alert.ticker.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        alert.source.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        alert.strategy?.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        alert.note?.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    }\n\n    // Apply signal type filter\n    if (filterBy !== 'all') {\n      filtered = filtered.filter(alert => alert.signalType === filterBy);\n    }\n\n    // Apply sorting\n    return filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'timestamp_desc':\n          return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();\n        case 'timestamp_asc':\n          return new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime();\n        case 'price_desc':\n          return b.price - a.price;\n        case 'price_asc':\n          return a.price - b.price;\n        case 'ticker_asc':\n          return a.ticker.localeCompare(b.ticker);\n        case 'ticker_desc':\n          return b.ticker.localeCompare(a.ticker);\n        default:\n          return 0;\n      }\n    });\n  }, [alerts, searchQuery, filterBy, sortBy]);\n\n  const handleRowClick = (alert: AlertSignal) => {\n    onRowClick?.(alert);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handleRefresh = () => {\n    refetch();\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    \n    return date.toLocaleDateString();\n  };\n\n  const getSignalIcon = (signalType: string) => {\n    return signalType === 'buy' ? (\n      <TrendingUp className=\"h-4 w-4 text-green-500\" />\n    ) : (\n      <TrendingDown className=\"h-4 w-4 text-red-500\" />\n    );\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n          <div>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Target className=\"h-5 w-5\" />\n              Trading Signals\n            </CardTitle>\n            <p className=\"text-sm text-muted-foreground\">\n              View and analyze all trading signals with real-time updates\n            </p>\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\n              <RefreshCw className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"flex flex-col md:flex-row gap-4 pt-4\">\n          <div className=\"flex-1\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by ticker, source, or strategy...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n          </div>\n          \n          <Select value={filterBy} onValueChange={setFilterBy}>\n            <SelectTrigger className=\"w-40\">\n              <Filter className=\"h-4 w-4 mr-2\" />\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {FILTER_OPTIONS.map(option => (\n                <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n\n          <Select value={sortBy} onValueChange={setSortBy}>\n            <SelectTrigger className=\"w-40\">\n              <Clock className=\"h-4 w-4 mr-2\" />\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {SORT_OPTIONS.map(option => (\n                <SelectItem key={option.value} value={option.value}>\n                  {option.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {isLoading ? (\n          <div className=\"space-y-3\">\n            {Array.from({ length: ITEMS_PER_PAGE }).map((_, i) => (\n              <Skeleton key={i} className=\"h-16 w-full\" />\n            ))}\n          </div>\n        ) : (\n          <>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Signal</TableHead>\n                  <TableHead>Ticker</TableHead>\n                  <TableHead>Price</TableHead>\n                  <TableHead>Timeframe</TableHead>\n                  <TableHead>Source</TableHead>\n                  <TableHead>Strategy</TableHead>\n                  <TableHead>Time</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {processedAlerts.map((alert) => (\n                  <TableRow \n                    key={alert.id}\n                    className={`cursor-pointer hover:bg-muted/50 transition-colors ${\n                      selectedAlertId === alert.id ? 'bg-muted ring-2 ring-primary' : ''\n                    }`}\n                    onClick={() => handleRowClick(alert)}\n                  >\n                    <TableCell>\n                      <div className=\"flex items-center gap-2\">\n                        {getSignalIcon(alert.signalType)}\n                        <Badge \n                          variant={alert.signalType === 'buy' ? 'default' : 'destructive'}\n                          className=\"font-medium\"\n                        >\n                          {alert.signalType.toUpperCase()}\n                        </Badge>\n                      </div>\n                    </TableCell>\n                    <TableCell className=\"font-medium\">\n                      {alert.ticker}\n                    </TableCell>\n                    <TableCell className=\"font-mono\">\n                      ${alert.price.toLocaleString(undefined, { \n                        minimumFractionDigits: 2, \n                        maximumFractionDigits: 8 \n                      })}\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\">\n                        {alert.timeframe}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {alert.source}\n                    </TableCell>\n                    <TableCell className=\"text-sm\">\n                      {alert.strategy || '-'}\n                    </TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {formatTimestamp(alert.timestamp)}\n                    </TableCell>\n                    <TableCell>\n                      <Button \n                        size=\"sm\" \n                        variant=\"ghost\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleRowClick(alert);\n                        }}\n                      >\n                        View Chart\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                \n                {processedAlerts.length === 0 && (\n                  <TableRow>\n                    <TableCell colSpan={8} className=\"text-center py-8\">\n                      <div className=\"text-muted-foreground\">\n                        {searchQuery || filterBy !== 'all' \n                          ? 'No signals match your filters' \n                          : 'No trading signals found'\n                        }\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"flex items-center justify-between pt-4\">\n                <div className=\"text-sm text-muted-foreground\">\n                  Showing {((currentPage - 1) * ITEMS_PER_PAGE) + 1} to{' '}\n                  {Math.min(currentPage * ITEMS_PER_PAGE, totalAlerts)} of{' '}\n                  {totalAlerts} signals\n                </div>\n                \n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                  >\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </Button>\n                  \n                  <div className=\"flex items-center gap-1\">\n                    {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {\n                      const page = currentPage <= 3 \n                        ? i + 1 \n                        : currentPage >= totalPages - 2 \n                        ? totalPages - 4 + i \n                        : currentPage - 2 + i;\n                      \n                      if (page < 1 || page > totalPages) return null;\n                      \n                      return (\n                        <Button\n                          key={page}\n                          variant={page === currentPage ? \"default\" : \"outline\"}\n                          size=\"sm\"\n                          onClick={() => handlePageChange(page)}\n                          className=\"w-8 h-8 p-0\"\n                        >\n                          {page}\n                        </Button>\n                      );\n                    })}\n                  </div>\n                  \n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                  >\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useRef } from 'react';\nimport { createChart, IChartApi, LineData, LineSeries } from 'lightweight-charts';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface WorkingChartProps {\n  symbol: string;\n  height?: number;\n}\n\ninterface OHLCData {\n  time: string;\n  close: number;\n}\n\ninterface OHLCResponse {\n  symbol: string;\n  count: number;\n  data: OHLCData[];\n}\n\nexport default function WorkingChart({ symbol, height = 400 }: WorkingChartProps) {\n  const chartContainerRef = useRef<HTMLDivElement>(null);\n  const chartRef = useRef<IChartApi | null>(null);\n\n  // Fetch OHLC data\n  const { data: ohlcData, isLoading } = useQuery<OHLCResponse>({\n    queryKey: [`/api/ohlc?symbol=${symbol}&interval=1h&limit=1000`],\n    enabled: !!symbol,\n  });\n\n  useEffect(() => {\n    if (!chartContainerRef.current || isLoading) return;\n\n    console.log('Creating working chart for', symbol, { hasData: !!ohlcData, count: ohlcData?.count });\n\n    try {\n      // Clean up previous chart\n      if (chartRef.current) {\n        chartRef.current.remove();\n      }\n\n      // Create chart\n      const chart = createChart(chartContainerRef.current, {\n        width: chartContainerRef.current.clientWidth || 800,\n        height: height,\n        layout: {\n          backgroundColor: '#ffffff',\n          textColor: '#333333',\n        },\n      });\n\n      chartRef.current = chart;\n\n      // Add line series\n      const lineSeries = chart.addSeries(LineSeries, {\n        color: '#2196F3',\n        lineWidth: 2,\n      });\n\n      // Load data if available\n      if (ohlcData?.data && ohlcData.data.length > 0) {\n        const chartData: LineData[] = ohlcData.data.map((candle) => ({\n          time: (new Date(candle.time).getTime() / 1000) as any,\n          value: candle.close,\n        }));\n\n        lineSeries.setData(chartData);\n        chart.timeScale().fitContent();\n        console.log('Chart data loaded successfully:', chartData.length, 'points');\n      } else {\n        console.log('No data to load');\n      }\n\n      // Handle resize\n      const handleResize = () => {\n        if (chartContainerRef.current && chart) {\n          chart.applyOptions({\n            width: chartContainerRef.current.clientWidth,\n          });\n        }\n      };\n\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    } catch (error) {\n      console.error('Working chart error:', error);\n    }\n  }, [symbol, ohlcData, height, isLoading]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.remove();\n      }\n    };\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center\" style={{ height: `${height}px` }}>\n        <div>Loading chart...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full border rounded-lg\">\n      <div className=\"p-4 border-b\">\n        <h3 className=\"font-medium\">{symbol} Price Chart</h3>\n        <div className=\"text-sm text-gray-500\">\n          Data points: {ohlcData?.count || 0}\n        </div>\n      </div>\n      <div \n        ref={chartContainerRef} \n        className=\"w-full\"\n        style={{ height: `${height}px` }}\n      />\n    </div>\n  );\n}","import { useState, useCallback, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport AlertsTable from './AlertsTable';\nimport WorkingChart from '@/components/charts/WorkingChart';\nimport { \n  BarChart3, \n  Target, \n  Activity,\n  TrendingUp,\n  Bell,\n  Maximize2,\n  Minimize2\n} from 'lucide-react';\n\ninterface AlertSignal {\n  id: string;\n  userId: string | null;\n  ticker: string;\n  signalType: 'buy' | 'sell';\n  price: number;\n  timestamp: string;\n  timeframe: string;\n  strategy?: string;\n  source: string;\n  note?: string;\n  createdAt: string;\n}\n\ninterface AlertsViewProps {\n  className?: string;\n}\n\nexport default function AlertsView({ className = '' }: AlertsViewProps) {\n  const [selectedAlert, setSelectedAlert] = useState<AlertSignal | null>(null);\n  const [chartSymbol, setChartSymbol] = useState('BTCUSDT');\n  const [isChartExpanded, setIsChartExpanded] = useState(false);\n  const { toast } = useToast();\n\n  const handleAlertRowClick = useCallback((alert: AlertSignal) => {\n    setSelectedAlert(alert);\n    setChartSymbol(alert.ticker);\n    \n    // Highlight chart marker by dispatching custom event\n    window.dispatchEvent(new CustomEvent('highlight-chart-marker', {\n      detail: {\n        alertId: alert.id,\n        ticker: alert.ticker,\n        timestamp: alert.timestamp,\n        signalType: alert.signalType,\n        price: alert.price\n      }\n    }));\n\n    toast({\n      title: \"Signal Selected\",\n      description: `Highlighting ${alert.signalType.toUpperCase()} signal for ${alert.ticker} at $${alert.price}`,\n    });\n  }, [toast]);\n\n  const handleSymbolChange = useCallback((symbol: string) => {\n    setChartSymbol(symbol);\n    setSelectedAlert(null); // Clear selection when manually changing symbol\n  }, []);\n\n  const toggleChartExpanded = () => {\n    setIsChartExpanded(!isChartExpanded);\n  };\n\n  // Listen for chart marker click events (reverse direction)\n  useEffect(() => {\n    const handleChartMarkerClick = (event: CustomEvent) => {\n      const { alertId } = event.detail;\n      if (alertId && alertId !== selectedAlert?.id) {\n        // This would require fetching the alert by ID\n        // For now, we'll just show a toast\n        toast({\n          title: \"Chart Marker Clicked\",\n          description: \"Signal details synchronized with chart\",\n        });\n      }\n    };\n\n    window.addEventListener('chart-marker-click', handleChartMarkerClick as EventListener);\n    return () => {\n      window.removeEventListener('chart-marker-click', handleChartMarkerClick as EventListener);\n    };\n  }, [selectedAlert, toast]);\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Header */}\n      <div className=\"flex flex-col lg:flex-row lg:items-center justify-between gap-4\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight flex items-center gap-2\">\n            <Bell className=\"h-8 w-8\" />\n            Alerts Dashboard\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Monitor trading signals and analyze chart patterns with interactive visualizations\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {selectedAlert && (\n            <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n              <Target className=\"h-3 w-3\" />\n              Signal Selected: {selectedAlert.ticker}\n            </Badge>\n          )}\n          <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n            <Activity className=\"h-3 w-3\" />\n            Live Updates\n          </Badge>\n        </div>\n      </div>\n\n      {/* Chart Section */}\n      <Card className={isChartExpanded ? 'fixed inset-4 z-50' : ''}>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              Chart Analysis\n              {selectedAlert && (\n                <Badge variant=\"default\">\n                  {selectedAlert.signalType.toUpperCase()} Signal\n                </Badge>\n              )}\n            </CardTitle>\n            \n            <div className=\"flex items-center gap-2\">\n              <Button onClick={toggleChartExpanded} size=\"sm\" variant=\"outline\">\n                {isChartExpanded ? (\n                  <Minimize2 className=\"h-4 w-4\" />\n                ) : (\n                  <Maximize2 className=\"h-4 w-4\" />\n                )}\n              </Button>\n            </div>\n          </div>\n          \n          {selectedAlert && (\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 pt-2\">\n              <div className=\"text-center\">\n                <div className=\"text-sm text-muted-foreground\">Signal Type</div>\n                <Badge variant={selectedAlert.signalType === 'buy' ? 'default' : 'destructive'}>\n                  {selectedAlert.signalType.toUpperCase()}\n                </Badge>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-sm text-muted-foreground\">Price</div>\n                <div className=\"font-mono font-semibold\">${selectedAlert.price}</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-sm text-muted-foreground\">Timeframe</div>\n                <Badge variant=\"outline\">{selectedAlert.timeframe}</Badge>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-sm text-muted-foreground\">Source</div>\n                <div className=\"text-sm\">{selectedAlert.source}</div>\n              </div>\n            </div>\n          )}\n        </CardHeader>\n        \n        <CardContent>\n          <WorkingChart\n            symbol={chartSymbol}\n            height={isChartExpanded ? 600 : 400}\n          />\n        </CardContent>\n      </Card>\n\n      {/* Alerts Table */}\n      <AlertsTable\n        onRowClick={handleAlertRowClick}\n        selectedAlertId={selectedAlert?.id || null}\n      />\n\n      {/* Selected Alert Details */}\n      {selectedAlert && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-5 w-5\" />\n              Selected Signal Details\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div>\n                <h4 className=\"font-medium mb-2\">Signal Information</h4>\n                <div className=\"space-y-1 text-sm\">\n                  <div><span className=\"text-muted-foreground\">ID:</span> {selectedAlert.id}</div>\n                  <div><span className=\"text-muted-foreground\">Ticker:</span> {selectedAlert.ticker}</div>\n                  <div><span className=\"text-muted-foreground\">Type:</span> {selectedAlert.signalType}</div>\n                  <div><span className=\"text-muted-foreground\">Price:</span> ${selectedAlert.price}</div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Trading Details</h4>\n                <div className=\"space-y-1 text-sm\">\n                  <div><span className=\"text-muted-foreground\">Timeframe:</span> {selectedAlert.timeframe}</div>\n                  <div><span className=\"text-muted-foreground\">Strategy:</span> {selectedAlert.strategy || 'N/A'}</div>\n                  <div><span className=\"text-muted-foreground\">Source:</span> {selectedAlert.source}</div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Timestamps</h4>\n                <div className=\"space-y-1 text-sm\">\n                  <div><span className=\"text-muted-foreground\">Signal Time:</span></div>\n                  <div className=\"font-mono text-xs\">{new Date(selectedAlert.timestamp).toLocaleString()}</div>\n                  <div><span className=\"text-muted-foreground\">Created:</span></div>\n                  <div className=\"font-mono text-xs\">{new Date(selectedAlert.createdAt).toLocaleString()}</div>\n                </div>\n              </div>\n              \n              <div>\n                <h4 className=\"font-medium mb-2\">Additional Notes</h4>\n                <div className=\"text-sm text-muted-foreground\">\n                  {selectedAlert.note || 'No additional notes available'}\n                </div>\n                {selectedAlert.userId && (\n                  <div className=\"mt-2 text-xs text-muted-foreground\">\n                    User ID: {selectedAlert.userId}\n                  </div>\n                )}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","import { useState } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport Sidebar from \"@/components/layout/Sidebar\";\nimport AlertsView from \"@/components/alerts/AlertsView\";\nimport SubscriptionGuard from \"@/components/auth/SubscriptionGuard\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Bell, \n  Mail, \n  Smartphone, \n  MessageSquare,\n  Volume2,\n  Settings,\n  Target,\n  Activity,\n  Plus,\n  Edit,\n  Trash2\n} from \"lucide-react\";\n\nexport default function Alerts() {\n  const { settings, updateSettings } = useAuth();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showAddDialog, setShowAddDialog] = useState(false);\n  const [editingAlert, setEditingAlert] = useState<any>(null);\n\n  const [alertSettings, setAlertSettings] = useState({\n    email: settings?.notificationEmail ?? true,\n    sms: settings?.notificationSms ?? false,\n    push: settings?.notificationPush ?? true,\n  });\n\n  const [customAlerts, setCustomAlerts] = useState([\n    {\n      id: \"1\",\n      name: \"BTC Price Alert\",\n      condition: \"price_above\",\n      value: 70000,\n      ticker: \"BTCUSDT\",\n      enabled: true,\n    },\n    {\n      id: \"2\",\n      name: \"ETH Drop Alert\",\n      condition: \"price_below\",\n      value: 3000,\n      ticker: \"ETHUSDT\",\n      enabled: false,\n    },\n  ]);\n\n  const handleSettingsUpdate = async (newSettings: Partial<typeof alertSettings>) => {\n    setIsLoading(true);\n    try {\n      await updateSettings({\n        notificationEmail: newSettings.email ?? alertSettings.email,\n        notificationSms: newSettings.sms ?? alertSettings.sms,\n        notificationPush: newSettings.push ?? alertSettings.push,\n      });\n      setAlertSettings({ ...alertSettings, ...newSettings });\n    } catch (error) {\n      toast({\n        title: \"Failed to update settings\",\n        description: \"Please try again later\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAddAlert = () => {\n    toast({\n      title: \"Add Alert\",\n      description: \"Opening alert creation dialog...\",\n    });\n    // You can add a modal/dialog here or navigate to a form\n    setShowAddDialog(true);\n  };\n\n  const handleEditAlert = (alert: any) => {\n    setEditingAlert(alert);\n    toast({\n      title: \"Edit Alert\",\n      description: `Editing alert: ${alert.name}`,\n    });\n  };\n\n  const handleDeleteAlert = (alertId: string) => {\n    setCustomAlerts(prev => prev.filter(alert => alert.id !== alertId));\n    toast({\n      title: \"Alert Deleted\",\n      description: \"The alert has been removed successfully.\",\n    });\n  };\n\n  const alertTypes = [\n    {\n      id: \"email\",\n      title: \"Email Notifications\",\n      description: \"Receive alerts via email\",\n      icon: Mail,\n      enabled: alertSettings.email,\n      details: \"Get detailed signal analysis and market insights via email\",\n    },\n    {\n      id: \"sms\",\n      title: \"SMS Alerts\",\n      description: \"Instant SMS notifications\",\n      icon: Smartphone,\n      enabled: alertSettings.sms,\n      details: \"Immediate text messages for urgent trading signals\",\n    },\n    {\n      id: \"push\",\n      title: \"Push Notifications\",\n      description: \"Browser push notifications\",\n      icon: Bell,\n      enabled: alertSettings.push,\n      details: \"Real-time notifications in your browser\",\n    },\n  ];\n\n  const recentAlerts = [\n    {\n      id: \"1\",\n      type: \"buy\",\n      ticker: \"BTCUSDT\",\n      price: 67234.56,\n      time: \"2 hours ago\",\n      delivered: [\"email\", \"push\"],\n    },\n    {\n      id: \"2\",\n      type: \"sell\",\n      ticker: \"ETHUSDT\",\n      price: 3456.78,\n      time: \"5 hours ago\",\n      delivered: [\"email\"],\n    },\n    {\n      id: \"3\",\n      type: \"price_alert\",\n      ticker: \"BTCUSDT\",\n      price: 70000,\n      time: \"1 day ago\",\n      delivered: [\"email\", \"sms\", \"push\"],\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"flex\">\n        <Sidebar />\n        \n        {/* Main Content */}\n        <div className=\"ml-0 md:ml-64 flex-1\">\n          <div className=\"container mx-auto px-3 sm:px-4 py-6 sm:py-8\">\n            <Tabs defaultValue=\"signals\" className=\"space-y-4 sm:space-y-6\">\n              <TabsList className=\"grid w-full grid-cols-2 text-xs sm:text-sm\">\n                <TabsTrigger value=\"signals\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Target className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n                  <span className=\"hidden sm:inline\">Trading Signals</span>\n                  <span className=\"sm:hidden\">🎯</span>\n                </TabsTrigger>\n                <TabsTrigger value=\"settings\" className=\"flex items-center gap-1 sm:gap-2 px-2 sm:px-4\">\n                  <Settings className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n                  <span className=\"hidden sm:inline\">Alert Settings</span>\n                  <span className=\"sm:hidden\">⚙️</span>\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"signals\" className=\"space-y-6\">\n                <SubscriptionGuard feature=\"advancedAlerts\">\n                  <AlertsView />\n                </SubscriptionGuard>\n              </TabsContent>\n\n              <TabsContent value=\"settings\" className=\"space-y-6\">\n                <div className=\"mb-8\">\n                  <h1 className=\"text-3xl font-bold tracking-tight mb-2\">Alert Settings</h1>\n                  <p className=\"text-muted-foreground\">\n                    Configure your notification preferences and manage custom alerts\n                  </p>\n                </div>\n\n                <div className=\"space-y-6\">\n            {/* Notification Methods */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Settings className=\"mr-2 h-5 w-5\" />\n                  Notification Methods\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                {alertTypes.map((alertType) => {\n                  const IconComponent = alertType.icon;\n                  return (\n                    <div key={alertType.id} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`p-3 rounded-lg ${alertType.enabled ? 'bg-primary text-primary-foreground' : 'bg-muted text-muted-foreground'}`}>\n                          <IconComponent className=\"h-5 w-5\" />\n                        </div>\n                        <div>\n                          <h3 className=\"font-semibold\">{alertType.title}</h3>\n                          <p className=\"text-sm text-muted-foreground\">{alertType.description}</p>\n                          <p className=\"text-xs text-muted-foreground mt-1\">{alertType.details}</p>\n                        </div>\n                      </div>\n                      <Switch\n                        checked={alertType.enabled}\n                        onCheckedChange={(checked) =>\n                          handleSettingsUpdate({ [alertType.id]: checked })\n                        }\n                        disabled={isLoading}\n                      />\n                    </div>\n                  );\n                })}\n              </CardContent>\n            </Card>\n\n            {/* Custom Price Alerts */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"flex items-center\">\n                    <Volume2 className=\"mr-2 h-5 w-5\" />\n                    Custom Price Alerts\n                  </CardTitle>\n                  <Button onClick={handleAddAlert}>\n                    <Plus className=\"mr-2 h-4 w-4\" />\n                    Add Alert\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {customAlerts.map((alert) => (\n                    <div key={alert.id} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <Switch\n                          checked={alert.enabled}\n                          onCheckedChange={(checked) => {\n                            setCustomAlerts(prev =>\n                              prev.map(a => a.id === alert.id ? { ...a, enabled: checked } : a)\n                            );\n                          }}\n                        />\n                        <div>\n                          <h3 className=\"font-semibold\">{alert.name}</h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {alert.ticker} {alert.condition === 'price_above' ? 'above' : 'below'} ${alert.value.toLocaleString()}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Badge variant={alert.enabled ? \"default\" : \"secondary\"}>\n                          {alert.enabled ? \"Active\" : \"Inactive\"}\n                        </Badge>\n                        <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditAlert(alert)}>\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive\" onClick={() => handleDeleteAlert(alert.id)}>\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Signal Preferences */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Signal Preferences</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"signal-frequency\">Signal Frequency</Label>\n                    <Select defaultValue=\"all\">\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select frequency\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Signals</SelectItem>\n                        <SelectItem value=\"high-confidence\">High Confidence Only</SelectItem>\n                        <SelectItem value=\"buy-only\">Buy Signals Only</SelectItem>\n                        <SelectItem value=\"sell-only\">Sell Signals Only</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"minimum-price\">Minimum Price Change (%)</Label>\n                    <Input \n                      id=\"minimum-price\"\n                      type=\"number\"\n                      placeholder=\"2.5\"\n                      defaultValue=\"2.5\"\n                    />\n                  </div>\n                </div>\n                \n                <Separator />\n                \n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Quiet Hours</h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"quiet-start\">Start Time</Label>\n                      <Input \n                        id=\"quiet-start\"\n                        type=\"time\"\n                        defaultValue=\"22:00\"\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"quiet-end\">End Time</Label>\n                      <Input \n                        id=\"quiet-end\"\n                        type=\"time\"\n                        defaultValue=\"08:00\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Recent Alerts */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Alerts</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {recentAlerts.map((alert) => (\n                    <div key={alert.id} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`w-3 h-3 rounded-full ${\n                          alert.type === 'buy' ? 'bg-emerald-400' : \n                          alert.type === 'sell' ? 'bg-red-400' : \n                          'bg-yellow-400'\n                        }`} />\n                        <div>\n                          <h3 className=\"font-semibold\">\n                            {alert.type === 'price_alert' ? 'Price Alert' : `${alert.type.toUpperCase()} Signal`} - {alert.ticker}\n                          </h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Price: ${alert.price.toLocaleString()} • {alert.time}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        {alert.delivered.includes('email') && <Mail className=\"h-4 w-4 text-blue-400\" />}\n                        {alert.delivered.includes('sms') && <MessageSquare className=\"h-4 w-4 text-green-400\" />}\n                        {alert.delivered.includes('push') && <Bell className=\"h-4 w-4 text-yellow-400\" />}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["Maximize2","createLucideIcon","Minimize2","ITEMS_PER_PAGE","SORT_OPTIONS","FILTER_OPTIONS","AlertsTable","onRowClick","selectedAlertId","className","currentPage","setCurrentPage","useState","sortBy","setSortBy","filterBy","setFilterBy","searchQuery","setSearchQuery","alertsData","isLoading","refetch","useQuery","params","response","alerts","totalAlerts","totalPages","processedAlerts","useMemo","filtered","alert","_a","_b","a","b","handleRowClick","handlePageChange","page","handleRefresh","formatTimestamp","timestamp","date","diffMs","diffMins","diffHours","diffDays","getSignalIcon","signalType","jsx","TrendingUp","TrendingDown","jsxs","Card","CardHeader","CardTitle","Target","Button","RefreshCw","Search","Input","e","Select","SelectTrigger","Filter","SelectValue","SelectContent","SelectItem","option","Clock","CardContent","_","i","Skeleton","Fragment","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","ChevronLeft","ChevronRight","WorkingChart","symbol","height","chartContainerRef","useRef","chartRef","ohlcData","useEffect","chart","createChart","lineSeries","LineSeries","chartData","candle","handleResize","error","AlertsView","selectedAlert","setSelectedAlert","chartSymbol","setChartSymbol","isChartExpanded","setIsChartExpanded","toast","useToast","handleAlertRowClick","useCallback","toggleChartExpanded","handleChartMarkerClick","event","alertId","Bell","Activity","BarChart3","Alerts","settings","updateSettings","useAuth","setIsLoading","showAddDialog","setShowAddDialog","editingAlert","setEditingAlert","alertSettings","setAlertSettings","customAlerts","setCustomAlerts","handleSettingsUpdate","newSettings","handleAddAlert","handleEditAlert","handleDeleteAlert","prev","alertTypes","Mail","Smartphone","recentAlerts","Sidebar","Tabs","TabsList","TabsTrigger","Settings","TabsContent","SubscriptionGuard","alertType","IconComponent","Switch","checked","Volume2","Plus","Edit","Trash2","Label","Separator","MessageSquare"],"mappings":"wvCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,GAAYC,GAAiB,YAAa,CAC9C,CAAC,WAAY,CAAE,OAAQ,iBAAkB,IAAK,QAAQ,CAAE,EACxD,CAAC,WAAY,CAAE,OAAQ,iBAAkB,IAAK,QAAQ,CAAE,EACxD,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAU,CAAA,CACnE,CAAC,ECdD;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMC,GAAYD,GAAiB,YAAa,CAC9C,CAAC,WAAY,CAAE,OAAQ,mBAAoB,IAAK,QAAQ,CAAE,EAC1D,CAAC,WAAY,CAAE,OAAQ,mBAAoB,IAAK,QAAQ,CAAE,EAC1D,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,IAAK,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,QAAU,CAAA,CACnE,CAAC,ECwCKE,EAAiB,GACjBC,GAAe,CACnB,CAAE,MAAO,iBAAkB,MAAO,cAAe,EACjD,CAAE,MAAO,gBAAiB,MAAO,cAAe,EAChD,CAAE,MAAO,aAAc,MAAO,mBAAoB,EAClD,CAAE,MAAO,YAAa,MAAO,mBAAoB,EACjD,CAAE,MAAO,aAAc,MAAO,YAAa,EAC3C,CAAE,MAAO,cAAe,MAAO,YAAa,CAC9C,EAEMC,GAAiB,CACrB,CAAE,MAAO,MAAO,MAAO,aAAc,EACrC,CAAE,MAAO,MAAO,MAAO,aAAc,EACrC,CAAE,MAAO,OAAQ,MAAO,cAAe,CACzC,EAEA,SAAwBC,GAAY,CAClC,WAAAC,EACA,gBAAAC,EACA,UAAAC,EAAY,EACd,EAAqB,CACnB,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,CAAC,EAC1C,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,gBAAgB,EAC/C,CAACG,EAAUC,CAAW,EAAIJ,EAAAA,SAAS,KAAK,EACxC,CAACK,EAAaC,CAAc,EAAIN,EAAAA,SAAS,EAAE,EAG3C,CAAE,KAAMO,EAAY,UAAAC,EAAW,QAAAC,CAAA,EAAYC,GAAiD,CAChG,SAAU,CAAC,eAAgB,CAAE,KAAMZ,EAAa,KAAMG,EAAQ,OAAQE,EAAU,OAAQE,CAAA,CAAa,EACrG,QAAS,SAAY,CACb,MAAAM,EAAS,IAAI,gBAAgB,CACjC,KAAMb,EAAY,SAAS,EAC3B,MAAOP,EAAe,SAAS,EAC/B,KAAMU,EACN,GAAIE,IAAa,OAAS,CAAE,YAAaA,CAAS,EAClD,GAAIE,GAAe,CAAE,OAAQA,CAAY,CAAA,CAC1C,EAEKO,EAAW,MAAM,MAAM,oBAAoBD,CAAM,EAAE,EACrD,GAAA,CAACC,EAAS,GACN,MAAA,IAAI,MAAM,wBAAwB,EAE1C,OAAOA,EAAS,KAAK,CACvB,EACA,gBAAiB,GAAA,CAClB,EAEKC,GAASN,GAAA,YAAAA,EAAY,SAAU,CAAC,EAChCO,GAAcP,GAAA,YAAAA,EAAY,QAAS,EACnCQ,EAAa,KAAK,KAAKD,EAAcvB,CAAc,EAGnDyB,EAAkBC,EAAAA,QAAQ,IAAM,CACpC,IAAIC,EAAWL,EAGf,OAAIR,IACFa,EAAWA,EAAS,OAClBC,GAAA,SAAA,OAAAA,EAAM,OAAO,cAAc,SAASd,EAAY,YAAY,CAAC,GAC7Dc,EAAM,OAAO,YAAY,EAAE,SAASd,EAAY,YAAa,CAAA,KAC7De,EAAAD,EAAM,WAAN,YAAAC,EAAgB,cAAc,SAASf,EAAY,YAAY,OAC/DgB,EAAAF,EAAM,OAAN,YAAAE,EAAY,cAAc,SAAShB,EAAY,YAAa,IAC9D,GAIEF,IAAa,QACfe,EAAWA,EAAS,OAAgBC,GAAAA,EAAM,aAAehB,CAAQ,GAI5De,EAAS,KAAK,CAACI,EAAGC,IAAM,CAC7B,OAAQtB,EAAQ,CACd,IAAK,iBACH,OAAO,IAAI,KAAKsB,EAAE,SAAS,EAAE,UAAY,IAAI,KAAKD,EAAE,SAAS,EAAE,QAAQ,EACzE,IAAK,gBACH,OAAO,IAAI,KAAKA,EAAE,SAAS,EAAE,UAAY,IAAI,KAAKC,EAAE,SAAS,EAAE,QAAQ,EACzE,IAAK,aACI,OAAAA,EAAE,MAAQD,EAAE,MACrB,IAAK,YACI,OAAAA,EAAE,MAAQC,EAAE,MACrB,IAAK,aACH,OAAOD,EAAE,OAAO,cAAcC,EAAE,MAAM,EACxC,IAAK,cACH,OAAOA,EAAE,OAAO,cAAcD,EAAE,MAAM,EACxC,QACS,MAAA,EAAA,CACX,CACD,GACA,CAACT,EAAQR,EAAaF,EAAUF,CAAM,CAAC,EAEpCuB,EAAkBL,GAAuB,CAC7CxB,GAAA,MAAAA,EAAawB,EACf,EAEMM,EAAoBC,GAAiB,CACzC3B,EAAe2B,CAAI,CACrB,EAEMC,EAAgB,IAAM,CAClBlB,EAAA,CACV,EAEMmB,EAAmBC,GAAsB,CACvC,MAAAC,EAAO,IAAI,KAAKD,CAAS,EAEzBE,MADU,KAAK,EACF,QAAQ,EAAID,EAAK,QAAQ,EACtCE,EAAW,KAAK,MAAMD,GAAU,IAAO,GAAG,EAC1CE,EAAY,KAAK,MAAMF,GAAU,IAAO,GAAK,GAAG,EAChDG,EAAW,KAAK,MAAMH,GAAU,IAAO,GAAK,GAAK,GAAG,EAEtD,OAAAC,EAAW,EAAU,WACrBA,EAAW,GAAW,GAAGA,CAAQ,QACjCC,EAAY,GAAW,GAAGA,CAAS,QACnCC,EAAW,EAAU,GAAGA,CAAQ,QAE7BJ,EAAK,mBAAmB,CACjC,EAEMK,EAAiBC,GACdA,IAAe,MACpBC,MAACC,GAAW,CAAA,UAAU,wBAAyB,CAAA,EAE/CD,EAAAA,IAACE,GAAa,CAAA,UAAU,sBAAuB,CAAA,EAKjD,OAAAC,OAACC,GAAK,UAAA5C,EACJ,SAAA,CAAA2C,OAACE,EACC,CAAA,SAAA,CAACF,EAAAA,KAAA,MAAA,CAAI,UAAU,kEACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAAG,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACN,EAAAA,IAAAO,EAAA,CAAO,UAAU,SAAU,CAAA,EAAE,iBAAA,EAEhC,EACCP,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAE7C,6DAAA,CAAA,CAAA,EACF,QAEC,MAAI,CAAA,UAAU,0BACb,SAAAA,EAAAA,IAACQ,GAAO,QAASlB,EAAe,KAAK,KAAK,QAAQ,UAChD,SAAAU,EAAA,IAACS,IAAU,UAAU,UAAU,EACjC,CACF,CAAA,CAAA,EACF,EAGAN,EAAAA,KAAC,MAAI,CAAA,UAAU,uCACb,SAAA,CAAAH,EAAAA,IAAC,OAAI,UAAU,SACb,SAACG,EAAA,KAAA,MAAA,CAAI,UAAU,WACb,SAAA,CAACH,EAAAA,IAAAU,GAAA,CAAO,UAAU,kFAAmF,CAAA,EACrGV,EAAA,IAACW,EAAA,CACC,YAAY,2CACZ,MAAO3C,EACP,SAAW4C,GAAM3C,EAAe2C,EAAE,OAAO,KAAK,EAC9C,UAAU,OAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,EAECT,EAAA,KAAAU,EAAA,CAAO,MAAO/C,EAAU,cAAeC,EACtC,SAAA,CAACoC,EAAAA,KAAAW,EAAA,CAAc,UAAU,OACvB,SAAA,CAACd,EAAAA,IAAAe,GAAA,CAAO,UAAU,cAAe,CAAA,QAChCC,EAAY,CAAA,CAAA,CAAA,EACf,EACChB,MAAAiB,EAAA,CACE,SAAe7D,GAAA,OACb4C,EAAAA,IAAAkB,EAAA,CAA8B,MAAOC,EAAO,MAC1C,SAAOA,EAAA,OADOA,EAAO,KAExB,CACD,CACH,CAAA,CAAA,EACF,EAEChB,EAAA,KAAAU,EAAA,CAAO,MAAOjD,EAAQ,cAAeC,EACpC,SAAA,CAACsC,EAAAA,KAAAW,EAAA,CAAc,UAAU,OACvB,SAAA,CAACd,EAAAA,IAAAoB,GAAA,CAAM,UAAU,cAAe,CAAA,QAC/BJ,EAAY,CAAA,CAAA,CAAA,EACf,EACChB,MAAAiB,EAAA,CACE,SAAa9D,GAAA,OACX6C,EAAAA,IAAAkB,EAAA,CAA8B,MAAOC,EAAO,MAC1C,SAAOA,EAAA,OADOA,EAAO,KAExB,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAnB,EAAA,IAACqB,EACE,CAAA,SAAAlD,EACE6B,EAAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAM,MAAA,KAAK,CAAE,OAAQ9C,CAAgB,CAAA,EAAE,IAAI,CAACoE,EAAGC,IAC7CvB,EAAA,IAAAwB,GAAA,CAAiB,UAAU,aAAA,EAAbD,CAA2B,CAC3C,CACH,CAAA,EAGEpB,EAAA,KAAAsB,EAAA,SAAA,CAAA,SAAA,CAAAtB,OAACuB,GACC,CAAA,SAAA,CAAC1B,EAAA,IAAA2B,GAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAA5B,EAAAA,IAAC6B,GAAU,SAAM,QAAA,CAAA,EACjB7B,EAAAA,IAAC6B,GAAU,SAAM,QAAA,CAAA,EACjB7B,EAAAA,IAAC6B,GAAU,SAAK,OAAA,CAAA,EAChB7B,EAAAA,IAAC6B,GAAU,SAAS,WAAA,CAAA,EACpB7B,EAAAA,IAAC6B,GAAU,SAAM,QAAA,CAAA,EACjB7B,EAAAA,IAAC6B,GAAU,SAAQ,UAAA,CAAA,EACnB7B,EAAAA,IAAC6B,GAAU,SAAI,MAAA,CAAA,EACf7B,EAAAA,IAAC6B,GAAU,SAAO,SAAA,CAAA,CAAA,CAAA,CACpB,CACF,CAAA,SACCC,GACE,CAAA,SAAA,CAAgBnD,EAAA,IAAKG,GACpBqB,EAAA,KAACyB,EAAA,CAEC,UAAW,sDACTrE,IAAoBuB,EAAM,GAAK,+BAAiC,EAClE,GACA,QAAS,IAAMK,EAAeL,CAAK,EAEnC,SAAA,CAAAkB,MAAC+B,EACC,CAAA,SAAA5B,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAAL,EAAchB,EAAM,UAAU,EAC/BkB,EAAA,IAACgC,EAAA,CACC,QAASlD,EAAM,aAAe,MAAQ,UAAY,cAClD,UAAU,cAET,SAAAA,EAAM,WAAW,YAAY,CAAA,CAAA,CAChC,CAAA,CACF,CACF,CAAA,EACCkB,EAAA,IAAA+B,EAAA,CAAU,UAAU,cAClB,WAAM,OACT,EACA5B,EAAAA,KAAC4B,EAAU,CAAA,UAAU,YAAY,SAAA,CAAA,IAC7BjD,EAAM,MAAM,eAAe,OAAW,CACtC,sBAAuB,EACvB,sBAAuB,CACxB,CAAA,CAAA,EACH,EACAkB,EAAAA,IAAC+B,GACC,SAAC/B,EAAAA,IAAAgC,EAAA,CAAM,QAAQ,UACZ,SAAAlD,EAAM,UACT,CACF,CAAA,EACCkB,EAAA,IAAA+B,EAAA,CAAU,UAAU,gCAClB,WAAM,OACT,QACCA,EAAU,CAAA,UAAU,UAClB,SAAAjD,EAAM,UAAY,IACrB,QACCiD,EAAU,CAAA,UAAU,gCAClB,SAAgBxC,EAAAT,EAAM,SAAS,EAClC,QACCiD,EACC,CAAA,SAAA/B,EAAA,IAACQ,EAAA,CACC,KAAK,KACL,QAAQ,QACR,QAAUI,GAAM,CACdA,EAAE,gBAAgB,EAClBzB,EAAeL,CAAK,CACtB,EACD,SAAA,YAAA,CAAA,CAGH,CAAA,CAAA,CAAA,EAnDKA,EAAM,EAAA,CAqDd,EAEAH,EAAgB,SAAW,GAC1BqB,EAAA,IAAC4B,GACC,SAAC5B,EAAA,IAAA+B,EAAA,CAAU,QAAS,EAAG,UAAU,mBAC/B,SAAC/B,EAAAA,IAAA,MAAA,CAAI,UAAU,wBACZ,SAAAhC,GAAeF,IAAa,MACzB,gCACA,0BAEN,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAGCY,EAAa,GACXyB,OAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gCAAgC,SAAA,CAAA,YAClC1C,EAAc,GAAKP,EAAkB,EAAE,MAAI,IACrD,KAAK,IAAIO,EAAcP,EAAgBuB,CAAW,EAAE,MAAI,IACxDA,EAAY,UAAA,EACf,EAEA0B,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAH,EAAA,IAACQ,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMpB,EAAiB3B,EAAc,CAAC,EAC/C,SAAUA,IAAgB,EAE1B,SAAAuC,EAAAA,IAACiC,GAAY,CAAA,UAAU,SAAU,CAAA,CAAA,CACnC,QAEC,MAAI,CAAA,UAAU,0BACZ,SAAA,MAAM,KAAK,CAAE,OAAQ,KAAK,IAAI,EAAGvD,CAAU,CAAA,EAAK,CAAC4C,EAAGC,IAAM,CACzD,MAAMlC,EAAO5B,GAAe,EACxB8D,EAAI,EACJ9D,GAAeiB,EAAa,EAC5BA,EAAa,EAAI6C,EACjB9D,EAAc,EAAI8D,EAEtB,OAAIlC,EAAO,GAAKA,EAAOX,EAAmB,KAGxCsB,EAAA,IAACQ,EAAA,CAEC,QAASnB,IAAS5B,EAAc,UAAY,UAC5C,KAAK,KACL,QAAS,IAAM2B,EAAiBC,CAAI,EACpC,UAAU,cAET,SAAAA,CAAA,EANIA,CAOP,CAEH,CAAA,EACH,EAEAW,EAAA,IAACQ,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAS,IAAMpB,EAAiB3B,EAAc,CAAC,EAC/C,SAAUA,IAAgBiB,EAE1B,SAAAsB,EAAAA,IAACkC,GAAa,CAAA,UAAU,SAAU,CAAA,CAAA,CAAA,CACpC,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,CAEJ,CAAA,CAAA,EACF,CAEJ,CC5XA,SAAwBC,GAAa,CAAE,OAAAC,EAAQ,OAAAC,EAAS,KAA0B,CAC1E,MAAAC,EAAoBC,SAAuB,IAAI,EAC/CC,EAAWD,SAAyB,IAAI,EAGxC,CAAE,KAAME,EAAU,UAAAtE,CAAA,EAAcE,GAAuB,CAC3D,SAAU,CAAC,oBAAoB+D,CAAM,yBAAyB,EAC9D,QAAS,CAAC,CAACA,CAAA,CACZ,EAyED,OAvEAM,EAAAA,UAAU,IAAM,CACV,GAAA,GAACJ,EAAkB,SAAWnE,GAE1B,SAAA,IAAI,6BAA8BiE,EAAQ,CAAE,QAAS,CAAC,CAACK,EAAU,MAAOA,GAAA,YAAAA,EAAU,KAAA,CAAO,EAE7F,GAAA,CAEED,EAAS,SACXA,EAAS,QAAQ,OAAO,EAIpB,MAAAG,EAAQC,GAAYN,EAAkB,QAAS,CACnD,MAAOA,EAAkB,QAAQ,aAAe,IAChD,OAAAD,EACA,OAAQ,CACN,gBAAiB,UACjB,UAAW,SAAA,CACb,CACD,EAEDG,EAAS,QAAUG,EAGb,MAAAE,EAAaF,EAAM,UAAUG,GAAY,CAC7C,MAAO,UACP,UAAW,CAAA,CACZ,EAGD,GAAIL,GAAA,MAAAA,EAAU,MAAQA,EAAS,KAAK,OAAS,EAAG,CAC9C,MAAMM,EAAwBN,EAAS,KAAK,IAAKO,IAAY,CAC3D,KAAO,IAAI,KAAKA,EAAO,IAAI,EAAE,UAAY,IACzC,MAAOA,EAAO,KAAA,EACd,EAEFH,EAAW,QAAQE,CAAS,EACtBJ,EAAA,YAAY,WAAW,EAC7B,QAAQ,IAAI,kCAAmCI,EAAU,OAAQ,QAAQ,CAAA,MAEzE,QAAQ,IAAI,iBAAiB,EAI/B,MAAME,EAAe,IAAM,CACrBX,EAAkB,SAAWK,GAC/BA,EAAM,aAAa,CACjB,MAAOL,EAAkB,QAAQ,WAAA,CAClC,CAEL,EAEO,cAAA,iBAAiB,SAAUW,CAAY,EAEvC,IAAM,CACJ,OAAA,oBAAoB,SAAUA,CAAY,CACnD,QACOC,EAAO,CACN,QAAA,MAAM,uBAAwBA,CAAK,CAAA,IAE5C,CAACd,EAAQK,EAAUJ,EAAQlE,CAAS,CAAC,EAGxCuE,EAAAA,UAAU,IACD,IAAM,CACPF,EAAS,SACXA,EAAS,QAAQ,OAAO,CAE5B,EACC,EAAE,EAEDrE,EAEC6B,EAAA,IAAA,MAAA,CAAI,UAAU,mCAAmC,MAAO,CAAE,OAAQ,GAAGqC,CAAM,IAAK,EAC/E,SAACrC,MAAA,MAAA,CAAI,2BAAgB,CAAA,EACvB,EAKFG,EAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,cAAe,SAAA,CAAAiC,EAAO,cAAA,EAAY,EAChDjC,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,iBACvBsC,GAAA,YAAAA,EAAU,QAAS,CAAA,CACnC,CAAA,CAAA,EACF,EACAzC,EAAA,IAAC,MAAA,CACC,IAAKsC,EACL,UAAU,SACV,MAAO,CAAE,OAAQ,GAAGD,CAAM,IAAK,CAAA,CAAA,CACjC,EACF,CAEJ,CCzFA,SAAwBc,GAAW,CAAE,UAAA3F,EAAY,IAAuB,CACtE,KAAM,CAAC4F,EAAeC,CAAgB,EAAI1F,EAAAA,SAA6B,IAAI,EACrE,CAAC2F,EAAaC,CAAc,EAAI5F,EAAAA,SAAS,SAAS,EAClD,CAAC6F,EAAiBC,CAAkB,EAAI9F,EAAAA,SAAS,EAAK,EACtD,CAAE,MAAA+F,CAAM,EAAIC,GAAS,EAErBC,EAAsBC,cAAa/E,GAAuB,CAC9DuE,EAAiBvE,CAAK,EACtByE,EAAezE,EAAM,MAAM,EAGpB,OAAA,cAAc,IAAI,YAAY,yBAA0B,CAC7D,OAAQ,CACN,QAASA,EAAM,GACf,OAAQA,EAAM,OACd,UAAWA,EAAM,UACjB,WAAYA,EAAM,WAClB,MAAOA,EAAM,KAAA,CACf,CACD,CAAC,EAEI4E,EAAA,CACJ,MAAO,kBACP,YAAa,gBAAgB5E,EAAM,WAAW,YAAA,CAAa,eAAeA,EAAM,MAAM,QAAQA,EAAM,KAAK,EAAA,CAC1G,CAAA,EACA,CAAC4E,CAAK,CAAC,EAEiBG,EAAY,YAACzB,GAAmB,CACzDmB,EAAenB,CAAM,EACrBiB,EAAiB,IAAI,CAAA,EACpB,CAAE,CAAA,EAEL,MAAMS,EAAsB,IAAM,CAChCL,EAAmB,CAACD,CAAe,CACrC,EAGAd,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAqB,EAA0BC,GAAuB,CAC/C,KAAA,CAAE,QAAAC,GAAYD,EAAM,OACtBC,GAAWA,KAAYb,GAAA,YAAAA,EAAe,KAGlCM,EAAA,CACJ,MAAO,uBACP,YAAa,wCAAA,CACd,CAEL,EAEO,cAAA,iBAAiB,qBAAsBK,CAAuC,EAC9E,IAAM,CACJ,OAAA,oBAAoB,qBAAsBA,CAAuC,CAC1F,CAAA,EACC,CAACX,EAAeM,CAAK,CAAC,EAGtBvD,EAAA,KAAA,MAAA,CAAI,UAAW,aAAa3C,CAAS,GAEpC,SAAA,CAAC2C,EAAAA,KAAA,MAAA,CAAI,UAAU,kEACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,4DACZ,SAAA,CAACH,EAAAA,IAAAkE,EAAA,CAAK,UAAU,SAAU,CAAA,EAAE,kBAAA,EAE9B,EACClE,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,oFAAA,CAAA,CAAA,EACF,EAEAG,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACZ,SAAA,CAAAiD,GACEjD,EAAAA,KAAA6B,EAAA,CAAM,QAAQ,UAAU,UAAU,0BACjC,SAAA,CAAChC,EAAAA,IAAAO,EAAA,CAAO,UAAU,SAAU,CAAA,EAAE,oBACZ6C,EAAc,MAAA,EAClC,EAEDjD,EAAA,KAAA6B,EAAA,CAAM,QAAQ,YAAY,UAAU,0BACnC,SAAA,CAAChC,EAAAA,IAAAmE,GAAA,CAAS,UAAU,SAAU,CAAA,EAAE,cAAA,CAElC,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAGChE,EAAA,KAAAC,EAAA,CAAK,UAAWoD,EAAkB,qBAAuB,GACxD,SAAA,CAAArD,OAACE,EACC,CAAA,SAAA,CAACF,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAAG,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACN,EAAAA,IAAAoE,GAAA,CAAU,UAAU,SAAU,CAAA,EAAE,iBAEhChB,GACCjD,EAAA,KAAC6B,EAAM,CAAA,QAAQ,UACZ,SAAA,CAAAoB,EAAc,WAAW,YAAY,EAAE,SAAA,CAC1C,CAAA,CAAA,EAEJ,EAEApD,EAAAA,IAAC,OAAI,UAAU,0BACb,eAACQ,EAAO,CAAA,QAASsD,EAAqB,KAAK,KAAK,QAAQ,UACrD,SACCN,EAAAxD,EAAA,IAAC/C,GAAU,CAAA,UAAU,SAAU,CAAA,QAE9BF,GAAU,CAAA,UAAU,SAAU,CAAA,CAEnC,CAAA,CACF,CAAA,CAAA,EACF,EAECqG,GACCjD,EAAA,KAAC,MAAI,CAAA,UAAU,6CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACH,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAW,cAAA,EAC1DA,EAAAA,IAACgC,EAAM,CAAA,QAASoB,EAAc,aAAe,MAAQ,UAAY,cAC9D,SAAAA,EAAc,WAAW,YAAA,CAC5B,CAAA,CAAA,EACF,EACAjD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACH,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAK,QAAA,EACpDG,EAAAA,KAAC,MAAI,CAAA,UAAU,0BAA0B,SAAA,CAAA,IAAEiD,EAAc,KAAA,CAAM,CAAA,CAAA,EACjE,EACAjD,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACH,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAS,YAAA,EACvDA,EAAA,IAAAgC,EAAA,CAAM,QAAQ,UAAW,WAAc,SAAU,CAAA,CAAA,EACpD,EACA7B,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAACH,EAAA,IAAA,MAAA,CAAI,UAAU,gCAAgC,SAAM,SAAA,EACpDA,EAAA,IAAA,MAAA,CAAI,UAAU,UAAW,WAAc,MAAO,CAAA,CAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,QAECqB,EACC,CAAA,SAAArB,EAAA,IAACmC,GAAA,CACC,OAAQmB,EACR,OAAQE,EAAkB,IAAM,GAAA,CAAA,CAEpC,CAAA,CAAA,EACF,EAGAxD,EAAA,IAAC3C,GAAA,CACC,WAAYuG,EACZ,iBAAiBR,GAAA,YAAAA,EAAe,KAAM,IAAA,CACxC,EAGCA,UACEhD,EACC,CAAA,SAAA,CAAAJ,MAACK,EACC,CAAA,SAAAF,EAAAA,KAACG,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACN,EAAAA,IAAAC,GAAA,CAAW,UAAU,SAAU,CAAA,EAAE,yBAAA,CAAA,CAEpC,CACF,CAAA,EACCD,MAAAqB,EAAA,CACC,SAAClB,EAAAA,KAAA,MAAA,CAAI,UAAU,uDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAkB,qBAAA,EACnDG,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAA,OAAC,MAAI,CAAA,SAAA,CAACH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAG,MAAA,EAAO,IAAEoD,EAAc,EAAA,EAAG,SACzE,MAAI,CAAA,SAAA,CAACpD,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAO,UAAA,EAAO,IAAEoD,EAAc,MAAA,EAAO,SACjF,MAAI,CAAA,SAAA,CAACpD,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAK,QAAA,EAAO,IAAEoD,EAAc,UAAA,EAAW,SACnF,MAAI,CAAA,SAAA,CAACpD,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAM,SAAA,EAAO,KAAGoD,EAAc,KAAA,CAAM,CAAA,CAAA,CACnF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACpD,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAe,kBAAA,EAChDG,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAA,OAAC,MAAI,CAAA,SAAA,CAACH,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAU,aAAA,EAAO,IAAEoD,EAAc,SAAA,EAAU,SACvF,MAAI,CAAA,SAAA,CAACpD,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAS,YAAA,EAAO,IAAEoD,EAAc,UAAY,KAAA,EAAM,SAC9F,MAAI,CAAA,SAAA,CAACpD,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,SAAO,UAAA,EAAO,IAAEoD,EAAc,MAAA,CAAO,CAAA,CAAA,CACpF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACpD,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAU,aAAA,EAC3CG,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAH,EAAAA,IAAC,OAAI,SAACA,EAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,wBAAY,CAAO,CAAA,EAChEA,EAAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAA,IAAI,KAAKoD,EAAc,SAAS,EAAE,eAAiB,CAAA,CAAA,QACtF,MAAI,CAAA,SAAApD,EAAA,IAAC,QAAK,UAAU,wBAAwB,oBAAQ,CAAO,CAAA,EAC5DA,EAAAA,IAAC,MAAI,CAAA,UAAU,oBAAqB,SAAA,IAAI,KAAKoD,EAAc,SAAS,EAAE,eAAA,CAAiB,CAAA,CAAA,CACzF,CAAA,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACpD,EAAA,IAAA,KAAA,CAAG,UAAU,mBAAmB,SAAgB,mBAAA,QAChD,MAAI,CAAA,UAAU,gCACZ,SAAAoD,EAAc,MAAQ,gCACzB,EACCA,EAAc,QACZjD,OAAA,MAAA,CAAI,UAAU,qCAAqC,SAAA,CAAA,YACxCiD,EAAc,MAAA,CAC1B,CAAA,CAAA,CAEJ,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,CAEJ,CClNA,SAAwBiB,IAAS,CAC/B,KAAM,CAAE,SAAAC,EAAU,eAAAC,CAAe,EAAIC,GAAQ,EACvC,CAAE,MAAAd,CAAM,EAAIC,GAAS,EACrB,CAACxF,EAAWsG,CAAY,EAAI9G,EAAAA,SAAS,EAAK,EAC1C,CAAC+G,EAAeC,CAAgB,EAAIhH,EAAAA,SAAS,EAAK,EAClD,CAACiH,EAAcC,CAAe,EAAIlH,EAAAA,SAAc,IAAI,EAEpD,CAACmH,EAAeC,CAAgB,EAAIpH,WAAS,CACjD,OAAO2G,GAAA,YAAAA,EAAU,oBAAqB,GACtC,KAAKA,GAAA,YAAAA,EAAU,kBAAmB,GAClC,MAAMA,GAAA,YAAAA,EAAU,mBAAoB,EAAA,CACrC,EAEK,CAACU,EAAcC,CAAe,EAAItH,WAAS,CAC/C,CACE,GAAI,IACJ,KAAM,kBACN,UAAW,cACX,MAAO,IACP,OAAQ,UACR,QAAS,EACX,EACA,CACE,GAAI,IACJ,KAAM,iBACN,UAAW,cACX,MAAO,IACP,OAAQ,UACR,QAAS,EAAA,CACX,CACD,EAEKuH,EAAuB,MAAOC,GAA+C,CACjFV,EAAa,EAAI,EACb,GAAA,CACF,MAAMF,EAAe,CACnB,kBAAmBY,EAAY,OAASL,EAAc,MACtD,gBAAiBK,EAAY,KAAOL,EAAc,IAClD,iBAAkBK,EAAY,MAAQL,EAAc,IAAA,CACrD,EACDC,EAAiB,CAAE,GAAGD,EAAe,GAAGK,EAAa,OACvC,CACRzB,EAAA,CACJ,MAAO,4BACP,YAAa,yBACb,QAAS,aAAA,CACV,CAAA,QACD,CACAe,EAAa,EAAK,CAAA,CAEtB,EAEMW,EAAiB,IAAM,CACrB1B,EAAA,CACJ,MAAO,YACP,YAAa,kCAAA,CACd,EAEDiB,EAAiB,EAAI,CACvB,EAEMU,EAAmBvG,GAAe,CACtC+F,EAAgB/F,CAAK,EACf4E,EAAA,CACJ,MAAO,aACP,YAAa,kBAAkB5E,EAAM,IAAI,EAAA,CAC1C,CACH,EAEMwG,EAAqBrB,GAAoB,CAC7CgB,KAAwBM,EAAK,UAAgBzG,EAAM,KAAOmF,CAAO,CAAC,EAC5DP,EAAA,CACJ,MAAO,gBACP,YAAa,0CAAA,CACd,CACH,EAEM8B,EAAa,CACjB,CACE,GAAI,QACJ,MAAO,sBACP,YAAa,2BACb,KAAMC,EACN,QAASX,EAAc,MACvB,QAAS,4DACX,EACA,CACE,GAAI,MACJ,MAAO,aACP,YAAa,4BACb,KAAMY,GACN,QAASZ,EAAc,IACvB,QAAS,oDACX,EACA,CACE,GAAI,OACJ,MAAO,qBACP,YAAa,6BACb,KAAMZ,EACN,QAASY,EAAc,KACvB,QAAS,yCAAA,CAEb,EAEMa,EAAe,CACnB,CACE,GAAI,IACJ,KAAM,MACN,OAAQ,UACR,MAAO,SACP,KAAM,cACN,UAAW,CAAC,QAAS,MAAM,CAC7B,EACA,CACE,GAAI,IACJ,KAAM,OACN,OAAQ,UACR,MAAO,QACP,KAAM,cACN,UAAW,CAAC,OAAO,CACrB,EACA,CACE,GAAI,IACJ,KAAM,cACN,OAAQ,UACR,MAAO,IACP,KAAM,YACN,UAAW,CAAC,QAAS,MAAO,MAAM,CAAA,CAEtC,EAEA,aACG,MAAI,CAAA,UAAU,6BACb,SAACxF,EAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAH,EAAA,IAAC4F,GAAQ,EAAA,EAGR5F,MAAA,MAAA,CAAI,UAAU,uBACb,SAACA,EAAA,IAAA,MAAA,CAAI,UAAU,8CACb,SAACG,EAAAA,KAAA0F,GAAA,CAAK,aAAa,UAAU,UAAU,yBACrC,SAAA,CAAC1F,EAAAA,KAAA2F,GAAA,CAAS,UAAU,6CAClB,SAAA,CAAA3F,EAAA,KAAC4F,GAAY,CAAA,MAAM,UAAU,UAAU,gDACrC,SAAA,CAAC/F,EAAAA,IAAAO,EAAA,CAAO,UAAU,uBAAwB,CAAA,EACzCP,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAe,kBAAA,EACjDA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAE,IAAA,CAAA,CAAA,EAChC,EACCG,EAAA,KAAA4F,GAAA,CAAY,MAAM,WAAW,UAAU,gDACtC,SAAA,CAAC/F,EAAAA,IAAAgG,EAAA,CAAS,UAAU,uBAAwB,CAAA,EAC3ChG,EAAA,IAAA,OAAA,CAAK,UAAU,mBAAmB,SAAc,iBAAA,EAChDA,EAAA,IAAA,OAAA,CAAK,UAAU,YAAY,SAAE,IAAA,CAAA,CAAA,CAChC,CAAA,CAAA,EACF,EAECA,EAAA,IAAAiG,GAAA,CAAY,MAAM,UAAU,UAAU,YACrC,SAACjG,EAAA,IAAAkG,GAAA,CAAkB,QAAQ,iBACzB,SAAClG,EAAAA,IAAAmD,GAAA,CAAW,CAAA,CACd,CAAA,EACF,EAEChD,EAAA,KAAA8F,GAAA,CAAY,MAAM,WAAW,UAAU,YACtC,SAAA,CAAC9F,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,yCAAyC,SAAc,iBAAA,EACpEA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAErC,kEAAA,CAAA,CAAA,EACF,EAEAG,EAAAA,KAAC,MAAI,CAAA,UAAU,YAEnB,SAAA,CAAAA,OAACC,EACC,CAAA,SAAA,CAAAJ,MAACK,EACC,CAAA,SAAAF,EAAAA,KAACG,EAAU,CAAA,UAAU,oBACnB,SAAA,CAACN,EAAAA,IAAAgG,EAAA,CAAS,UAAU,cAAe,CAAA,EAAE,sBAAA,CAAA,CAEvC,CACF,CAAA,QACC3E,EAAY,CAAA,UAAU,YACpB,SAAWmE,EAAA,IAAKW,GAAc,CAC7B,MAAMC,EAAgBD,EAAU,KAE9B,OAAAhG,EAAA,KAAC,MAAuB,CAAA,UAAU,wEAChC,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAH,EAAA,IAAC,MAAI,CAAA,UAAW,kBAAkBmG,EAAU,QAAU,qCAAuC,gCAAgC,GAC3H,SAACnG,MAAAoG,EAAA,CAAc,UAAU,SAAU,CAAA,EACrC,SACC,MACC,CAAA,SAAA,CAAApG,EAAA,IAAC,KAAG,CAAA,UAAU,gBAAiB,SAAAmG,EAAU,MAAM,EAC9CnG,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAiC,WAAU,YAAY,EACnEA,EAAA,IAAA,IAAA,CAAE,UAAU,qCAAsC,WAAU,OAAQ,CAAA,CAAA,CACvE,CAAA,CAAA,EACF,EACAA,EAAA,IAACqG,EAAA,CACC,QAASF,EAAU,QACnB,gBAAkBG,GAChBpB,EAAqB,CAAE,CAACiB,EAAU,EAAE,EAAGG,EAAS,EAElD,SAAUnI,CAAA,CAAA,CACZ,CAAA,EAjBQgI,EAAU,EAkBpB,CAAA,CAEH,CACH,CAAA,CAAA,EACF,SAGC/F,EACC,CAAA,SAAA,CAAAJ,MAACK,EACC,CAAA,SAAAF,EAAAA,KAAC,MAAI,CAAA,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAAG,EAAA,CAAU,UAAU,oBACnB,SAAA,CAACN,EAAAA,IAAAuG,GAAA,CAAQ,UAAU,cAAe,CAAA,EAAE,qBAAA,EAEtC,EACApG,EAAAA,KAACK,EAAO,CAAA,QAAS4E,EACf,SAAA,CAACpF,EAAAA,IAAAwG,GAAA,CAAK,UAAU,cAAe,CAAA,EAAE,WAAA,CAEnC,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EACCxG,EAAA,IAAAqB,EAAA,CACC,SAACrB,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAagF,EAAA,IAAKlG,GAChBqB,EAAA,KAAA,MAAA,CAAmB,UAAU,wEAC5B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAH,EAAA,IAACqG,EAAA,CACC,QAASvH,EAAM,QACf,gBAAkBwH,GAAY,CAC5BrB,EACEM,GAAAA,EAAK,IAAItG,GAAKA,EAAE,KAAOH,EAAM,GAAK,CAAE,GAAGG,EAAG,QAASqH,GAAYrH,CAAC,CAClE,CAAA,CACF,CACF,SACC,MACC,CAAA,SAAA,CAAAe,EAAA,IAAC,KAAG,CAAA,UAAU,gBAAiB,SAAAlB,EAAM,KAAK,EAC1CqB,EAAAA,KAAC,IAAE,CAAA,UAAU,gCACV,SAAA,CAAMrB,EAAA,OAAO,IAAEA,EAAM,YAAc,cAAgB,QAAU,QAAQ,KAAGA,EAAM,MAAM,eAAe,CAAA,CACtG,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAqB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACH,EAAAA,IAAAgC,EAAA,CAAM,QAASlD,EAAM,QAAU,UAAY,YACzC,SAAAA,EAAM,QAAU,SAAW,UAC9B,CAAA,EACCkB,EAAA,IAAAQ,EAAA,CAAO,QAAQ,QAAQ,KAAK,OAAO,QAAS,IAAM6E,EAAgBvG,CAAK,EACtE,SAAAkB,MAACyG,GAAK,CAAA,UAAU,SAAU,CAAA,EAC5B,QACCjG,EAAO,CAAA,QAAQ,QAAQ,KAAK,OAAO,UAAU,mBAAmB,QAAS,IAAM8E,EAAkBxG,EAAM,EAAE,EACxG,eAAC4H,GAAO,CAAA,UAAU,UAAU,CAC9B,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,EA3BQ5H,EAAM,EA4BhB,CACD,CACH,CAAA,CACF,CAAA,CAAA,EACF,SAGCsB,EACC,CAAA,SAAA,CAAAJ,MAACK,EACC,CAAA,SAAAL,EAAA,IAACM,EAAU,CAAA,SAAA,oBAAkB,CAAA,EAC/B,EACAH,EAAAA,KAACkB,EAAY,CAAA,UAAU,YACrB,SAAA,CAAClB,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACH,EAAA,IAAA2G,EAAA,CAAM,QAAQ,mBAAmB,SAAgB,mBAAA,EAClDxG,EAAAA,KAACU,EAAO,CAAA,aAAa,MACnB,SAAA,CAAAb,MAACc,EACC,CAAA,SAAAd,EAAA,IAACgB,EAAY,CAAA,YAAY,kBAAmB,CAAA,EAC9C,SACCC,EACC,CAAA,SAAA,CAACjB,EAAA,IAAAkB,EAAA,CAAW,MAAM,MAAM,SAAW,cAAA,EAClClB,EAAA,IAAAkB,EAAA,CAAW,MAAM,kBAAkB,SAAoB,uBAAA,EACvDlB,EAAA,IAAAkB,EAAA,CAAW,MAAM,WAAW,SAAgB,mBAAA,EAC5ClB,EAAA,IAAAkB,EAAA,CAAW,MAAM,YAAY,SAAiB,mBAAA,CAAA,CAAA,CACjD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAf,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACH,EAAA,IAAA2G,EAAA,CAAM,QAAQ,gBAAgB,SAAwB,2BAAA,EACvD3G,EAAA,IAACW,EAAA,CACC,GAAG,gBACH,KAAK,SACL,YAAY,MACZ,aAAa,KAAA,CAAA,CACf,CACF,CAAA,CAAA,EACF,QAECiG,GAAU,EAAA,EAEXzG,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACH,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAgB,SAAW,cAAA,EACzCG,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAACH,EAAA,IAAA2G,EAAA,CAAM,QAAQ,cAAc,SAAU,aAAA,EACvC3G,EAAA,IAACW,EAAA,CACC,GAAG,cACH,KAAK,OACL,aAAa,OAAA,CAAA,CACf,EACF,EACAR,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACH,EAAA,IAAA2G,EAAA,CAAM,QAAQ,YAAY,SAAQ,WAAA,EACnC3G,EAAA,IAACW,EAAA,CACC,GAAG,YACH,KAAK,OACL,aAAa,OAAA,CAAA,CACf,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,SAGCP,EACC,CAAA,SAAA,CAAAJ,MAACK,EACC,CAAA,SAAAL,EAAA,IAACM,EAAU,CAAA,SAAA,eAAa,CAAA,EAC1B,EACCN,EAAA,IAAAqB,EAAA,CACC,SAACrB,EAAA,IAAA,MAAA,CAAI,UAAU,YACZ,SAAa2F,EAAA,IAAK7G,GAChBqB,EAAA,KAAA,MAAA,CAAmB,UAAU,wEAC5B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAH,EAAA,IAAC,MAAI,CAAA,UAAW,wBACdlB,EAAM,OAAS,MAAQ,iBACvBA,EAAM,OAAS,OAAS,aACxB,eACF,GAAI,SACH,MACC,CAAA,SAAA,CAACqB,EAAAA,KAAA,KAAA,CAAG,UAAU,gBACX,SAAA,CAAArB,EAAM,OAAS,cAAgB,cAAgB,GAAGA,EAAM,KAAK,YAAa,CAAA,UAAU,MAAIA,EAAM,MAAA,EACjG,EACAqB,EAAAA,KAAC,IAAE,CAAA,UAAU,gCAAgC,SAAA,CAAA,WAClCrB,EAAM,MAAM,eAAe,EAAE,MAAIA,EAAM,IAAA,CAClD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAqB,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACZ,SAAA,CAAArB,EAAM,UAAU,SAAS,OAAO,GAAMkB,EAAA,IAAAyF,EAAA,CAAK,UAAU,wBAAwB,EAC7E3G,EAAM,UAAU,SAAS,KAAK,GAAMkB,EAAA,IAAA6G,GAAA,CAAc,UAAU,yBAAyB,EACrF/H,EAAM,UAAU,SAAS,MAAM,GAAMkB,EAAAA,IAAAkE,EAAA,CAAK,UAAU,yBAA0B,CAAA,CAAA,CACjF,CAAA,CAAA,CAAA,EApBQpF,EAAM,EAqBhB,CACD,CACH,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACI,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAEJ","x_google_ignoreList":[0,1]}