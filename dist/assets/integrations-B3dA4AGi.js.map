{"version":3,"file":"integrations-B3dA4AGi.js","sources":["../../src/pages/admin/integrations.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport Sidebar from \"@/components/layout/Sidebar\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { Settings, Key, Zap, DollarSign, Bell, Smartphone, Edit, Save, TestTube, Activity } from \"lucide-react\";\n\ninterface APIIntegration {\n  id: string;\n  name: string;\n  service: \"tradingview\" | \"binance\" | \"coincap\" | \"stripe\" | \"onesignal\" | \"twilio\";\n  description: string;\n  apiKey: string;\n  apiSecret?: string;\n  endpoint: string;\n  isActive: boolean;\n  lastUsed: string;\n  usageCount: number;\n  errorCount: number;\n  rateLimit: number;\n  configuration: any;\n}\n\ninterface UsageLog {\n  id: string;\n  integrationId: string;\n  endpoint: string;\n  method: string;\n  statusCode: number;\n  responseTime: number;\n  timestamp: string;\n  errorMessage?: string;\n}\n\nexport default function AdminIntegrations() {\n  const [selectedIntegration, setSelectedIntegration] = useState<APIIntegration | null>(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editForm, setEditForm] = useState({\n    apiKey: \"\",\n    apiSecret: \"\",\n    endpoint: \"\",\n    isActive: false,\n    configuration: {},\n  });\n  const { toast } = useToast();\n\n  const { data: integrations = [], isLoading } = useQuery<APIIntegration[]>({\n    queryKey: [\"/api/admin/integrations\"],\n  });\n\n  const { data: usageLogs = [] } = useQuery<UsageLog[]>({\n    queryKey: [\"/api/admin/integrations/usage\"],\n  });\n\n  const updateIntegrationMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: any }) => {\n      const response = await apiRequest(\"PUT\", `/api/admin/integrations/${id}`, data);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/integrations\"] });\n      setIsEditDialogOpen(false);\n      toast({\n        title: \"Integration Updated\",\n        description: \"API integration has been updated successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update integration\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const testIntegrationMutation = useMutation({\n    mutationFn: async (integrationId: string) => {\n      const response = await apiRequest(\"POST\", `/api/admin/integrations/${integrationId}/test`);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Test Successful\",\n        description: data.message || \"Integration test completed successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Test Failed\",\n        description: error.message || \"Integration test failed\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getServiceIcon = (service: string) => {\n    switch (service) {\n      case \"tradingview\":\n        return <Zap className=\"h-5 w-5 text-blue-500\" />;\n      case \"binance\":\n        return <Activity className=\"h-5 w-5 text-yellow-500\" />;\n      case \"coincap\":\n        return <Activity className=\"h-5 w-5 text-green-500\" />;\n      case \"stripe\":\n        return <DollarSign className=\"h-5 w-5 text-purple-500\" />;\n      case \"onesignal\":\n        return <Bell className=\"h-5 w-5 text-red-500\" />;\n      case \"twilio\":\n        return <Smartphone className=\"h-5 w-5 text-blue-600\" />;\n      default:\n        return <Settings className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusBadge = (integration: APIIntegration) => {\n    if (!integration.isActive) {\n      return <Badge variant=\"secondary\">Inactive</Badge>;\n    }\n    if (integration.errorCount > 0) {\n      return <Badge variant=\"destructive\">Errors</Badge>;\n    }\n    return <Badge variant=\"default\">Active</Badge>;\n  };\n\n  const handleEditIntegration = (integration: APIIntegration) => {\n    setSelectedIntegration(integration);\n    setEditForm({\n      apiKey: integration.apiKey,\n      apiSecret: integration.apiSecret || \"\",\n      endpoint: integration.endpoint,\n      isActive: integration.isActive,\n      configuration: integration.configuration || {},\n    });\n    setIsEditDialogOpen(true);\n  };\n\n  const handleUpdateIntegration = () => {\n    if (!selectedIntegration) return;\n    \n    updateIntegrationMutation.mutate({\n      id: selectedIntegration.id,\n      data: editForm,\n    });\n  };\n\n  const maskApiKey = (key: string) => {\n    if (key.length <= 8) return key;\n    return key.slice(0, 4) + \"â€¢\".repeat(key.length - 8) + key.slice(-4);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"flex\">\n        <Sidebar />\n        \n        {/* Main Content */}\n        <div className=\"ml-0 lg:ml-64 flex-1\">\n          {/* Header */}\n          <header className=\"bg-card border-b border-border p-4 lg:p-6\">\n            <div className=\"flex justify-between items-center\">\n              <div>\n                <h1 className=\"text-2xl lg:text-3xl font-bold\">3rd Party API Integrations</h1>\n                <p className=\"text-muted-foreground\">Manage API keys, endpoints, and usage logs for external services</p>\n              </div>\n            </div>\n          </header>\n\n          {/* Content */}\n          <div className=\"p-4 lg:p-6 space-y-6\">\n\n      <Tabs defaultValue=\"integrations\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"integrations\">API Integrations</TabsTrigger>\n          <TabsTrigger value=\"usage\">Usage Logs</TabsTrigger>\n          <TabsTrigger value=\"monitoring\">Monitoring</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"integrations\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {isLoading ? (\n              Array.from({ length: 6 }).map((_, i) => (\n                <Card key={i} className=\"animate-pulse\">\n                  <CardHeader>\n                    <div className=\"h-6 bg-gray-200 rounded w-3/4\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-2\">\n                      <div className=\"h-4 bg-gray-200 rounded\"></div>\n                      <div className=\"h-4 bg-gray-200 rounded w-2/3\"></div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))\n            ) : (\n              integrations.map((integration) => (\n                <Card key={integration.id}>\n                  <CardHeader>\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex items-center space-x-3\">\n                        {getServiceIcon(integration.service)}\n                        <div>\n                          <CardTitle className=\"text-lg\">{integration.name}</CardTitle>\n                          <CardDescription className=\"capitalize\">{integration.service}</CardDescription>\n                        </div>\n                      </div>\n                      {getStatusBadge(integration)}\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div>\n                        <p className=\"text-sm font-medium mb-1\">API Key</p>\n                        <p className=\"text-sm text-muted-foreground font-mono\">\n                          {maskApiKey(integration.apiKey)}\n                        </p>\n                      </div>\n                      \n                      <div>\n                        <p className=\"text-sm font-medium mb-1\">Endpoint</p>\n                        <p className=\"text-sm text-muted-foreground truncate\">\n                          {integration.endpoint}\n                        </p>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                        <div>\n                          <p className=\"font-medium\">Usage Count</p>\n                          <p className=\"text-muted-foreground\">{integration.usageCount.toLocaleString()}</p>\n                        </div>\n                        <div>\n                          <p className=\"font-medium\">Error Count</p>\n                          <p className=\"text-muted-foreground text-red-600\">{integration.errorCount}</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleEditIntegration(integration)}\n                          className=\"flex-1\"\n                        >\n                          <Edit className=\"h-4 w-4 mr-1\" />\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => testIntegrationMutation.mutate(integration.id)}\n                          disabled={testIntegrationMutation.isPending}\n                          className=\"flex-1\"\n                        >\n                          <TestTube className=\"h-4 w-4 mr-1\" />\n                          Test\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"usage\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>API Usage Logs</CardTitle>\n              <CardDescription>Recent API calls and their response status</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {usageLogs.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <Activity className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                    <p className=\"text-muted-foreground\">No usage logs available</p>\n                  </div>\n                ) : (\n                  usageLogs.map((log) => (\n                    <div key={log.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <Badge variant={log.statusCode >= 200 && log.statusCode < 300 ? \"default\" : \"destructive\"}>\n                          {log.statusCode}\n                        </Badge>\n                        <div>\n                          <p className=\"font-medium\">{log.endpoint}</p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {log.method} â€¢ {new Date(log.timestamp).toLocaleString()}\n                          </p>\n                          {log.errorMessage && (\n                            <p className=\"text-sm text-red-600\">{log.errorMessage}</p>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm font-medium\">{log.responseTime}ms</p>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"monitoring\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Total API Calls</p>\n                    <p className=\"text-2xl font-bold\">\n                      {integrations.reduce((sum, int) => sum + int.usageCount, 0).toLocaleString()}\n                    </p>\n                  </div>\n                  <Activity className=\"h-8 w-8 text-muted-foreground\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Active Integrations</p>\n                    <p className=\"text-2xl font-bold\">\n                      {integrations.filter(int => int.isActive).length}\n                    </p>\n                  </div>\n                  <Settings className=\"h-8 w-8 text-muted-foreground\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Total Errors</p>\n                    <p className=\"text-2xl font-bold\">\n                      {integrations.reduce((sum, int) => sum + int.errorCount, 0)}\n                    </p>\n                  </div>\n                  <Activity className=\"h-8 w-8 text-red-500\" />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Success Rate</p>\n                    <p className=\"text-2xl font-bold\">\n                      {integrations.length > 0 \n                        ? (((integrations.reduce((sum, int) => sum + int.usageCount, 0) - integrations.reduce((sum, int) => sum + int.errorCount, 0)) / integrations.reduce((sum, int) => sum + int.usageCount, 0)) * 100).toFixed(1)\n                        : 0}%\n                    </p>\n                  </div>\n                  <Activity className=\"h-8 w-8 text-green-500\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Integration Health Status</CardTitle>\n              <CardDescription>Real-time status of all API integrations</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {integrations.map((integration) => (\n                  <div key={integration.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getServiceIcon(integration.service)}\n                      <div>\n                        <p className=\"font-medium\">{integration.name}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Last used: {integration.lastUsed ? new Date(integration.lastUsed).toRelativeTimeString() : \"Never\"}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"text-right text-sm\">\n                        <p className=\"font-medium\">{integration.usageCount} calls</p>\n                        <p className=\"text-muted-foreground\">{integration.errorCount} errors</p>\n                      </div>\n                      {getStatusBadge(integration)}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Integration Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Edit Integration: {selectedIntegration?.name}</DialogTitle>\n            <DialogDescription>\n              Update API configuration for {selectedIntegration?.service}\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"api-key\">API Key</Label>\n                <Input\n                  id=\"api-key\"\n                  type=\"password\"\n                  value={editForm.apiKey}\n                  onChange={(e) => setEditForm(prev => ({ ...prev, apiKey: e.target.value }))}\n                  placeholder=\"Enter API key\"\n                />\n              </div>\n              \n              {selectedIntegration?.service === \"stripe\" && (\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"api-secret\">API Secret</Label>\n                  <Input\n                    id=\"api-secret\"\n                    type=\"password\"\n                    value={editForm.apiSecret}\n                    onChange={(e) => setEditForm(prev => ({ ...prev, apiSecret: e.target.value }))}\n                    placeholder=\"Enter API secret\"\n                  />\n                </div>\n              )}\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"endpoint\">Endpoint URL</Label>\n                <Input\n                  id=\"endpoint\"\n                  value={editForm.endpoint}\n                  onChange={(e) => setEditForm(prev => ({ ...prev, endpoint: e.target.value }))}\n                  placeholder=\"https://api.example.com/v1\"\n                />\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  checked={editForm.isActive}\n                  onCheckedChange={(checked) => setEditForm(prev => ({ ...prev, isActive: checked }))}\n                />\n                <Label>Enable Integration</Label>\n              </div>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleUpdateIntegration} disabled={updateIntegrationMutation.isPending}>\n              <Save className=\"h-4 w-4 mr-2\" />\n              {updateIntegrationMutation.isPending ? \"Saving...\" : \"Save Changes\"}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["AdminIntegrations","selectedIntegration","setSelectedIntegration","useState","isEditDialogOpen","setIsEditDialogOpen","editForm","setEditForm","toast","useToast","integrations","isLoading","useQuery","usageLogs","updateIntegrationMutation","useMutation","id","data","apiRequest","queryClient","error","testIntegrationMutation","integrationId","getServiceIcon","service","jsx","Zap","Activity","DollarSign","Bell","Smartphone","Settings","getStatusBadge","integration","Badge","handleEditIntegration","handleUpdateIntegration","maskApiKey","key","jsxs","Sidebar","Tabs","TabsList","TabsTrigger","TabsContent","_","i","Card","CardHeader","CardContent","CardTitle","CardDescription","Button","Edit","TestTube","log","sum","int","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","e","prev","Switch","checked","DialogFooter","Save"],"mappings":"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"}