{"version":3,"file":"PermissionGuard-DegneJkB.js","sources":["../../src/lib/permissions.ts","../../src/components/auth/PermissionGuard.tsx"],"sourcesContent":["import { User } from \"./auth\";\n\n// Define granular permissions\nexport interface Permission {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n}\n\nexport interface Role {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[];\n  isDefault?: boolean;\n}\n\n// System permissions\nexport const PERMISSIONS: Record<string, Permission> = {\n  // User Management\n  'users.view': { id: 'users.view', name: 'View Users', description: 'View user profiles and information', category: 'User Management' },\n  'users.create': { id: 'users.create', name: 'Create Users', description: 'Create new user accounts', category: 'User Management' },\n  'users.edit': { id: 'users.edit', name: 'Edit Users', description: 'Modify user profiles and settings', category: 'User Management' },\n  'users.delete': { id: 'users.delete', name: 'Delete Users', description: 'Delete user accounts', category: 'User Management' },\n  'users.manage_roles': { id: 'users.manage_roles', name: 'Manage User Roles', description: 'Assign and modify user roles', category: 'User Management' },\n\n  // Trading & Signals\n  'signals.view': { id: 'signals.view', name: 'View Signals', description: 'View trading signals', category: 'Trading' },\n  'signals.create': { id: 'signals.create', name: 'Create Signals', description: 'Create and send trading signals', category: 'Trading' },\n  'signals.manage': { id: 'signals.manage', name: 'Manage Signals', description: 'Edit and delete trading signals', category: 'Trading' },\n  'trading.playground': { id: 'trading.playground', name: 'Trading Playground', description: 'Access trading simulation', category: 'Trading' },\n\n  // Analytics & Charts\n  'analytics.basic': { id: 'analytics.basic', name: 'Basic Analytics', description: 'View basic charts and analytics', category: 'Analytics' },\n  'analytics.advanced': { id: 'analytics.advanced', name: 'Advanced Analytics', description: 'Access advanced analytics features', category: 'Analytics' },\n  'analytics.heatmap': { id: 'analytics.heatmap', name: 'Heatmap Analysis', description: 'View 200-week heatmap analysis', category: 'Analytics' },\n  'analytics.cycle': { id: 'analytics.cycle', name: 'Cycle Forecasting', description: 'Access cycle forecasting tools', category: 'Analytics' },\n  'analytics.portfolio': { id: 'analytics.portfolio', name: 'Portfolio Management', description: 'Advanced portfolio analytics', category: 'Analytics' },\n\n  // Alerts & Notifications\n  'alerts.email': { id: 'alerts.email', name: 'Email Alerts', description: 'Send and receive email alerts', category: 'Alerts' },\n  'alerts.sms': { id: 'alerts.sms', name: 'SMS Alerts', description: 'Send and receive SMS alerts', category: 'Alerts' },\n  'alerts.telegram': { id: 'alerts.telegram', name: 'Telegram Alerts', description: 'Send and receive Telegram alerts', category: 'Alerts' },\n  'alerts.advanced': { id: 'alerts.advanced', name: 'Advanced Alerts', description: 'Create complex alert conditions', category: 'Alerts' },\n  'alerts.manage': { id: 'alerts.manage', name: 'Manage Alerts', description: 'Configure alert system', category: 'Alerts' },\n\n  // Admin Functions\n  'admin.dashboard': { id: 'admin.dashboard', name: 'Admin Dashboard', description: 'Access admin dashboard', category: 'Administration' },\n  'admin.logs': { id: 'admin.logs', name: 'View Logs', description: 'View system and audit logs', category: 'Administration' },\n  'admin.system': { id: 'admin.system', name: 'System Settings', description: 'Modify system configuration', category: 'Administration' },\n  'admin.tickers': { id: 'admin.tickers', name: 'Manage Tickers', description: 'Enable/disable trading pairs', category: 'Administration' },\n  'admin.webhooks': { id: 'admin.webhooks', name: 'Manage Webhooks', description: 'Configure webhook integrations', category: 'Administration' },\n\n  // Subscription Management\n  'subscriptions.view': { id: 'subscriptions.view', name: 'View Subscriptions', description: 'View subscription information', category: 'Subscriptions' },\n  'subscriptions.manage': { id: 'subscriptions.manage', name: 'Manage Subscriptions', description: 'Modify subscription tiers', category: 'Subscriptions' },\n  'subscriptions.billing': { id: 'subscriptions.billing', name: 'Billing Management', description: 'Access billing and payment info', category: 'Subscriptions' },\n\n  // API Access\n  'api.basic': { id: 'api.basic', name: 'Basic API Access', description: 'Access basic API endpoints', category: 'API' },\n  'api.advanced': { id: 'api.advanced', name: 'Advanced API Access', description: 'Access advanced API features', category: 'API' },\n  'api.admin': { id: 'api.admin', name: 'Admin API Access', description: 'Access administrative API endpoints', category: 'API' },\n};\n\n// System roles with permissions\nexport const ROLES: Record<string, Role> = {\n  user: {\n    id: 'user',\n    name: 'User',\n    description: 'Standard user with basic features',\n    isDefault: true,\n    permissions: [\n      'signals.view',\n      'analytics.basic',\n      'alerts.email',\n      'subscriptions.view',\n      'api.basic',\n    ]\n  },\n  \n  basic_user: {\n    id: 'basic_user', \n    name: 'Basic User',\n    description: 'Basic subscription with enhanced features',\n    permissions: [\n      'signals.view',\n      'analytics.basic',\n      'analytics.heatmap',\n      'trading.playground',\n      'alerts.email',\n      'alerts.sms',\n      'subscriptions.view',\n      'api.basic',\n    ]\n  },\n\n  premium_user: {\n    id: 'premium_user',\n    name: 'Premium User', \n    description: 'Premium subscription with advanced features',\n    permissions: [\n      'signals.view',\n      'analytics.basic',\n      'analytics.advanced',\n      'analytics.heatmap',\n      'analytics.cycle',\n      'analytics.portfolio',\n      'trading.playground',\n      'alerts.email',\n      'alerts.sms',\n      'alerts.telegram',\n      'alerts.advanced',\n      'subscriptions.view',\n      'subscriptions.billing',\n      'api.basic',\n      'api.advanced',\n    ]\n  },\n\n  pro_user: {\n    id: 'pro_user',\n    name: 'Pro User',\n    description: 'Pro subscription with all user features',\n    permissions: [\n      'signals.view',\n      'analytics.basic',\n      'analytics.advanced', \n      'analytics.heatmap',\n      'analytics.cycle',\n      'analytics.portfolio',\n      'trading.playground',\n      'alerts.email',\n      'alerts.sms',\n      'alerts.telegram',\n      'alerts.advanced',\n      'subscriptions.view',\n      'subscriptions.billing',\n      'api.basic',\n      'api.advanced',\n    ]\n  },\n\n  admin: {\n    id: 'admin',\n    name: 'Administrator',\n    description: 'System administrator with management privileges',\n    permissions: [\n      // All pro user permissions\n      'signals.view',\n      'analytics.basic',\n      'analytics.advanced', \n      'analytics.heatmap',\n      'analytics.cycle',\n      'analytics.portfolio',\n      'trading.playground',\n      'alerts.email',\n      'alerts.sms',\n      'alerts.telegram',\n      'alerts.advanced',\n      'subscriptions.view',\n      'subscriptions.billing',\n      'api.basic',\n      'api.advanced',\n      // Admin-specific permissions\n      'users.view',\n      'users.create',\n      'users.edit',\n      'users.delete',\n      'users.manage_roles',\n      'signals.create',\n      'signals.manage',\n      'alerts.manage',\n      'admin.dashboard',\n      'admin.logs',\n      'admin.system',\n      'admin.tickers',\n      'admin.webhooks',\n      'subscriptions.manage',\n      'api.admin',\n    ]\n  },\n\n  superuser: {\n    id: 'superuser',\n    name: 'Super User',\n    description: 'Full system access with all permissions',\n    permissions: [\n      // All permissions manually listed to avoid Object.keys issue\n      'users.view', 'users.create', 'users.edit', 'users.delete', 'users.manage_roles',\n      'signals.view', 'signals.create', 'signals.manage',\n      'trading.playground',\n      'analytics.basic', 'analytics.advanced', 'analytics.heatmap', 'analytics.cycle', 'analytics.portfolio',\n      'alerts.email', 'alerts.sms', 'alerts.telegram', 'alerts.advanced', 'alerts.manage',\n      'admin.dashboard', 'admin.logs', 'admin.system', 'admin.tickers', 'admin.webhooks',\n      'subscriptions.view', 'subscriptions.manage', 'subscriptions.billing',\n      'api.basic', 'api.advanced', 'api.admin',\n    ]\n  }\n};\n\n// Permission checking functions\nexport class PermissionManager {\n  static hasPermission(user: User | null, permission: string): boolean {\n    if (!user) return false;\n    \n    // Get role-based permissions\n    const rolePermissions = this.getRolePermissions(user.role);\n    \n    // Check subscription-based permissions\n    const subscriptionPermissions = this.getSubscriptionPermissions(user.subscriptionTier);\n    \n    // Combine permissions\n    const allPermissions = [...rolePermissions, ...subscriptionPermissions];\n    \n    return allPermissions.includes(permission);\n  }\n\n  static hasAnyPermission(user: User | null, permissions: string[]): boolean {\n    if (!user) return false;\n    return permissions.some(permission => this.hasPermission(user, permission));\n  }\n\n  static hasAllPermissions(user: User | null, permissions: string[]): boolean {\n    if (!user) return false;\n    return permissions.every(permission => this.hasPermission(user, permission));\n  }\n\n  static getRolePermissions(role: string): string[] {\n    const roleObj = ROLES[role];\n    if (!roleObj) return ROLES.user.permissions;\n    return roleObj.permissions;\n  }\n\n  static getSubscriptionPermissions(tier: string): string[] {\n    // Map subscription tiers to role-based permissions\n    const tierRoleMap: Record<string, string> = {\n      'free': 'user',\n      'basic': 'basic_user',\n      'premium': 'premium_user', \n      'pro': 'pro_user'\n    };\n    \n    const mappedRole = tierRoleMap[tier] || 'user';\n    return this.getRolePermissions(mappedRole);\n  }\n\n  static canAccessFeature(user: User | null, feature: string): boolean {\n    // Map features to required permissions\n    const featurePermissionMap: Record<string, string> = {\n      'heatmapAnalysis': 'analytics.heatmap',\n      'cycleForecasting': 'analytics.cycle',\n      'advancedAnalytics': 'analytics.advanced',\n      'tradingPlayground': 'trading.playground',\n      'advancedAlerts': 'alerts.advanced',\n      'portfolioManagement': 'analytics.portfolio',\n      'smsAlerts': 'alerts.sms',\n      'telegramAlerts': 'alerts.telegram',\n    };\n    \n    const requiredPermission = featurePermissionMap[feature];\n    if (!requiredPermission) return true; // Feature doesn't require special permission\n    \n    return this.hasPermission(user, requiredPermission);\n  }\n\n  static getUserPermissions(user: User | null): string[] {\n    if (!user) return [];\n    \n    const rolePermissions = this.getRolePermissions(user.role);\n    const subscriptionPermissions = this.getSubscriptionPermissions(user.subscriptionTier);\n    \n    // Combine and deduplicate\n    return [...new Set([...rolePermissions, ...subscriptionPermissions])];\n  }\n\n  static canAccessRoute(user: User | null, route: string): boolean {\n    // Define route access requirements\n    const routePermissions: Record<string, string[]> = {\n      '/admin': ['admin.dashboard'],\n      '/admin/users': ['users.view'],\n      '/admin/signals': ['signals.manage'],\n      '/admin/tickers': ['admin.tickers'],\n      '/admin/alerts': ['alerts.manage'],\n      '/admin/logs': ['admin.logs'],\n      '/admin/analytics': ['analytics.advanced'],\n      '/trading-playground': ['trading.playground'],\n      '/advanced-portfolio': ['analytics.portfolio'],\n      '/advanced-alerts': ['alerts.advanced'],\n    };\n    \n    const requiredPermissions = routePermissions[route];\n    if (!requiredPermissions) return true; // Route doesn't require special permissions\n    \n    return this.hasAnyPermission(user, requiredPermissions);\n  }\n}\n\n// Hook for permission checking\nexport function usePermissions() {\n  return {\n    PermissionManager,\n    PERMISSIONS,\n    ROLES,\n  };\n}","import React from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { PermissionManager } from \"@/lib/permissions\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { Lock, Shield, AlertTriangle, ArrowRight } from \"lucide-react\";\n\ninterface PermissionGuardProps {\n  children: React.ReactNode;\n  permission?: string;\n  permissions?: string[];\n  requireAll?: boolean; // true = need ALL permissions, false = need ANY permission\n  fallback?: React.ReactNode;\n  showUpgrade?: boolean;\n  feature?: string; // For feature-based access\n}\n\nexport function PermissionGuard({ \n  children, \n  permission,\n  permissions = [],\n  requireAll = false,\n  fallback, \n  showUpgrade = true,\n  feature\n}: PermissionGuardProps) {\n  const { user } = useAuth();\n  \n  // Determine access based on permission type\n  let hasAccess = false;\n  let deniedReason = \"\";\n  \n  if (feature) {\n    // Feature-based access check\n    hasAccess = PermissionManager.canAccessFeature(user, feature);\n    deniedReason = `Feature '${feature}' requires additional permissions`;\n  } else if (permission) {\n    // Single permission check\n    hasAccess = PermissionManager.hasPermission(user, permission);\n    deniedReason = `This action requires '${permission}' permission`;\n  } else if (permissions.length > 0) {\n    // Multiple permissions check\n    hasAccess = requireAll \n      ? PermissionManager.hasAllPermissions(user, permissions)\n      : PermissionManager.hasAnyPermission(user, permissions);\n    deniedReason = `This action requires ${requireAll ? 'all' : 'one'} of these permissions: ${permissions.join(', ')}`;\n  } else {\n    // No permissions specified, allow access\n    hasAccess = true;\n  }\n  \n  if (hasAccess) {\n    return <>{children}</>;\n  }\n  \n  if (fallback) {\n    return <>{fallback}</>;\n  }\n  \n  if (!showUpgrade) {\n    return null;\n  }\n  \n  return (\n    <Card className=\"border-2 border-dashed border-destructive/20 bg-gradient-to-br from-destructive/5 to-orange/5\">\n      <CardHeader className=\"text-center\">\n        <div className=\"mx-auto w-16 h-16 bg-destructive/10 rounded-full flex items-center justify-center mb-4\">\n          <Shield className=\"h-8 w-8 text-destructive\" />\n        </div>\n        <CardTitle className=\"flex items-center justify-center gap-2\">\n          <Lock className=\"h-5 w-5 text-destructive\" />\n          Access Restricted\n        </CardTitle>\n        <CardDescription>\n          {deniedReason}\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"text-center space-y-4\">\n        <div className=\"flex items-center justify-center gap-2\">\n          <span className=\"text-sm text-muted-foreground\">Current Role:</span>\n          <Badge variant=\"outline\">\n            {user?.role || 'Guest'}\n          </Badge>\n          <span className=\"text-sm text-muted-foreground\">Subscription:</span>\n          <Badge variant=\"outline\">\n            {user?.subscriptionTier || 'Free'}\n          </Badge>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Button asChild className=\"w-full\">\n            <Link href=\"/pricing\">\n              <Shield className=\"h-4 w-4 mr-2\" />\n              Upgrade Subscription\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\n            </Link>\n          </Button>\n          \n          <Button variant=\"outline\" asChild className=\"w-full\">\n            <Link href=\"/contact\">\n              <AlertTriangle className=\"h-4 w-4 mr-2\" />\n              Request Access\n            </Link>\n          </Button>\n        </div>\n        \n        <p className=\"text-xs text-muted-foreground\">\n          Contact support if you believe you should have access to this feature\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Specific permission guards for common use cases\nexport function AdminGuard({ children, fallback }: { children: React.ReactNode; fallback?: React.ReactNode }) {\n  return (\n    <PermissionGuard permission=\"admin.dashboard\" fallback={fallback}>\n      {children}\n    </PermissionGuard>\n  );\n}\n\nexport function UserManagementGuard({ children, fallback }: { children: React.ReactNode; fallback?: React.ReactNode }) {\n  return (\n    <PermissionGuard permission=\"users.view\" fallback={fallback}>\n      {children}\n    </PermissionGuard>\n  );\n}\n\nexport function SignalManagementGuard({ children, fallback }: { children: React.ReactNode; fallback?: React.ReactNode }) {\n  return (\n    <PermissionGuard permission=\"signals.manage\" fallback={fallback}>\n      {children}\n    </PermissionGuard>\n  );\n}\n\nexport function AdvancedAnalyticsGuard({ children, fallback }: { children: React.ReactNode; fallback?: React.ReactNode }) {\n  return (\n    <PermissionGuard permission=\"analytics.advanced\" fallback={fallback}>\n      {children}\n    </PermissionGuard>\n  );\n}\n\n// Hook for component-level permission checking\nexport function usePermissionGuard() {\n  const { user } = useAuth();\n  \n  return {\n    hasPermission: (permission: string) => PermissionManager.hasPermission(user, permission),\n    hasAnyPermission: (permissions: string[]) => PermissionManager.hasAnyPermission(user, permissions),\n    hasAllPermissions: (permissions: string[]) => PermissionManager.hasAllPermissions(user, permissions),\n    canAccessFeature: (feature: string) => PermissionManager.canAccessFeature(user, feature),\n    canAccessRoute: (route: string) => PermissionManager.canAccessRoute(user, route),\n    getUserPermissions: () => PermissionManager.getUserPermissions(user),\n    user,\n  };\n}\n\nexport default PermissionGuard;"],"names":["PERMISSIONS","ROLES","PermissionManager","user","permission","rolePermissions","subscriptionPermissions","permissions","role","roleObj","tier","mappedRole","feature","requiredPermission","route","requiredPermissions","PermissionGuard","children","requireAll","fallback","showUpgrade","useAuth","hasAccess","deniedReason","jsxs","Card","CardHeader","jsx","Shield","CardTitle","Lock","CardDescription","CardContent","Badge","Button","Link","ArrowRight","AlertTriangle","AdminGuard"],"mappings":"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"}