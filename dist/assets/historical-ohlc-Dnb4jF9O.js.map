{"version":3,"file":"historical-ohlc-Dnb4jF9O.js","sources":["../../src/components/ohlc/QueryInterface.tsx","../../src/components/ohlc/DataSummary.tsx","../../src/pages/historical-ohlc.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { BarChart3, RefreshCw } from \"lucide-react\";\n\ninterface QueryInterfaceProps {\n  symbol: string;\n  setSymbol: (value: string) => void;\n  interval: string;\n  setInterval: (value: string) => void;\n  limit: number;\n  setLimit: (value: number) => void;\n  startTime: string;\n  setStartTime: (value: string) => void;\n  endTime: string;\n  setEndTime: (value: string) => void;\n  queryParams: string;\n  availableTickers: any[];\n  intervals: Array<{value: string, label: string}>;\n  handleQuery: () => void;\n  refetch: () => void;\n  isLoading: boolean;\n}\n\nexport default function QueryInterface({\n  symbol, setSymbol, interval, setInterval, limit, setLimit,\n  startTime, setStartTime, endTime, setEndTime, queryParams,\n  availableTickers, intervals, handleQuery, refetch, isLoading\n}: QueryInterfaceProps) {\n  return (\n    <Card className=\"p-3 sm:p-4\">\n      <CardHeader className=\"p-0 pb-3\">\n        <CardTitle className=\"text-sm sm:text-base\">OHLC Data Query</CardTitle>\n        <p className=\"text-xs sm:text-sm text-muted-foreground\">\n          Query historical OHLC data with cache-first strategy and Binance fallback\n        </p>\n      </CardHeader>\n      <CardContent className=\"p-0 space-y-4\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\">\n          <div>\n            <Label htmlFor=\"symbol\" className=\"text-xs sm:text-sm\">Symbol</Label>\n            <Select value={symbol} onValueChange={setSymbol}>\n              <SelectTrigger className=\"text-xs sm:text-sm\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {availableTickers?.filter((t: any) => t.enabled).map((ticker: any) => (\n                  <SelectItem key={ticker.symbol} value={ticker.symbol}>\n                    {ticker.symbol}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"interval\" className=\"text-xs sm:text-sm\">Interval</Label>\n            <Select value={interval} onValueChange={setInterval}>\n              <SelectTrigger className=\"text-xs sm:text-sm\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {intervals.map(int => (\n                  <SelectItem key={int.value} value={int.value}>\n                    {int.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          \n          <div>\n            <Label htmlFor=\"limit\" className=\"text-xs sm:text-sm\">Limit (max 5000)</Label>\n            <Input\n              type=\"number\"\n              value={limit}\n              onChange={(e) => setLimit(Math.min(5000, parseInt(e.target.value) || 100))}\n              min=\"1\"\n              max=\"5000\"\n              className=\"text-xs sm:text-sm\"\n            />\n          </div>\n          \n          <div className=\"sm:col-span-2 lg:col-span-1\">\n            <Label htmlFor=\"startTime\" className=\"text-xs sm:text-sm\">Start Time (Optional)</Label>\n            <Input\n              type=\"datetime-local\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              className=\"text-xs sm:text-sm\"\n            />\n          </div>\n          \n          <div className=\"sm:col-span-2 lg:col-span-1\">\n            <Label htmlFor=\"endTime\" className=\"text-xs sm:text-sm\">End Time (Optional)</Label>\n            <Input\n              type=\"datetime-local\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              className=\"text-xs sm:text-sm\"\n            />\n          </div>\n        </div>\n        \n        <div className=\"flex flex-col sm:flex-row gap-2\">\n          <Button onClick={handleQuery} disabled={isLoading} className=\"flex-1 sm:flex-none text-xs sm:text-sm\">\n            {isLoading ? (\n              <RefreshCw className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2 animate-spin\" />\n            ) : (\n              <BarChart3 className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2\" />\n            )}\n            Query OHLC Data\n          </Button>\n          \n          <Button variant=\"outline\" onClick={() => refetch()} className=\"flex-1 sm:flex-none text-xs sm:text-sm\">\n            <RefreshCw className=\"h-3 w-3 sm:h-4 sm:w-4 mr-2\" />\n            Refresh\n          </Button>\n        </div>\n\n        {/* API URL Display */}\n        <div className=\"p-3 bg-muted rounded-lg\">\n          <div className=\"text-xs font-mono break-all\">\n            GET /api/ohlc{queryParams}\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Download, Database, Activity } from \"lucide-react\";\n\ninterface OHLCResponse {\n  symbol: string;\n  interval: string;\n  count: number;\n  cached: boolean;\n  external: boolean;\n  data: Array<{\n    time: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    source: 'cache' | 'binance';\n  }>;\n}\n\ninterface DataSummaryProps {\n  ohlcResponse: OHLCResponse;\n  downloadCSV: () => void;\n}\n\nexport default function DataSummary({ ohlcResponse, downloadCSV }: DataSummaryProps) {\n  const summaryItems = [\n    {\n      label: \"Symbol\",\n      value: ohlcResponse.symbol,\n      color: \"text-blue-500\"\n    },\n    {\n      label: \"Candles\",\n      value: ohlcResponse.count,\n      color: \"text-green-500\"\n    },\n    {\n      label: \"Interval\",\n      value: ohlcResponse.interval,\n      color: \"text-purple-500\"\n    },\n    {\n      label: \"Source\",\n      value: ohlcResponse.cached ? (\n        <div className=\"flex items-center justify-center text-orange-500\">\n          <Database className=\"h-3 w-3 sm:h-5 sm:w-5 mr-1\" />\n          <span className=\"hidden sm:inline\">Cache</span>\n        </div>\n      ) : (\n        <div className=\"flex items-center justify-center text-orange-500\">\n          <Activity className=\"h-3 w-3 sm:h-5 sm:w-5 mr-1\" />\n          <span className=\"hidden sm:inline\">Live</span>\n        </div>\n      ),\n      color: \"text-orange-500\"\n    },\n    {\n      label: \"Data Type\",\n      value: ohlcResponse.external ? 'External' : 'Cached',\n      color: \"text-pink-500\"\n    }\n  ];\n\n  return (\n    <Card className=\"p-3 sm:p-4\">\n      <CardHeader className=\"p-0 pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-sm sm:text-base\">Data Summary</CardTitle>\n          <Button variant=\"outline\" size=\"sm\" onClick={downloadCSV} className=\"text-xs\">\n            <Download className=\"h-3 w-3 sm:h-4 sm:w-4 mr-1 sm:mr-2\" />\n            <span className=\"hidden sm:inline\">Export </span>CSV\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-0\">\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-5 gap-3 sm:gap-4\">\n          {summaryItems.map((item, index) => (\n            <div key={index} className=\"text-center p-3 border rounded-lg\">\n              <div className={`text-lg sm:text-2xl font-bold ${item.color}`}>\n                {typeof item.value === 'object' ? item.value : item.value}\n              </div>\n              <div className=\"text-xs sm:text-sm text-muted-foreground\">{item.label}</div>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport Sidebar from '@/components/layout/Sidebar';\nimport Header from '@/components/layout/Header';\nimport SubscriptionGuard from '@/components/auth/SubscriptionGuard';\nimport QueryInterface from '@/components/ohlc/QueryInterface';\nimport DataSummary from '@/components/ohlc/DataSummary';\nimport ImplementationStatus from '@/components/streaming/ImplementationStatus';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  Database,\n  CheckCircle\n} from 'lucide-react';\n\ninterface OHLCResponse {\n  symbol: string;\n  interval: string;\n  count: number;\n  cached: boolean;\n  external: boolean;\n  data: Array<{\n    time: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    source: 'cache' | 'binance';\n  }>;\n}\n\nexport default function HistoricalOHLC() {\n  const [symbol, setSymbol] = useState('BTCUSDT');\n  const [interval, setInterval] = useState('1h');\n  const [limit, setLimit] = useState(100);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [queryParams, setQueryParams] = useState('?symbol=BTCUSDT&interval=1h&limit=100');\n\n  // Fetch available tickers for validation\n  const { data: availableTickers } = useQuery({\n    queryKey: ['/api/tickers/enabled'],\n  });\n\n  // Ensure availableTickers is an array to prevent map errors\n  const safeAvailableTickers = Array.isArray(availableTickers) ? availableTickers : [];\n\n  // Fetch OHLC data\n  const { data: ohlcResponse, isLoading, error, refetch } = useQuery<OHLCResponse>({\n    queryKey: [`/api/ohlc${queryParams}`],\n    enabled: !!queryParams,\n  });\n\n  const intervals = [\n    { value: '1m', label: '1 Minute' },\n    { value: '5m', label: '5 Minutes' },\n    { value: '15m', label: '15 Minutes' },\n    { value: '30m', label: '30 Minutes' },\n    { value: '1h', label: '1 Hour' },\n    { value: '4h', label: '4 Hours' },\n    { value: '12h', label: '12 Hours' },\n    { value: '1d', label: '1 Day' },\n    { value: '1w', label: '1 Week' },\n    { value: '1M', label: '1 Month' }\n  ];\n\n  const handleQuery = () => {\n    let params = `?symbol=${symbol}&interval=${interval}&limit=${limit}`;\n    if (startTime) params += `&startTime=${startTime}`;\n    if (endTime) params += `&endTime=${endTime}`;\n    setQueryParams(params);\n  };\n\n  const downloadCSV = () => {\n    if (!ohlcResponse?.data.length) return;\n\n    const headers = ['Time', 'Open', 'High', 'Low', 'Close', 'Volume', 'Source'];\n    const csvContent = [\n      headers.join(','),\n      ...ohlcResponse.data.map(candle => [\n        candle.time,\n        candle.open,\n        candle.high,\n        candle.low,\n        candle.close,\n        candle.volume,\n        candle.source\n      ].join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${symbol}_${interval}_ohlc.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const implementationStatus = [\n    {\n      feature: \"Supabase Edge Function: GET /api/ohlc\",\n      status: \"implemented\",\n      description: \"RESTful endpoint with comprehensive parameter validation and error handling\"\n    },\n    {\n      feature: \"OHLC Cache Lookup with Binance Fallback\",\n      status: \"implemented\", \n      description: \"Intelligent cache-first strategy with automatic Binance REST API fallback\"\n    },\n    {\n      feature: \"Normalize and Upsert OHLC Data\",\n      status: \"implemented\",\n      description: \"Binance kline format normalization with upsert operations to ohlc_cache table\"\n    },\n    {\n      feature: \"Ticker Validation Against available_tickers\",\n      status: \"implemented\",\n      description: \"Enforces validation against enabled tickers in available_tickers table\"\n    },\n    {\n      feature: \"Unit Tests for GET /api/ohlc\",\n      status: \"implemented\",\n      description: \"Comprehensive Jest test suite covering validation, caching, normalization, and error handling\"\n    }\n  ];\n\n\n\n  const formatPrice = (price: number) => {\n    return price.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 8 });\n  };\n\n  const formatVolume = (volume: number) => {\n    return volume.toLocaleString(undefined, { maximumFractionDigits: 2 });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"flex\">\n        <Sidebar />\n        \n        <div className=\"ml-0 md:ml-64 flex-1\">\n          <Header title=\"Historical OHLC Service\" />\n          \n          <div className=\"p-3 sm:p-4 lg:p-6 space-y-4 sm:space-y-6\">\n            {/* Page Header */}\n            <div className=\"flex items-center justify-between flex-wrap gap-2\">\n              <div className=\"flex items-center space-x-2 sm:space-x-3\">\n                <Database className=\"h-5 w-5 sm:h-6 sm:w-6 text-blue-500\" />\n                <h1 className=\"text-lg sm:text-2xl font-bold\">\n                  <span className=\"hidden sm:inline\">Historical OHLC Service</span>\n                  <span className=\"sm:hidden\">OHLC Service</span>\n                </h1>\n              </div>\n              <Badge variant=\"outline\" className=\"text-green-600 border-green-600 text-xs px-2 py-1\">\n                <span className=\"hidden sm:inline\">All Features </span>Implemented\n              </Badge>\n            </div>\n\n            {/* Implementation Status */}\n            <ImplementationStatus features={implementationStatus} />\n\n            {/* OHLC Query Interface */}\n            <Tabs defaultValue=\"query\" className=\"space-y-4 sm:space-y-6\">\n              <TabsList className=\"grid w-full grid-cols-3 gap-1\">\n                <TabsTrigger value=\"query\" className=\"text-xs sm:text-sm\">\n                  <span className=\"hidden sm:inline\">Query </span>Interface\n                </TabsTrigger>\n                <TabsTrigger value=\"data\" className=\"text-xs sm:text-sm\">Data View</TabsTrigger>\n                <TabsTrigger value=\"testing\" className=\"text-xs sm:text-sm\">\n                  <span className=\"hidden sm:inline\">API </span>Testing\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"query\" className=\"space-y-4 sm:space-y-6\">\n                <QueryInterface\n                  symbol={symbol}\n                  setSymbol={setSymbol}\n                  interval={interval}\n                  setInterval={setInterval}\n                  limit={limit}\n                  setLimit={setLimit}\n                  startTime={startTime}\n                  setStartTime={setStartTime}\n                  endTime={endTime}\n                  setEndTime={setEndTime}\n                  queryParams={queryParams}\n                  availableTickers={safeAvailableTickers}\n                  intervals={intervals}\n                  handleQuery={handleQuery}\n                  refetch={refetch}\n                  isLoading={isLoading}\n                />\n              </TabsContent>\n\n              <TabsContent value=\"data\" className=\"space-y-4 sm:space-y-6\">\n                {error && (\n                  <Card className=\"border-red-200 dark:border-red-800 p-3 sm:p-4\">\n                    <CardContent className=\"p-0\">\n                      <div className=\"text-red-600 dark:text-red-400 text-xs sm:text-sm\">\n                        Error: {(error as any).message}\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {ohlcResponse && (\n                  <>\n                    {/* Data Summary */}\n                    <DataSummary ohlcResponse={ohlcResponse} downloadCSV={downloadCSV} />\n\n                    {/* OHLC Data Table */}\n                    <Card>\n                      <CardHeader>\n                        <CardTitle>OHLC Candles</CardTitle>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"overflow-x-auto\">\n                          <table className=\"w-full text-sm\">\n                            <thead>\n                              <tr className=\"border-b\">\n                                <th className=\"text-left p-2\">Time</th>\n                                <th className=\"text-right p-2\">Open</th>\n                                <th className=\"text-right p-2\">High</th>\n                                <th className=\"text-right p-2\">Low</th>\n                                <th className=\"text-right p-2\">Close</th>\n                                <th className=\"text-right p-2\">Volume</th>\n                                <th className=\"text-center p-2\">Source</th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {ohlcResponse.data.slice(0, 50).map((candle, index) => (\n                                <tr key={index} className=\"border-b hover:bg-muted/20\">\n                                  <td className=\"p-2 font-mono text-xs\">\n                                    {new Date(candle.time).toLocaleString()}\n                                  </td>\n                                  <td className=\"p-2 text-right font-mono\">\n                                    {formatPrice(candle.open)}\n                                  </td>\n                                  <td className=\"p-2 text-right font-mono text-green-600\">\n                                    {formatPrice(candle.high)}\n                                  </td>\n                                  <td className=\"p-2 text-right font-mono text-red-600\">\n                                    {formatPrice(candle.low)}\n                                  </td>\n                                  <td className=\"p-2 text-right font-mono\">\n                                    {formatPrice(candle.close)}\n                                  </td>\n                                  <td className=\"p-2 text-right font-mono text-xs\">\n                                    {formatVolume(candle.volume)}\n                                  </td>\n                                  <td className=\"p-2 text-center\">\n                                    <Badge variant={candle.source === 'cache' ? 'outline' : 'default'}>\n                                      {candle.source}\n                                    </Badge>\n                                  </td>\n                                </tr>\n                              ))}\n                            </tbody>\n                          </table>\n                          {ohlcResponse.data.length > 50 && (\n                            <div className=\"text-center p-4 text-muted-foreground\">\n                              Showing first 50 of {ohlcResponse.count} candles\n                            </div>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </>\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"testing\" className=\"space-y-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>API Testing Examples</CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-3\">\n                      <div>\n                        <div className=\"text-sm font-medium mb-2\">Basic Query</div>\n                        <div className=\"p-3 bg-muted rounded-lg font-mono text-sm\">\n                          GET /api/ohlc?symbol=BTCUSDT&interval=1h&limit=100\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"text-sm font-medium mb-2\">Time Range Query</div>\n                        <div className=\"p-3 bg-muted rounded-lg font-mono text-sm\">\n                          GET /api/ohlc?symbol=ETHUSDT&interval=4h&startTime=2024-01-01T00:00:00Z&endTime=2024-01-02T00:00:00Z\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"text-sm font-medium mb-2\">Error: Invalid Ticker</div>\n                        <div className=\"p-3 bg-red-50 dark:bg-red-950/20 rounded-lg font-mono text-sm\">\n                          GET /api/ohlc?symbol=INVALID → 400 Bad Request\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"text-sm font-medium mb-2\">Error: Missing Symbol</div>\n                        <div className=\"p-3 bg-red-50 dark:bg-red-950/20 rounded-lg font-mono text-sm\">\n                          GET /api/ohlc → 400 Bad Request\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"pt-4 border-t\">\n                      <div className=\"text-sm font-medium mb-2\">Test Suite Coverage</div>\n                      <div className=\"grid grid-cols-2 lg:grid-cols-3 gap-2\">\n                        {[\n                          'Parameter validation',\n                          'Ticker validation',\n                          'Cache lookup logic',\n                          'Binance API fallback',\n                          'Data normalization',\n                          'Query parameters',\n                          'Response format',\n                          'Error handling',\n                          'Timeout handling',\n                          'Database errors'\n                        ].map((test, index) => (\n                          <div key={index} className=\"flex items-center space-x-2 p-2 border rounded\">\n                            <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                            <span className=\"text-sm\">{test}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":["QueryInterface","symbol","setSymbol","interval","setInterval","limit","setLimit","startTime","setStartTime","endTime","setEndTime","queryParams","availableTickers","intervals","handleQuery","refetch","isLoading","jsxs","Card","CardHeader","jsx","CardTitle","CardContent","Label","Select","SelectTrigger","SelectValue","SelectContent","t","ticker","SelectItem","int","Input","e","Button","RefreshCw","BarChart3","DataSummary","ohlcResponse","downloadCSV","summaryItems","Database","Activity","Download","item","index","HistoricalOHLC","useState","setQueryParams","useQuery","safeAvailableTickers","error","params","csvContent","candle","blob","url","a","implementationStatus","formatPrice","price","formatVolume","volume","Sidebar","Header","Badge","ImplementationStatus","Tabs","TabsList","TabsTrigger","TabsContent","Fragment","test","CheckCircle"],"mappings":"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"}