{"version":3,"file":"SubscriptionGuard-BSUQsUEM.js","sources":["../../src/components/auth/SubscriptionGuard.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { hasAccess, getUpgradeMessage, getPlanBadgeColor } from \"@/lib/subscriptionUtils\";\nimport { PermissionManager } from \"@/lib/permissions\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Link } from \"wouter\";\nimport { Lock, Crown, Zap, Star, ArrowRight } from \"lucide-react\";\n\ninterface SubscriptionGuardProps {\n  children: React.ReactNode;\n  feature: string;\n  fallback?: React.ReactNode;\n  showUpgrade?: boolean;\n}\n\nexport default function SubscriptionGuard({ \n  children, \n  feature, \n  fallback, \n  showUpgrade = true \n}: SubscriptionGuardProps) {\n  const { user } = useAuth();\n  const userTier = user?.subscriptionTier || \"free\";\n  \n  // Debug logging\n  console.log(`SubscriptionGuard DEBUG: feature=${feature}, userTier=${userTier}, user=`, user);\n  \n  // Strict subscription-based access control - NO FALLBACK ALLOWED\n  const hasFeatureAccess = hasAccess(userTier, feature as any);\n  \n  console.log(`SubscriptionGuard DEBUG: hasFeatureAccess=${hasFeatureAccess} for ${feature}`);\n  \n  // CRITICAL: Only allow access if user truly has the required subscription\n  if (hasFeatureAccess) {\n    return <>{children}</>;\n  }\n  \n  // NO FALLBACK - This prevents unauthorized access to premium features\n  \n  if (!showUpgrade) {\n    return null;\n  }\n  \n  return (\n    <Card className=\"border-2 border-dashed border-primary/20 bg-gradient-to-br from-primary/5 to-secondary/5\">\n      <CardHeader className=\"text-center\">\n        <div className=\"mx-auto w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n          <Lock className=\"h-8 w-8 text-primary\" />\n        </div>\n        <CardTitle className=\"flex items-center justify-center gap-2\">\n          <Crown className=\"h-5 w-5 text-yellow-500\" />\n          Premium Feature\n        </CardTitle>\n        <CardDescription>\n          {getUpgradeMessage(feature)}\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"text-center space-y-4\">\n        <div className=\"flex items-center justify-center gap-2\">\n          <span className=\"text-sm text-muted-foreground\">Current Plan:</span>\n          <Badge className={getPlanBadgeColor(userTier)}>\n            {userTier.charAt(0).toUpperCase() + userTier.slice(1)}\n          </Badge>\n        </div>\n        \n        <div className=\"space-y-2\">\n          <Button asChild className=\"w-full\">\n            <Link href=\"/pricing\">\n              <Zap className=\"h-4 w-4 mr-2\" />\n              Upgrade Now\n              <ArrowRight className=\"h-4 w-4 ml-2\" />\n            </Link>\n          </Button>\n          \n          <Button variant=\"outline\" asChild className=\"w-full\">\n            <Link href=\"/subscription\">\n              <Star className=\"h-4 w-4 mr-2\" />\n              View Plans\n            </Link>\n          </Button>\n        </div>\n        \n        <p className=\"text-xs text-muted-foreground\">\n          Unlock this feature and many more with a subscription upgrade\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Hook for feature access checking\nexport function useFeatureAccess(feature: string) {\n  const { user } = useAuth();\n  const userTier = user?.subscriptionTier || \"free\";\n  \n  return {\n    hasAccess: hasAccess(userTier, feature as any),\n    userTier,\n    upgradeMessage: getUpgradeMessage(feature),\n  };\n}"],"names":["SubscriptionGuard","children","feature","fallback","showUpgrade","user","useAuth","userTier","hasFeatureAccess","hasAccess","jsxs","Card","CardHeader","jsx","Lock","CardTitle","Crown","CardDescription","getUpgradeMessage","CardContent","Badge","getPlanBadgeColor","Button","Link","Zap","ArrowRight","Star"],"mappings":"wMAiBA,SAAwBA,EAAkB,CACxC,SAAAC,EACA,QAAAC,EACA,SAAAC,EACA,YAAAC,EAAc,EAChB,EAA2B,CACnB,KAAA,CAAE,KAAAC,CAAK,EAAIC,EAAQ,EACnBC,GAAWF,GAAA,YAAAA,EAAM,mBAAoB,OAG3C,QAAQ,IAAI,oCAAoCH,CAAO,cAAcK,CAAQ,UAAWF,CAAI,EAGtF,MAAAG,EAAmBC,EAAUF,EAAUL,CAAc,EAK3D,OAHA,QAAQ,IAAI,6CAA6CM,CAAgB,QAAQN,CAAO,EAAE,EAGtFM,oBACQ,SAAAP,EAAS,EAKhBG,EAKHM,EAAA,KAACC,EAAK,CAAA,UAAU,2FACd,SAAA,CAACD,EAAAA,KAAAE,EAAA,CAAW,UAAU,cACpB,SAAA,CAAAC,EAAAA,IAAC,OAAI,UAAU,qFACb,eAACC,EAAK,CAAA,UAAU,uBAAuB,CACzC,CAAA,EACAJ,EAAAA,KAACK,EAAU,CAAA,UAAU,yCACnB,SAAA,CAACF,EAAAA,IAAAG,EAAA,CAAM,UAAU,yBAA0B,CAAA,EAAE,iBAAA,EAE/C,EACCH,EAAAA,IAAAI,EAAA,CACE,SAAkBC,EAAAhB,CAAO,CAC5B,CAAA,CAAA,EACF,EAEAQ,EAAAA,KAACS,EAAY,CAAA,UAAU,wBACrB,SAAA,CAACT,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACG,EAAA,IAAA,OAAA,CAAK,UAAU,gCAAgC,SAAa,gBAAA,EAC5DA,EAAA,IAAAO,EAAA,CAAM,UAAWC,EAAkBd,CAAQ,EACzC,SAAAA,EAAS,OAAO,CAAC,EAAE,YAAY,EAAIA,EAAS,MAAM,CAAC,CACtD,CAAA,CAAA,EACF,EAEAG,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACG,EAAAA,IAAAS,EAAA,CAAO,QAAO,GAAC,UAAU,SACxB,SAACZ,EAAA,KAAAa,EAAA,CAAK,KAAK,WACT,SAAA,CAACV,EAAAA,IAAAW,EAAA,CAAI,UAAU,cAAe,CAAA,EAAE,cAEhCX,EAAAA,IAACY,EAAW,CAAA,UAAU,cAAe,CAAA,CAAA,CAAA,CACvC,CACF,CAAA,EAEAZ,EAAA,IAACS,EAAO,CAAA,QAAQ,UAAU,QAAO,GAAC,UAAU,SAC1C,SAAAZ,EAAAA,KAACa,EAAK,CAAA,KAAK,gBACT,SAAA,CAACV,EAAAA,IAAAa,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,YAAA,CAAA,CAEnC,CACF,CAAA,CAAA,EACF,EAECb,EAAA,IAAA,IAAA,CAAE,UAAU,gCAAgC,SAE7C,+DAAA,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EA/CO,IAiDX"}